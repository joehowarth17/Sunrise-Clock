ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RTC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.changeHourMode,"ax",%progbits
  18              		.align	2
  19              		.global	changeHourMode
  20              		.code	16
  21              		.thumb_func
  22              		.type	changeHourMode, %function
  23              	changeHourMode:
  24              	.LFB34:
  25              		.file 1 "RTC.c"
   1:RTC.c         **** /* ========================================
   2:RTC.c         ****  *
   3:RTC.c         ****  * Copyright YOUR COMPANY, THE YEAR
   4:RTC.c         ****  * All Rights Reserved
   5:RTC.c         ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:RTC.c         ****  *
   7:RTC.c         ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:RTC.c         ****  * WHICH IS THE PROPERTY OF your company.
   9:RTC.c         ****  *
  10:RTC.c         ****  * ========================================
  11:RTC.c         **** */
  12:RTC.c         **** 
  13:RTC.c         **** #include <RTC.h>
  14:RTC.c         **** #include <stdio.h>
  15:RTC.c         **** 
  16:RTC.c         **** void changeHourMode(uint8 mode){
  26              		.loc 1 16 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              		.cfi_def_cfa_offset 12
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 85B0     		sub	sp, sp, #20
  34              		.cfi_def_cfa_offset 32
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 021C     		mov	r2, r0
  38 0008 FB1D     		add	r3, r7, #7
  39 000a 1A70     		strb	r2, [r3]
  17:RTC.c         ****     
  18:RTC.c         ****     uint8 controlReg = readReg(CONTROL_REG_1);
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 2


  40              		.loc 1 18 0
  41 000c 0E23     		mov	r3, #14
  42 000e FC18     		add	r4, r7, r3
  43 0010 0020     		mov	r0, #0
  44 0012 FFF7FEFF 		bl	readReg
  45 0016 031C     		mov	r3, r0
  46 0018 2370     		strb	r3, [r4]
  19:RTC.c         ****     uint8 value;
  20:RTC.c         **** 
  21:RTC.c         ****     if(mode == HOURMODE_12){
  47              		.loc 1 21 0
  48 001a FB1D     		add	r3, r7, #7
  49 001c 1B78     		ldrb	r3, [r3]
  50 001e 082B     		cmp	r3, #8
  51 0020 08D1     		bne	.L2
  22:RTC.c         ****         
  23:RTC.c         ****         value = controlReg | HOURMODE_12;
  52              		.loc 1 23 0
  53 0022 0F23     		mov	r3, #15
  54 0024 FB18     		add	r3, r7, r3
  55 0026 0E22     		mov	r2, #14
  56 0028 BA18     		add	r2, r7, r2
  57 002a 1278     		ldrb	r2, [r2]
  58 002c 0821     		mov	r1, #8
  59 002e 0A43     		orr	r2, r1
  60 0030 1A70     		strb	r2, [r3]
  61 0032 0BE0     		b	.L3
  62              	.L2:
  24:RTC.c         ****     }
  25:RTC.c         ****     else if(mode == HOURMODE_24){
  63              		.loc 1 25 0
  64 0034 FB1D     		add	r3, r7, #7
  65 0036 1B78     		ldrb	r3, [r3]
  66 0038 F72B     		cmp	r3, #247
  67 003a 07D1     		bne	.L3
  26:RTC.c         ****         
  27:RTC.c         ****         value = controlReg & HOURMODE_24; 
  68              		.loc 1 27 0
  69 003c 0F23     		mov	r3, #15
  70 003e FB18     		add	r3, r7, r3
  71 0040 0E22     		mov	r2, #14
  72 0042 BA18     		add	r2, r7, r2
  73 0044 1278     		ldrb	r2, [r2]
  74 0046 0821     		mov	r1, #8
  75 0048 8A43     		bic	r2, r1
  76 004a 1A70     		strb	r2, [r3]
  77              	.L3:
  28:RTC.c         ****     }
  29:RTC.c         ****     
  30:RTC.c         ****     writeReg(CONTROL_REG_1, value);
  78              		.loc 1 30 0
  79 004c 0F23     		mov	r3, #15
  80 004e FB18     		add	r3, r7, r3
  81 0050 1B78     		ldrb	r3, [r3]
  82 0052 0020     		mov	r0, #0
  83 0054 191C     		mov	r1, r3
  84 0056 FFF7FEFF 		bl	writeReg
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 3


  31:RTC.c         **** 
  32:RTC.c         **** }
  85              		.loc 1 32 0
  86 005a BD46     		mov	sp, r7
  87 005c 05B0     		add	sp, sp, #20
  88              		@ sp needed
  89 005e 90BD     		pop	{r4, r7, pc}
  90              		.cfi_endproc
  91              	.LFE34:
  92              		.size	changeHourMode, .-changeHourMode
  93              		.section	.text.changePowerMode,"ax",%progbits
  94              		.align	2
  95              		.global	changePowerMode
  96              		.code	16
  97              		.thumb_func
  98              		.type	changePowerMode, %function
  99              	changePowerMode:
 100              	.LFB35:
  33:RTC.c         **** 
  34:RTC.c         **** void changePowerMode(uint8 mode){
 101              		.loc 1 34 0
 102              		.cfi_startproc
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 82B0     		sub	sp, sp, #8
 108              		.cfi_def_cfa_offset 16
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 111 0006 021C     		mov	r2, r0
 112 0008 FB1D     		add	r3, r7, #7
 113 000a 1A70     		strb	r2, [r3]
  35:RTC.c         ****     
  36:RTC.c         ****     writeReg(CONTROL_REG_3, mode);
 114              		.loc 1 36 0
 115 000c FB1D     		add	r3, r7, #7
 116 000e 1B78     		ldrb	r3, [r3]
 117 0010 0220     		mov	r0, #2
 118 0012 191C     		mov	r1, r3
 119 0014 FFF7FEFF 		bl	writeReg
  37:RTC.c         **** 
  38:RTC.c         **** }
 120              		.loc 1 38 0
 121 0018 BD46     		mov	sp, r7
 122 001a 02B0     		add	sp, sp, #8
 123              		@ sp needed
 124 001c 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE35:
 127              		.size	changePowerMode, .-changePowerMode
 128 001e C046     		.section	.text.setSec,"ax",%progbits
 129              		.align	2
 130              		.global	setSec
 131              		.code	16
 132              		.thumb_func
 133              		.type	setSec, %function
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 4


 134              	setSec:
 135              	.LFB36:
  39:RTC.c         **** 
  40:RTC.c         **** 
  41:RTC.c         **** void setSec(uint8 sec){
 136              		.loc 1 41 0
 137              		.cfi_startproc
 138 0000 90B5     		push	{r4, r7, lr}
 139              		.cfi_def_cfa_offset 12
 140              		.cfi_offset 4, -12
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 85B0     		sub	sp, sp, #20
 144              		.cfi_def_cfa_offset 32
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 147 0006 021C     		mov	r2, r0
 148 0008 FB1D     		add	r3, r7, #7
 149 000a 1A70     		strb	r2, [r3]
  42:RTC.c         **** 
  43:RTC.c         ****     uint8 secondsBCD = encodeSec(sec);
 150              		.loc 1 43 0
 151 000c 0F23     		mov	r3, #15
 152 000e FC18     		add	r4, r7, r3
 153 0010 FB1D     		add	r3, r7, #7
 154 0012 1B78     		ldrb	r3, [r3]
 155 0014 181C     		mov	r0, r3
 156 0016 FFF7FEFF 		bl	encodeSec
 157 001a 031C     		mov	r3, r0
 158 001c 2370     		strb	r3, [r4]
  44:RTC.c         ****     
  45:RTC.c         ****     writeReg(SECONDS_REG, secondsBCD);
 159              		.loc 1 45 0
 160 001e 0F23     		mov	r3, #15
 161 0020 FB18     		add	r3, r7, r3
 162 0022 1B78     		ldrb	r3, [r3]
 163 0024 0320     		mov	r0, #3
 164 0026 191C     		mov	r1, r3
 165 0028 FFF7FEFF 		bl	writeReg
  46:RTC.c         **** }
 166              		.loc 1 46 0
 167 002c BD46     		mov	sp, r7
 168 002e 05B0     		add	sp, sp, #20
 169              		@ sp needed
 170 0030 90BD     		pop	{r4, r7, pc}
 171              		.cfi_endproc
 172              	.LFE36:
 173              		.size	setSec, .-setSec
 174 0032 C046     		.section	.text.getSec,"ax",%progbits
 175              		.align	2
 176              		.global	getSec
 177              		.code	16
 178              		.thumb_func
 179              		.type	getSec, %function
 180              	getSec:
 181              	.LFB37:
  47:RTC.c         **** uint8 getSec(){
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 5


 182              		.loc 1 47 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
  48:RTC.c         **** 
  49:RTC.c         ****     return decodeSec(readReg(SECONDS_REG));
 190              		.loc 1 49 0
 191 0004 0320     		mov	r0, #3
 192 0006 FFF7FEFF 		bl	readReg
 193 000a 031C     		mov	r3, r0
 194 000c 181C     		mov	r0, r3
 195 000e FFF7FEFF 		bl	decodeSec
 196 0012 031C     		mov	r3, r0
  50:RTC.c         **** }
 197              		.loc 1 50 0
 198 0014 181C     		mov	r0, r3
 199 0016 BD46     		mov	sp, r7
 200              		@ sp needed
 201 0018 80BD     		pop	{r7, pc}
 202              		.cfi_endproc
 203              	.LFE37:
 204              		.size	getSec, .-getSec
 205 001a C046     		.section	.text.setMin,"ax",%progbits
 206              		.align	2
 207              		.global	setMin
 208              		.code	16
 209              		.thumb_func
 210              		.type	setMin, %function
 211              	setMin:
 212              	.LFB38:
  51:RTC.c         **** 
  52:RTC.c         **** void setMin(uint8 minutes){
 213              		.loc 1 52 0
 214              		.cfi_startproc
 215 0000 90B5     		push	{r4, r7, lr}
 216              		.cfi_def_cfa_offset 12
 217              		.cfi_offset 4, -12
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 85B0     		sub	sp, sp, #20
 221              		.cfi_def_cfa_offset 32
 222 0004 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
 224 0006 021C     		mov	r2, r0
 225 0008 FB1D     		add	r3, r7, #7
 226 000a 1A70     		strb	r2, [r3]
  53:RTC.c         **** 
  54:RTC.c         ****     uint8 minutesBCD = encodeMin(minutes);
 227              		.loc 1 54 0
 228 000c 0F23     		mov	r3, #15
 229 000e FC18     		add	r4, r7, r3
 230 0010 FB1D     		add	r3, r7, #7
 231 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 6


 232 0014 181C     		mov	r0, r3
 233 0016 FFF7FEFF 		bl	encodeMin
 234 001a 031C     		mov	r3, r0
 235 001c 2370     		strb	r3, [r4]
  55:RTC.c         ****     writeReg(MINUTES_REG,minutesBCD);
 236              		.loc 1 55 0
 237 001e 0F23     		mov	r3, #15
 238 0020 FB18     		add	r3, r7, r3
 239 0022 1B78     		ldrb	r3, [r3]
 240 0024 0420     		mov	r0, #4
 241 0026 191C     		mov	r1, r3
 242 0028 FFF7FEFF 		bl	writeReg
  56:RTC.c         **** 
  57:RTC.c         **** }
 243              		.loc 1 57 0
 244 002c BD46     		mov	sp, r7
 245 002e 05B0     		add	sp, sp, #20
 246              		@ sp needed
 247 0030 90BD     		pop	{r4, r7, pc}
 248              		.cfi_endproc
 249              	.LFE38:
 250              		.size	setMin, .-setMin
 251 0032 C046     		.section	.text.getMin,"ax",%progbits
 252              		.align	2
 253              		.global	getMin
 254              		.code	16
 255              		.thumb_func
 256              		.type	getMin, %function
 257              	getMin:
 258              	.LFB39:
  58:RTC.c         **** uint8 getMin(){
 259              		.loc 1 58 0
 260              		.cfi_startproc
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
  59:RTC.c         **** 
  60:RTC.c         ****     return decodeMin(readReg(MINUTES_REG));
 267              		.loc 1 60 0
 268 0004 0420     		mov	r0, #4
 269 0006 FFF7FEFF 		bl	readReg
 270 000a 031C     		mov	r3, r0
 271 000c 181C     		mov	r0, r3
 272 000e FFF7FEFF 		bl	decodeMin
 273 0012 031C     		mov	r3, r0
  61:RTC.c         **** 
  62:RTC.c         **** }
 274              		.loc 1 62 0
 275 0014 181C     		mov	r0, r3
 276 0016 BD46     		mov	sp, r7
 277              		@ sp needed
 278 0018 80BD     		pop	{r7, pc}
 279              		.cfi_endproc
 280              	.LFE39:
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 7


 281              		.size	getMin, .-getMin
 282 001a C046     		.section	.text.setHours,"ax",%progbits
 283              		.align	2
 284              		.global	setHours
 285              		.code	16
 286              		.thumb_func
 287              		.type	setHours, %function
 288              	setHours:
 289              	.LFB40:
  63:RTC.c         **** 
  64:RTC.c         **** void setHours(uint8 hour){
 290              		.loc 1 64 0
 291              		.cfi_startproc
 292 0000 90B5     		push	{r4, r7, lr}
 293              		.cfi_def_cfa_offset 12
 294              		.cfi_offset 4, -12
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 85B0     		sub	sp, sp, #20
 298              		.cfi_def_cfa_offset 32
 299 0004 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 301 0006 021C     		mov	r2, r0
 302 0008 FB1D     		add	r3, r7, #7
 303 000a 1A70     		strb	r2, [r3]
  65:RTC.c         **** 
  66:RTC.c         ****     uint8 bcdHour = encodeHours24(hour);
 304              		.loc 1 66 0
 305 000c 0F23     		mov	r3, #15
 306 000e FC18     		add	r4, r7, r3
 307 0010 FB1D     		add	r3, r7, #7
 308 0012 1B78     		ldrb	r3, [r3]
 309 0014 181C     		mov	r0, r3
 310 0016 FFF7FEFF 		bl	encodeHours24
 311 001a 031C     		mov	r3, r0
 312 001c 2370     		strb	r3, [r4]
  67:RTC.c         ****     
  68:RTC.c         ****     writeReg(HOURS_REG,bcdHour);
 313              		.loc 1 68 0
 314 001e 0F23     		mov	r3, #15
 315 0020 FB18     		add	r3, r7, r3
 316 0022 1B78     		ldrb	r3, [r3]
 317 0024 0520     		mov	r0, #5
 318 0026 191C     		mov	r1, r3
 319 0028 FFF7FEFF 		bl	writeReg
  69:RTC.c         **** 
  70:RTC.c         **** }
 320              		.loc 1 70 0
 321 002c BD46     		mov	sp, r7
 322 002e 05B0     		add	sp, sp, #20
 323              		@ sp needed
 324 0030 90BD     		pop	{r4, r7, pc}
 325              		.cfi_endproc
 326              	.LFE40:
 327              		.size	setHours, .-setHours
 328 0032 C046     		.section	.text.getHours,"ax",%progbits
 329              		.align	2
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 8


 330              		.global	getHours
 331              		.code	16
 332              		.thumb_func
 333              		.type	getHours, %function
 334              	getHours:
 335              	.LFB41:
  71:RTC.c         **** uint8 getHours(){
 336              		.loc 1 71 0
 337              		.cfi_startproc
 338 0000 90B5     		push	{r4, r7, lr}
 339              		.cfi_def_cfa_offset 12
 340              		.cfi_offset 4, -12
 341              		.cfi_offset 7, -8
 342              		.cfi_offset 14, -4
 343 0002 83B0     		sub	sp, sp, #12
 344              		.cfi_def_cfa_offset 24
 345 0004 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
  72:RTC.c         **** 
  73:RTC.c         ****     uint8 hourBCD = readReg(HOURS_REG);
 347              		.loc 1 73 0
 348 0006 FC1D     		add	r4, r7, #7
 349 0008 0520     		mov	r0, #5
 350 000a FFF7FEFF 		bl	readReg
 351 000e 031C     		mov	r3, r0
 352 0010 2370     		strb	r3, [r4]
  74:RTC.c         ****     
  75:RTC.c         ****     return decodeHours24(hourBCD);
 353              		.loc 1 75 0
 354 0012 FB1D     		add	r3, r7, #7
 355 0014 1B78     		ldrb	r3, [r3]
 356 0016 181C     		mov	r0, r3
 357 0018 FFF7FEFF 		bl	decodeHours24
 358 001c 031C     		mov	r3, r0
  76:RTC.c         **** 
  77:RTC.c         **** }
 359              		.loc 1 77 0
 360 001e 181C     		mov	r0, r3
 361 0020 BD46     		mov	sp, r7
 362 0022 03B0     		add	sp, sp, #12
 363              		@ sp needed
 364 0024 90BD     		pop	{r4, r7, pc}
 365              		.cfi_endproc
 366              	.LFE41:
 367              		.size	getHours, .-getHours
 368 0026 C046     		.section	.text.setDay,"ax",%progbits
 369              		.align	2
 370              		.global	setDay
 371              		.code	16
 372              		.thumb_func
 373              		.type	setDay, %function
 374              	setDay:
 375              	.LFB42:
  78:RTC.c         **** 
  79:RTC.c         **** void setDay(uint8 day){
 376              		.loc 1 79 0
 377              		.cfi_startproc
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 9


 378 0000 90B5     		push	{r4, r7, lr}
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 85B0     		sub	sp, sp, #20
 384              		.cfi_def_cfa_offset 32
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 387 0006 021C     		mov	r2, r0
 388 0008 FB1D     		add	r3, r7, #7
 389 000a 1A70     		strb	r2, [r3]
  80:RTC.c         **** 
  81:RTC.c         ****     uint8 bcdDay = encodeDays(day);
 390              		.loc 1 81 0
 391 000c 0F23     		mov	r3, #15
 392 000e FC18     		add	r4, r7, r3
 393 0010 FB1D     		add	r3, r7, #7
 394 0012 1B78     		ldrb	r3, [r3]
 395 0014 181C     		mov	r0, r3
 396 0016 FFF7FEFF 		bl	encodeDays
 397 001a 031C     		mov	r3, r0
 398 001c 2370     		strb	r3, [r4]
  82:RTC.c         ****     
  83:RTC.c         ****     writeReg(DAYS_REG,bcdDay);
 399              		.loc 1 83 0
 400 001e 0F23     		mov	r3, #15
 401 0020 FB18     		add	r3, r7, r3
 402 0022 1B78     		ldrb	r3, [r3]
 403 0024 0620     		mov	r0, #6
 404 0026 191C     		mov	r1, r3
 405 0028 FFF7FEFF 		bl	writeReg
  84:RTC.c         **** 
  85:RTC.c         **** }
 406              		.loc 1 85 0
 407 002c BD46     		mov	sp, r7
 408 002e 05B0     		add	sp, sp, #20
 409              		@ sp needed
 410 0030 90BD     		pop	{r4, r7, pc}
 411              		.cfi_endproc
 412              	.LFE42:
 413              		.size	setDay, .-setDay
 414 0032 C046     		.section	.text.getDay,"ax",%progbits
 415              		.align	2
 416              		.global	getDay
 417              		.code	16
 418              		.thumb_func
 419              		.type	getDay, %function
 420              	getDay:
 421              	.LFB43:
  86:RTC.c         **** uint8 getDay(){
 422              		.loc 1 86 0
 423              		.cfi_startproc
 424 0000 90B5     		push	{r4, r7, lr}
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 7, -8
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 10


 428              		.cfi_offset 14, -4
 429 0002 83B0     		sub	sp, sp, #12
 430              		.cfi_def_cfa_offset 24
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
  87:RTC.c         **** 
  88:RTC.c         ****     uint8 dayBCD = readReg(DAYS_REG);
 433              		.loc 1 88 0
 434 0006 FC1D     		add	r4, r7, #7
 435 0008 0620     		mov	r0, #6
 436 000a FFF7FEFF 		bl	readReg
 437 000e 031C     		mov	r3, r0
 438 0010 2370     		strb	r3, [r4]
  89:RTC.c         ****     
  90:RTC.c         ****     return decodeHours24(dayBCD);
 439              		.loc 1 90 0
 440 0012 FB1D     		add	r3, r7, #7
 441 0014 1B78     		ldrb	r3, [r3]
 442 0016 181C     		mov	r0, r3
 443 0018 FFF7FEFF 		bl	decodeHours24
 444 001c 031C     		mov	r3, r0
  91:RTC.c         **** 
  92:RTC.c         **** }
 445              		.loc 1 92 0
 446 001e 181C     		mov	r0, r3
 447 0020 BD46     		mov	sp, r7
 448 0022 03B0     		add	sp, sp, #12
 449              		@ sp needed
 450 0024 90BD     		pop	{r4, r7, pc}
 451              		.cfi_endproc
 452              	.LFE43:
 453              		.size	getDay, .-getDay
 454 0026 C046     		.section	.text.setWkDay,"ax",%progbits
 455              		.align	2
 456              		.global	setWkDay
 457              		.code	16
 458              		.thumb_func
 459              		.type	setWkDay, %function
 460              	setWkDay:
 461              	.LFB44:
  93:RTC.c         **** 
  94:RTC.c         **** void setWkDay(uint8 wkday){
 462              		.loc 1 94 0
 463              		.cfi_startproc
 464 0000 90B5     		push	{r4, r7, lr}
 465              		.cfi_def_cfa_offset 12
 466              		.cfi_offset 4, -12
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 85B0     		sub	sp, sp, #20
 470              		.cfi_def_cfa_offset 32
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 021C     		mov	r2, r0
 474 0008 FB1D     		add	r3, r7, #7
 475 000a 1A70     		strb	r2, [r3]
  95:RTC.c         ****     
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 11


  96:RTC.c         ****     uint8 bcdWkday = encodeWeekDay(wkday);
 476              		.loc 1 96 0
 477 000c 0F23     		mov	r3, #15
 478 000e FC18     		add	r4, r7, r3
 479 0010 FB1D     		add	r3, r7, #7
 480 0012 1B78     		ldrb	r3, [r3]
 481 0014 181C     		mov	r0, r3
 482 0016 FFF7FEFF 		bl	encodeWeekDay
 483 001a 031C     		mov	r3, r0
 484 001c 2370     		strb	r3, [r4]
  97:RTC.c         ****     writeReg(WEEKDAY_REG, bcdWkday);
 485              		.loc 1 97 0
 486 001e 0F23     		mov	r3, #15
 487 0020 FB18     		add	r3, r7, r3
 488 0022 1B78     		ldrb	r3, [r3]
 489 0024 0720     		mov	r0, #7
 490 0026 191C     		mov	r1, r3
 491 0028 FFF7FEFF 		bl	writeReg
  98:RTC.c         ****     
  99:RTC.c         **** }
 492              		.loc 1 99 0
 493 002c BD46     		mov	sp, r7
 494 002e 05B0     		add	sp, sp, #20
 495              		@ sp needed
 496 0030 90BD     		pop	{r4, r7, pc}
 497              		.cfi_endproc
 498              	.LFE44:
 499              		.size	setWkDay, .-setWkDay
 500 0032 C046     		.section	.text.getWkDay,"ax",%progbits
 501              		.align	2
 502              		.global	getWkDay
 503              		.code	16
 504              		.thumb_func
 505              		.type	getWkDay, %function
 506              	getWkDay:
 507              	.LFB45:
 100:RTC.c         **** uint8 getWkDay(){
 508              		.loc 1 100 0
 509              		.cfi_startproc
 510 0000 90B5     		push	{r4, r7, lr}
 511              		.cfi_def_cfa_offset 12
 512              		.cfi_offset 4, -12
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 83B0     		sub	sp, sp, #12
 516              		.cfi_def_cfa_offset 24
 517 0004 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 101:RTC.c         **** 
 102:RTC.c         ****     uint8 wkDayBCD = readReg(WEEKDAY_REG);
 519              		.loc 1 102 0
 520 0006 FC1D     		add	r4, r7, #7
 521 0008 0720     		mov	r0, #7
 522 000a FFF7FEFF 		bl	readReg
 523 000e 031C     		mov	r3, r0
 524 0010 2370     		strb	r3, [r4]
 103:RTC.c         ****     
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 12


 104:RTC.c         ****     return decodeWeekDay(wkDayBCD);
 525              		.loc 1 104 0
 526 0012 FB1D     		add	r3, r7, #7
 527 0014 1B78     		ldrb	r3, [r3]
 528 0016 181C     		mov	r0, r3
 529 0018 FFF7FEFF 		bl	decodeWeekDay
 530 001c 031C     		mov	r3, r0
 105:RTC.c         ****     
 106:RTC.c         **** }
 531              		.loc 1 106 0
 532 001e 181C     		mov	r0, r3
 533 0020 BD46     		mov	sp, r7
 534 0022 03B0     		add	sp, sp, #12
 535              		@ sp needed
 536 0024 90BD     		pop	{r4, r7, pc}
 537              		.cfi_endproc
 538              	.LFE45:
 539              		.size	getWkDay, .-getWkDay
 540 0026 C046     		.section	.text.setMonth,"ax",%progbits
 541              		.align	2
 542              		.global	setMonth
 543              		.code	16
 544              		.thumb_func
 545              		.type	setMonth, %function
 546              	setMonth:
 547              	.LFB46:
 107:RTC.c         **** 
 108:RTC.c         **** void setMonth(uint8 month){
 548              		.loc 1 108 0
 549              		.cfi_startproc
 550 0000 90B5     		push	{r4, r7, lr}
 551              		.cfi_def_cfa_offset 12
 552              		.cfi_offset 4, -12
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 85B0     		sub	sp, sp, #20
 556              		.cfi_def_cfa_offset 32
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 559 0006 021C     		mov	r2, r0
 560 0008 FB1D     		add	r3, r7, #7
 561 000a 1A70     		strb	r2, [r3]
 109:RTC.c         **** 
 110:RTC.c         ****     uint8 bcdMonth = encodeMonth(month);
 562              		.loc 1 110 0
 563 000c 0F23     		mov	r3, #15
 564 000e FC18     		add	r4, r7, r3
 565 0010 FB1D     		add	r3, r7, #7
 566 0012 1B78     		ldrb	r3, [r3]
 567 0014 181C     		mov	r0, r3
 568 0016 FFF7FEFF 		bl	encodeMonth
 569 001a 031C     		mov	r3, r0
 570 001c 2370     		strb	r3, [r4]
 111:RTC.c         ****     writeReg(MONTH_REG,bcdMonth);
 571              		.loc 1 111 0
 572 001e 0F23     		mov	r3, #15
 573 0020 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 13


 574 0022 1B78     		ldrb	r3, [r3]
 575 0024 0820     		mov	r0, #8
 576 0026 191C     		mov	r1, r3
 577 0028 FFF7FEFF 		bl	writeReg
 112:RTC.c         ****     
 113:RTC.c         **** }
 578              		.loc 1 113 0
 579 002c BD46     		mov	sp, r7
 580 002e 05B0     		add	sp, sp, #20
 581              		@ sp needed
 582 0030 90BD     		pop	{r4, r7, pc}
 583              		.cfi_endproc
 584              	.LFE46:
 585              		.size	setMonth, .-setMonth
 586 0032 C046     		.section	.text.getMonth,"ax",%progbits
 587              		.align	2
 588              		.global	getMonth
 589              		.code	16
 590              		.thumb_func
 591              		.type	getMonth, %function
 592              	getMonth:
 593              	.LFB47:
 114:RTC.c         **** uint8 getMonth(){
 594              		.loc 1 114 0
 595              		.cfi_startproc
 596 0000 90B5     		push	{r4, r7, lr}
 597              		.cfi_def_cfa_offset 12
 598              		.cfi_offset 4, -12
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601 0002 83B0     		sub	sp, sp, #12
 602              		.cfi_def_cfa_offset 24
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 115:RTC.c         **** 
 116:RTC.c         ****     uint8 monthBCD = readReg(MONTH_REG);
 605              		.loc 1 116 0
 606 0006 FC1D     		add	r4, r7, #7
 607 0008 0820     		mov	r0, #8
 608 000a FFF7FEFF 		bl	readReg
 609 000e 031C     		mov	r3, r0
 610 0010 2370     		strb	r3, [r4]
 117:RTC.c         ****     
 118:RTC.c         ****     return decodeMonth(monthBCD);
 611              		.loc 1 118 0
 612 0012 FB1D     		add	r3, r7, #7
 613 0014 1B78     		ldrb	r3, [r3]
 614 0016 181C     		mov	r0, r3
 615 0018 FFF7FEFF 		bl	decodeMonth
 616 001c 031C     		mov	r3, r0
 119:RTC.c         **** 
 120:RTC.c         **** }
 617              		.loc 1 120 0
 618 001e 181C     		mov	r0, r3
 619 0020 BD46     		mov	sp, r7
 620 0022 03B0     		add	sp, sp, #12
 621              		@ sp needed
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 14


 622 0024 90BD     		pop	{r4, r7, pc}
 623              		.cfi_endproc
 624              	.LFE47:
 625              		.size	getMonth, .-getMonth
 626 0026 C046     		.section	.text.setYear,"ax",%progbits
 627              		.align	2
 628              		.global	setYear
 629              		.code	16
 630              		.thumb_func
 631              		.type	setYear, %function
 632              	setYear:
 633              	.LFB48:
 121:RTC.c         **** 
 122:RTC.c         **** void setYear(uint8 year){
 634              		.loc 1 122 0
 635              		.cfi_startproc
 636 0000 90B5     		push	{r4, r7, lr}
 637              		.cfi_def_cfa_offset 12
 638              		.cfi_offset 4, -12
 639              		.cfi_offset 7, -8
 640              		.cfi_offset 14, -4
 641 0002 85B0     		sub	sp, sp, #20
 642              		.cfi_def_cfa_offset 32
 643 0004 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 645 0006 021C     		mov	r2, r0
 646 0008 FB1D     		add	r3, r7, #7
 647 000a 1A70     		strb	r2, [r3]
 123:RTC.c         **** 
 124:RTC.c         ****     uint8 bcdYear = encodeYear(year);
 648              		.loc 1 124 0
 649 000c 0F23     		mov	r3, #15
 650 000e FC18     		add	r4, r7, r3
 651 0010 FB1D     		add	r3, r7, #7
 652 0012 1B78     		ldrb	r3, [r3]
 653 0014 181C     		mov	r0, r3
 654 0016 FFF7FEFF 		bl	encodeYear
 655 001a 031C     		mov	r3, r0
 656 001c 2370     		strb	r3, [r4]
 125:RTC.c         ****     
 126:RTC.c         ****     writeReg(YEAR_REG,bcdYear);
 657              		.loc 1 126 0
 658 001e 0F23     		mov	r3, #15
 659 0020 FB18     		add	r3, r7, r3
 660 0022 1B78     		ldrb	r3, [r3]
 661 0024 0920     		mov	r0, #9
 662 0026 191C     		mov	r1, r3
 663 0028 FFF7FEFF 		bl	writeReg
 127:RTC.c         **** 
 128:RTC.c         **** }
 664              		.loc 1 128 0
 665 002c BD46     		mov	sp, r7
 666 002e 05B0     		add	sp, sp, #20
 667              		@ sp needed
 668 0030 90BD     		pop	{r4, r7, pc}
 669              		.cfi_endproc
 670              	.LFE48:
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 15


 671              		.size	setYear, .-setYear
 672 0032 C046     		.section	.text.getYear,"ax",%progbits
 673              		.align	2
 674              		.global	getYear
 675              		.code	16
 676              		.thumb_func
 677              		.type	getYear, %function
 678              	getYear:
 679              	.LFB49:
 129:RTC.c         **** uint8 getYear(){
 680              		.loc 1 129 0
 681              		.cfi_startproc
 682 0000 90B5     		push	{r4, r7, lr}
 683              		.cfi_def_cfa_offset 12
 684              		.cfi_offset 4, -12
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 83B0     		sub	sp, sp, #12
 688              		.cfi_def_cfa_offset 24
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 130:RTC.c         **** 
 131:RTC.c         ****     uint8 yearBCD = readReg(YEAR_REG);
 691              		.loc 1 131 0
 692 0006 FC1D     		add	r4, r7, #7
 693 0008 0920     		mov	r0, #9
 694 000a FFF7FEFF 		bl	readReg
 695 000e 031C     		mov	r3, r0
 696 0010 2370     		strb	r3, [r4]
 132:RTC.c         ****     
 133:RTC.c         ****     return decodeYear(yearBCD);
 697              		.loc 1 133 0
 698 0012 FB1D     		add	r3, r7, #7
 699 0014 1B78     		ldrb	r3, [r3]
 700 0016 181C     		mov	r0, r3
 701 0018 FFF7FEFF 		bl	decodeYear
 702 001c 031C     		mov	r3, r0
 134:RTC.c         **** 
 135:RTC.c         **** }
 703              		.loc 1 135 0
 704 001e 181C     		mov	r0, r3
 705 0020 BD46     		mov	sp, r7
 706 0022 03B0     		add	sp, sp, #12
 707              		@ sp needed
 708 0024 90BD     		pop	{r4, r7, pc}
 709              		.cfi_endproc
 710              	.LFE49:
 711              		.size	getYear, .-getYear
 712 0026 C046     		.section	.text.getTime,"ax",%progbits
 713              		.align	2
 714              		.global	getTime
 715              		.code	16
 716              		.thumb_func
 717              		.type	getTime, %function
 718              	getTime:
 719              	.LFB50:
 136:RTC.c         **** 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 16


 137:RTC.c         **** void getTime(struct time *currentTime){
 720              		.loc 1 137 0
 721              		.cfi_startproc
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 82B0     		sub	sp, sp, #8
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 7860     		str	r0, [r7, #4]
 138:RTC.c         ****     
 139:RTC.c         ****     
 140:RTC.c         ****     currentTime->year    =   getYear();
 731              		.loc 1 140 0
 732 0008 FFF7FEFF 		bl	getYear
 733 000c 031C     		mov	r3, r0
 734 000e 1A1C     		mov	r2, r3
 735 0010 7B68     		ldr	r3, [r7, #4]
 736 0012 9A71     		strb	r2, [r3, #6]
 141:RTC.c         ****     currentTime->month   =   getMonth();   
 737              		.loc 1 141 0
 738 0014 FFF7FEFF 		bl	getMonth
 739 0018 031C     		mov	r3, r0
 740 001a 1A1C     		mov	r2, r3
 741 001c 7B68     		ldr	r3, [r7, #4]
 742 001e 5A71     		strb	r2, [r3, #5]
 142:RTC.c         ****     currentTime->day     =   getDay();
 743              		.loc 1 142 0
 744 0020 FFF7FEFF 		bl	getDay
 745 0024 031C     		mov	r3, r0
 746 0026 1A1C     		mov	r2, r3
 747 0028 7B68     		ldr	r3, [r7, #4]
 748 002a DA70     		strb	r2, [r3, #3]
 143:RTC.c         ****     currentTime->weekday =   getWkDay();
 749              		.loc 1 143 0
 750 002c FFF7FEFF 		bl	getWkDay
 751 0030 031C     		mov	r3, r0
 752 0032 1A1C     		mov	r2, r3
 753 0034 7B68     		ldr	r3, [r7, #4]
 754 0036 1A71     		strb	r2, [r3, #4]
 144:RTC.c         ****     currentTime->hour    =   getHours();
 755              		.loc 1 144 0
 756 0038 FFF7FEFF 		bl	getHours
 757 003c 031C     		mov	r3, r0
 758 003e 1A1C     		mov	r2, r3
 759 0040 7B68     		ldr	r3, [r7, #4]
 760 0042 9A70     		strb	r2, [r3, #2]
 145:RTC.c         ****     currentTime->minute  =   getMin();
 761              		.loc 1 145 0
 762 0044 FFF7FEFF 		bl	getMin
 763 0048 031C     		mov	r3, r0
 764 004a 1A1C     		mov	r2, r3
 765 004c 7B68     		ldr	r3, [r7, #4]
 766 004e 5A70     		strb	r2, [r3, #1]
 146:RTC.c         ****     currentTime->second  =   getSec();
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 17


 767              		.loc 1 146 0
 768 0050 FFF7FEFF 		bl	getSec
 769 0054 031C     		mov	r3, r0
 770 0056 1A1C     		mov	r2, r3
 771 0058 7B68     		ldr	r3, [r7, #4]
 772 005a 1A70     		strb	r2, [r3]
 147:RTC.c         ****    
 148:RTC.c         **** 
 149:RTC.c         **** }
 773              		.loc 1 149 0
 774 005c BD46     		mov	sp, r7
 775 005e 02B0     		add	sp, sp, #8
 776              		@ sp needed
 777 0060 80BD     		pop	{r7, pc}
 778              		.cfi_endproc
 779              	.LFE50:
 780              		.size	getTime, .-getTime
 781 0062 C046     		.section	.text.setTime,"ax",%progbits
 782              		.align	2
 783              		.global	setTime
 784              		.code	16
 785              		.thumb_func
 786              		.type	setTime, %function
 787              	setTime:
 788              	.LFB51:
 150:RTC.c         **** 
 151:RTC.c         **** void setTime(struct time *currentTime){
 789              		.loc 1 151 0
 790              		.cfi_startproc
 791 0000 80B5     		push	{r7, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 82B0     		sub	sp, sp, #8
 796              		.cfi_def_cfa_offset 16
 797 0004 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
 799 0006 7860     		str	r0, [r7, #4]
 152:RTC.c         ****     
 153:RTC.c         **** 
 154:RTC.c         **** setSec(currentTime->second);   
 800              		.loc 1 154 0
 801 0008 7B68     		ldr	r3, [r7, #4]
 802 000a 1B78     		ldrb	r3, [r3]
 803 000c 181C     		mov	r0, r3
 804 000e FFF7FEFF 		bl	setSec
 155:RTC.c         **** setMin(currentTime->minute);
 805              		.loc 1 155 0
 806 0012 7B68     		ldr	r3, [r7, #4]
 807 0014 5B78     		ldrb	r3, [r3, #1]
 808 0016 181C     		mov	r0, r3
 809 0018 FFF7FEFF 		bl	setMin
 156:RTC.c         **** setHours(currentTime->hour);
 810              		.loc 1 156 0
 811 001c 7B68     		ldr	r3, [r7, #4]
 812 001e 9B78     		ldrb	r3, [r3, #2]
 813 0020 181C     		mov	r0, r3
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 18


 814 0022 FFF7FEFF 		bl	setHours
 157:RTC.c         **** setWkDay(currentTime->weekday);
 815              		.loc 1 157 0
 816 0026 7B68     		ldr	r3, [r7, #4]
 817 0028 1B79     		ldrb	r3, [r3, #4]
 818 002a 181C     		mov	r0, r3
 819 002c FFF7FEFF 		bl	setWkDay
 158:RTC.c         **** setDay(currentTime->day);
 820              		.loc 1 158 0
 821 0030 7B68     		ldr	r3, [r7, #4]
 822 0032 DB78     		ldrb	r3, [r3, #3]
 823 0034 181C     		mov	r0, r3
 824 0036 FFF7FEFF 		bl	setDay
 159:RTC.c         **** setMonth(currentTime->month);  
 825              		.loc 1 159 0
 826 003a 7B68     		ldr	r3, [r7, #4]
 827 003c 5B79     		ldrb	r3, [r3, #5]
 828 003e 181C     		mov	r0, r3
 829 0040 FFF7FEFF 		bl	setMonth
 160:RTC.c         **** setYear(currentTime->year); 
 830              		.loc 1 160 0
 831 0044 7B68     		ldr	r3, [r7, #4]
 832 0046 9B79     		ldrb	r3, [r3, #6]
 833 0048 181C     		mov	r0, r3
 834 004a FFF7FEFF 		bl	setYear
 161:RTC.c         **** 
 162:RTC.c         **** }
 835              		.loc 1 162 0
 836 004e BD46     		mov	sp, r7
 837 0050 02B0     		add	sp, sp, #8
 838              		@ sp needed
 839 0052 80BD     		pop	{r7, pc}
 840              		.cfi_endproc
 841              	.LFE51:
 842              		.size	setTime, .-setTime
 843              		.section	.text.createAlarm,"ax",%progbits
 844              		.align	2
 845              		.global	createAlarm
 846              		.code	16
 847              		.thumb_func
 848              		.type	createAlarm, %function
 849              	createAlarm:
 850              	.LFB52:
 163:RTC.c         **** 
 164:RTC.c         **** void createAlarm(struct time *alarm, uint8 weekDay, uint8 hour, uint8 minute){
 851              		.loc 1 164 0
 852              		.cfi_startproc
 853 0000 90B5     		push	{r4, r7, lr}
 854              		.cfi_def_cfa_offset 12
 855              		.cfi_offset 4, -12
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              		.cfi_def_cfa_offset 24
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 19


 863 0008 0C1C     		mov	r4, r1
 864 000a 101C     		mov	r0, r2
 865 000c 191C     		mov	r1, r3
 866 000e FB1C     		add	r3, r7, #3
 867 0010 221C     		add	r2, r4, #0
 868 0012 1A70     		strb	r2, [r3]
 869 0014 BB1C     		add	r3, r7, #2
 870 0016 021C     		add	r2, r0, #0
 871 0018 1A70     		strb	r2, [r3]
 872 001a 7B1C     		add	r3, r7, #1
 873 001c 0A1C     		add	r2, r1, #0
 874 001e 1A70     		strb	r2, [r3]
 165:RTC.c         **** 
 166:RTC.c         **** 
 167:RTC.c         ****     alarm->year = 0xFF;
 875              		.loc 1 167 0
 876 0020 7B68     		ldr	r3, [r7, #4]
 877 0022 FF22     		mov	r2, #255
 878 0024 9A71     		strb	r2, [r3, #6]
 168:RTC.c         ****     alarm->month = 0xFF;
 879              		.loc 1 168 0
 880 0026 7B68     		ldr	r3, [r7, #4]
 881 0028 FF22     		mov	r2, #255
 882 002a 5A71     		strb	r2, [r3, #5]
 169:RTC.c         ****     alarm->day =0xFF;
 883              		.loc 1 169 0
 884 002c 7B68     		ldr	r3, [r7, #4]
 885 002e FF22     		mov	r2, #255
 886 0030 DA70     		strb	r2, [r3, #3]
 170:RTC.c         ****     alarm->weekday = weekDay;
 887              		.loc 1 170 0
 888 0032 7B68     		ldr	r3, [r7, #4]
 889 0034 FA1C     		add	r2, r7, #3
 890 0036 1278     		ldrb	r2, [r2]
 891 0038 1A71     		strb	r2, [r3, #4]
 171:RTC.c         ****     alarm->hour = hour;
 892              		.loc 1 171 0
 893 003a 7B68     		ldr	r3, [r7, #4]
 894 003c BA1C     		add	r2, r7, #2
 895 003e 1278     		ldrb	r2, [r2]
 896 0040 9A70     		strb	r2, [r3, #2]
 172:RTC.c         ****     alarm->minute = minute;
 897              		.loc 1 172 0
 898 0042 7B68     		ldr	r3, [r7, #4]
 899 0044 7A1C     		add	r2, r7, #1
 900 0046 1278     		ldrb	r2, [r2]
 901 0048 5A70     		strb	r2, [r3, #1]
 173:RTC.c         ****     alarm->second = 0;
 902              		.loc 1 173 0
 903 004a 7B68     		ldr	r3, [r7, #4]
 904 004c 0022     		mov	r2, #0
 905 004e 1A70     		strb	r2, [r3]
 174:RTC.c         **** 
 175:RTC.c         **** }
 906              		.loc 1 175 0
 907 0050 BD46     		mov	sp, r7
 908 0052 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 20


 909              		@ sp needed
 910 0054 90BD     		pop	{r4, r7, pc}
 911              		.cfi_endproc
 912              	.LFE52:
 913              		.size	createAlarm, .-createAlarm
 914 0056 C046     		.section	.text.createAlarmTEST,"ax",%progbits
 915              		.align	2
 916              		.global	createAlarmTEST
 917              		.code	16
 918              		.thumb_func
 919              		.type	createAlarmTEST, %function
 920              	createAlarmTEST:
 921              	.LFB53:
 176:RTC.c         **** 
 177:RTC.c         **** void createAlarmTEST(struct time *alarm,uint8 minute, uint8 second){
 922              		.loc 1 177 0
 923              		.cfi_startproc
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 82B0     		sub	sp, sp, #8
 929              		.cfi_def_cfa_offset 16
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 932 0006 7860     		str	r0, [r7, #4]
 933 0008 081C     		mov	r0, r1
 934 000a 111C     		mov	r1, r2
 935 000c FB1C     		add	r3, r7, #3
 936 000e 021C     		add	r2, r0, #0
 937 0010 1A70     		strb	r2, [r3]
 938 0012 BB1C     		add	r3, r7, #2
 939 0014 0A1C     		add	r2, r1, #0
 940 0016 1A70     		strb	r2, [r3]
 178:RTC.c         **** 
 179:RTC.c         ****     alarm->year = 0xFF;
 941              		.loc 1 179 0
 942 0018 7B68     		ldr	r3, [r7, #4]
 943 001a FF22     		mov	r2, #255
 944 001c 9A71     		strb	r2, [r3, #6]
 180:RTC.c         ****     alarm->month = 0xFF;
 945              		.loc 1 180 0
 946 001e 7B68     		ldr	r3, [r7, #4]
 947 0020 FF22     		mov	r2, #255
 948 0022 5A71     		strb	r2, [r3, #5]
 181:RTC.c         ****     alarm->day =0xFF;
 949              		.loc 1 181 0
 950 0024 7B68     		ldr	r3, [r7, #4]
 951 0026 FF22     		mov	r2, #255
 952 0028 DA70     		strb	r2, [r3, #3]
 182:RTC.c         ****     alarm->weekday = 0xFF;
 953              		.loc 1 182 0
 954 002a 7B68     		ldr	r3, [r7, #4]
 955 002c FF22     		mov	r2, #255
 956 002e 1A71     		strb	r2, [r3, #4]
 183:RTC.c         ****     alarm->hour = 0xFF;
 957              		.loc 1 183 0
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 21


 958 0030 7B68     		ldr	r3, [r7, #4]
 959 0032 FF22     		mov	r2, #255
 960 0034 9A70     		strb	r2, [r3, #2]
 184:RTC.c         ****     alarm->minute = minute;
 961              		.loc 1 184 0
 962 0036 7B68     		ldr	r3, [r7, #4]
 963 0038 FA1C     		add	r2, r7, #3
 964 003a 1278     		ldrb	r2, [r2]
 965 003c 5A70     		strb	r2, [r3, #1]
 185:RTC.c         ****     alarm->second = second;
 966              		.loc 1 185 0
 967 003e 7B68     		ldr	r3, [r7, #4]
 968 0040 BA1C     		add	r2, r7, #2
 969 0042 1278     		ldrb	r2, [r2]
 970 0044 1A70     		strb	r2, [r3]
 186:RTC.c         **** }
 971              		.loc 1 186 0
 972 0046 BD46     		mov	sp, r7
 973 0048 02B0     		add	sp, sp, #8
 974              		@ sp needed
 975 004a 80BD     		pop	{r7, pc}
 976              		.cfi_endproc
 977              	.LFE53:
 978              		.size	createAlarmTEST, .-createAlarmTEST
 979              		.section	.text.checkAlarm,"ax",%progbits
 980              		.align	2
 981              		.global	checkAlarm
 982              		.code	16
 983              		.thumb_func
 984              		.type	checkAlarm, %function
 985              	checkAlarm:
 986              	.LFB54:
 187:RTC.c         **** 
 188:RTC.c         **** char checkAlarm(struct time *currentTime, struct time *alarmTime){
 987              		.loc 1 188 0
 988              		.cfi_startproc
 989 0000 80B5     		push	{r7, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 84B0     		sub	sp, sp, #16
 994              		.cfi_def_cfa_offset 24
 995 0004 00AF     		add	r7, sp, #0
 996              		.cfi_def_cfa_register 7
 997 0006 7860     		str	r0, [r7, #4]
 998 0008 3960     		str	r1, [r7]
 189:RTC.c         **** /* This function checks if the current time is equal to a time alarm.
 190:RTC.c         ****  * If the times are equal the function returns 0. If a field of time
 191:RTC.c         ****  * is to be ignored, the alarmTime should have 0xFF as that field.
 192:RTC.c         ****  *  
 193:RTC.c         ****  */
 194:RTC.c         ****     char result = 0;
 999              		.loc 1 194 0
 1000 000a 0F23     		mov	r3, #15
 1001 000c FB18     		add	r3, r7, r3
 1002 000e 0022     		mov	r2, #0
 1003 0010 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 22


 195:RTC.c         ****     
 196:RTC.c         ****     // Check that each field of time is equal and not 0xFF.
 197:RTC.c         ****     // If a field is 0xFF, then the if statment will always be false and not execute
 198:RTC.c         ****     // effectivley rendering it ignored. If a field is not 0xFF, then only the relation to current
 199:RTC.c         ****     // matters.
 200:RTC.c         ****     if((!(currentTime->year == alarmTime->year)) && (!(alarmTime->year == 0xFF))){
 1004              		.loc 1 200 0
 1005 0012 7B68     		ldr	r3, [r7, #4]
 1006 0014 9A79     		ldrb	r2, [r3, #6]
 1007 0016 3B68     		ldr	r3, [r7]
 1008 0018 9B79     		ldrb	r3, [r3, #6]
 1009 001a 9A42     		cmp	r2, r3
 1010 001c 0AD0     		beq	.L31
 1011              		.loc 1 200 0 is_stmt 0 discriminator 1
 1012 001e 3B68     		ldr	r3, [r7]
 1013 0020 9B79     		ldrb	r3, [r3, #6]
 1014 0022 FF2B     		cmp	r3, #255
 1015 0024 06D0     		beq	.L31
 201:RTC.c         ****         result++ ;
 1016              		.loc 1 201 0 is_stmt 1
 1017 0026 0F23     		mov	r3, #15
 1018 0028 FB18     		add	r3, r7, r3
 1019 002a 1A78     		ldrb	r2, [r3]
 1020 002c 0F23     		mov	r3, #15
 1021 002e FB18     		add	r3, r7, r3
 1022 0030 0132     		add	r2, r2, #1
 1023 0032 1A70     		strb	r2, [r3]
 1024              	.L31:
 202:RTC.c         ****     }
 203:RTC.c         ****     if((!(currentTime->month == alarmTime->month)) && (!(alarmTime->month == 0xFF))){
 1025              		.loc 1 203 0
 1026 0034 7B68     		ldr	r3, [r7, #4]
 1027 0036 5A79     		ldrb	r2, [r3, #5]
 1028 0038 3B68     		ldr	r3, [r7]
 1029 003a 5B79     		ldrb	r3, [r3, #5]
 1030 003c 9A42     		cmp	r2, r3
 1031 003e 0AD0     		beq	.L32
 1032              		.loc 1 203 0 is_stmt 0 discriminator 1
 1033 0040 3B68     		ldr	r3, [r7]
 1034 0042 5B79     		ldrb	r3, [r3, #5]
 1035 0044 FF2B     		cmp	r3, #255
 1036 0046 06D0     		beq	.L32
 204:RTC.c         ****         result++ ;
 1037              		.loc 1 204 0 is_stmt 1
 1038 0048 0F23     		mov	r3, #15
 1039 004a FB18     		add	r3, r7, r3
 1040 004c 1A78     		ldrb	r2, [r3]
 1041 004e 0F23     		mov	r3, #15
 1042 0050 FB18     		add	r3, r7, r3
 1043 0052 0132     		add	r2, r2, #1
 1044 0054 1A70     		strb	r2, [r3]
 1045              	.L32:
 205:RTC.c         ****     }
 206:RTC.c         ****     if((!(currentTime->day == alarmTime->day)) && (!(alarmTime->day == 0xFF))){
 1046              		.loc 1 206 0
 1047 0056 7B68     		ldr	r3, [r7, #4]
 1048 0058 DA78     		ldrb	r2, [r3, #3]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 23


 1049 005a 3B68     		ldr	r3, [r7]
 1050 005c DB78     		ldrb	r3, [r3, #3]
 1051 005e 9A42     		cmp	r2, r3
 1052 0060 0AD0     		beq	.L33
 1053              		.loc 1 206 0 is_stmt 0 discriminator 1
 1054 0062 3B68     		ldr	r3, [r7]
 1055 0064 DB78     		ldrb	r3, [r3, #3]
 1056 0066 FF2B     		cmp	r3, #255
 1057 0068 06D0     		beq	.L33
 207:RTC.c         ****         result++ ;
 1058              		.loc 1 207 0 is_stmt 1
 1059 006a 0F23     		mov	r3, #15
 1060 006c FB18     		add	r3, r7, r3
 1061 006e 1A78     		ldrb	r2, [r3]
 1062 0070 0F23     		mov	r3, #15
 1063 0072 FB18     		add	r3, r7, r3
 1064 0074 0132     		add	r2, r2, #1
 1065 0076 1A70     		strb	r2, [r3]
 1066              	.L33:
 208:RTC.c         ****     }
 209:RTC.c         **** 
 210:RTC.c         ****     // each bit of alarmTime->weekday coresponds to a weekday, so to check if the current 
 211:RTC.c         ****     //day is part of alram, 1 is shifted by the value of the current wkday to make a bit mask.
 212:RTC.c         ****     if((!(alarmTime->weekday & (1 << currentTime->weekday))) && (!(alarmTime->weekday == 0xFF))){
 1067              		.loc 1 212 0
 1068 0078 3B68     		ldr	r3, [r7]
 1069 007a 1B79     		ldrb	r3, [r3, #4]
 1070 007c 1A1C     		mov	r2, r3
 1071 007e 7B68     		ldr	r3, [r7, #4]
 1072 0080 1B79     		ldrb	r3, [r3, #4]
 1073 0082 1A41     		asr	r2, r2, r3
 1074 0084 131C     		mov	r3, r2
 1075 0086 0122     		mov	r2, #1
 1076 0088 1340     		and	r3, r2
 1077 008a 0AD1     		bne	.L34
 1078              		.loc 1 212 0 is_stmt 0 discriminator 1
 1079 008c 3B68     		ldr	r3, [r7]
 1080 008e 1B79     		ldrb	r3, [r3, #4]
 1081 0090 FF2B     		cmp	r3, #255
 1082 0092 06D0     		beq	.L34
 213:RTC.c         ****         result++ ;
 1083              		.loc 1 213 0 is_stmt 1
 1084 0094 0F23     		mov	r3, #15
 1085 0096 FB18     		add	r3, r7, r3
 1086 0098 1A78     		ldrb	r2, [r3]
 1087 009a 0F23     		mov	r3, #15
 1088 009c FB18     		add	r3, r7, r3
 1089 009e 0132     		add	r2, r2, #1
 1090 00a0 1A70     		strb	r2, [r3]
 1091              	.L34:
 214:RTC.c         ****     }
 215:RTC.c         ****     if((!(currentTime->hour == alarmTime->hour)) && (!(alarmTime->hour == 0xFF))){
 1092              		.loc 1 215 0
 1093 00a2 7B68     		ldr	r3, [r7, #4]
 1094 00a4 9A78     		ldrb	r2, [r3, #2]
 1095 00a6 3B68     		ldr	r3, [r7]
 1096 00a8 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 24


 1097 00aa 9A42     		cmp	r2, r3
 1098 00ac 0AD0     		beq	.L35
 1099              		.loc 1 215 0 is_stmt 0 discriminator 1
 1100 00ae 3B68     		ldr	r3, [r7]
 1101 00b0 9B78     		ldrb	r3, [r3, #2]
 1102 00b2 FF2B     		cmp	r3, #255
 1103 00b4 06D0     		beq	.L35
 216:RTC.c         ****         result++ ;
 1104              		.loc 1 216 0 is_stmt 1
 1105 00b6 0F23     		mov	r3, #15
 1106 00b8 FB18     		add	r3, r7, r3
 1107 00ba 1A78     		ldrb	r2, [r3]
 1108 00bc 0F23     		mov	r3, #15
 1109 00be FB18     		add	r3, r7, r3
 1110 00c0 0132     		add	r2, r2, #1
 1111 00c2 1A70     		strb	r2, [r3]
 1112              	.L35:
 217:RTC.c         ****     }
 218:RTC.c         ****     if((!(currentTime->minute == alarmTime->minute)) && ( !(alarmTime->minute == 0xFF))){
 1113              		.loc 1 218 0
 1114 00c4 7B68     		ldr	r3, [r7, #4]
 1115 00c6 5A78     		ldrb	r2, [r3, #1]
 1116 00c8 3B68     		ldr	r3, [r7]
 1117 00ca 5B78     		ldrb	r3, [r3, #1]
 1118 00cc 9A42     		cmp	r2, r3
 1119 00ce 0AD0     		beq	.L36
 1120              		.loc 1 218 0 is_stmt 0 discriminator 1
 1121 00d0 3B68     		ldr	r3, [r7]
 1122 00d2 5B78     		ldrb	r3, [r3, #1]
 1123 00d4 FF2B     		cmp	r3, #255
 1124 00d6 06D0     		beq	.L36
 219:RTC.c         ****         result++ ;
 1125              		.loc 1 219 0 is_stmt 1
 1126 00d8 0F23     		mov	r3, #15
 1127 00da FB18     		add	r3, r7, r3
 1128 00dc 1A78     		ldrb	r2, [r3]
 1129 00de 0F23     		mov	r3, #15
 1130 00e0 FB18     		add	r3, r7, r3
 1131 00e2 0132     		add	r2, r2, #1
 1132 00e4 1A70     		strb	r2, [r3]
 1133              	.L36:
 220:RTC.c         ****     }
 221:RTC.c         ****     if((!(currentTime->second == alarmTime->second)) && (!(alarmTime->second == 0xFF))){
 1134              		.loc 1 221 0
 1135 00e6 7B68     		ldr	r3, [r7, #4]
 1136 00e8 1A78     		ldrb	r2, [r3]
 1137 00ea 3B68     		ldr	r3, [r7]
 1138 00ec 1B78     		ldrb	r3, [r3]
 1139 00ee 9A42     		cmp	r2, r3
 1140 00f0 0AD0     		beq	.L37
 1141              		.loc 1 221 0 is_stmt 0 discriminator 1
 1142 00f2 3B68     		ldr	r3, [r7]
 1143 00f4 1B78     		ldrb	r3, [r3]
 1144 00f6 FF2B     		cmp	r3, #255
 1145 00f8 06D0     		beq	.L37
 222:RTC.c         ****         result++ ;
 1146              		.loc 1 222 0 is_stmt 1
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 25


 1147 00fa 0F23     		mov	r3, #15
 1148 00fc FB18     		add	r3, r7, r3
 1149 00fe 1A78     		ldrb	r2, [r3]
 1150 0100 0F23     		mov	r3, #15
 1151 0102 FB18     		add	r3, r7, r3
 1152 0104 0132     		add	r2, r2, #1
 1153 0106 1A70     		strb	r2, [r3]
 1154              	.L37:
 223:RTC.c         ****     }
 224:RTC.c         ****     
 225:RTC.c         ****     
 226:RTC.c         **** 
 227:RTC.c         ****     return result;
 1155              		.loc 1 227 0
 1156 0108 0F23     		mov	r3, #15
 1157 010a FB18     		add	r3, r7, r3
 1158 010c 1B78     		ldrb	r3, [r3]
 228:RTC.c         **** }
 1159              		.loc 1 228 0
 1160 010e 181C     		mov	r0, r3
 1161 0110 BD46     		mov	sp, r7
 1162 0112 04B0     		add	sp, sp, #16
 1163              		@ sp needed
 1164 0114 80BD     		pop	{r7, pc}
 1165              		.cfi_endproc
 1166              	.LFE54:
 1167              		.size	checkAlarm, .-checkAlarm
 1168 0116 C046     		.section	.text.softReset,"ax",%progbits
 1169              		.align	2
 1170              		.global	softReset
 1171              		.code	16
 1172              		.thumb_func
 1173              		.type	softReset, %function
 1174              	softReset:
 1175              	.LFB55:
 229:RTC.c         **** 
 230:RTC.c         **** void softReset(){
 1176              		.loc 1 230 0
 1177              		.cfi_startproc
 1178 0000 80B5     		push	{r7, lr}
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182 0002 00AF     		add	r7, sp, #0
 1183              		.cfi_def_cfa_register 7
 231:RTC.c         **** 
 232:RTC.c         **** writeReg(CONTROL_REG_1, RESET_VALUE);
 1184              		.loc 1 232 0
 1185 0004 0020     		mov	r0, #0
 1186 0006 5821     		mov	r1, #88
 1187 0008 FFF7FEFF 		bl	writeReg
 233:RTC.c         ****     
 234:RTC.c         **** }
 1188              		.loc 1 234 0
 1189 000c BD46     		mov	sp, r7
 1190              		@ sp needed
 1191 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 26


 1192              		.cfi_endproc
 1193              	.LFE55:
 1194              		.size	softReset, .-softReset
 1195              		.section	.rodata
 1196              		.align	2
 1197              	.LC0:
 1198 0000 79656172 		.ascii	"year: %d month: %d day:%d wkDay:%d %d:%2d:%d \012\015"
 1198      3A202564 
 1198      206D6F6E 
 1198      74683A20 
 1198      25642064 
 1199 002f 00       		.ascii	"\000"
 1200              		.section	.text.printTime,"ax",%progbits
 1201              		.align	2
 1202              		.global	printTime
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	printTime, %function
 1206              	printTime:
 1207              	.LFB56:
 235:RTC.c         **** 
 236:RTC.c         **** void printTime(struct time *currentTime){
 1208              		.loc 1 236 0
 1209              		.cfi_startproc
 1210 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1211              		.cfi_def_cfa_offset 20
 1212              		.cfi_offset 4, -20
 1213              		.cfi_offset 5, -16
 1214              		.cfi_offset 6, -12
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 9FB0     		sub	sp, sp, #124
 1218              		.cfi_def_cfa_offset 144
 1219 0004 06AF     		add	r7, sp, #24
 1220              		.cfi_def_cfa 7, 120
 1221 0006 F860     		str	r0, [r7, #12]
 237:RTC.c         **** 
 238:RTC.c         ****         char output[75];
 239:RTC.c         ****         sprintf(output,"year: %d month: %d day:%d wkDay:%d %d:%2d:%d \n\r",currentTime->year,curren
 1222              		.loc 1 239 0
 1223 0008 FB68     		ldr	r3, [r7, #12]
 1224 000a 9B79     		ldrb	r3, [r3, #6]
 1225 000c BB60     		str	r3, [r7, #8]
 1226 000e FB68     		ldr	r3, [r7, #12]
 1227 0010 5B79     		ldrb	r3, [r3, #5]
 1228 0012 7B60     		str	r3, [r7, #4]
 1229 0014 FB68     		ldr	r3, [r7, #12]
 1230 0016 DB78     		ldrb	r3, [r3, #3]
 1231 0018 1E1C     		mov	r6, r3
 1232 001a FB68     		ldr	r3, [r7, #12]
 1233 001c 1B79     		ldrb	r3, [r3, #4]
 1234 001e 1D1C     		mov	r5, r3
 1235 0020 FB68     		ldr	r3, [r7, #12]
 1236 0022 9B78     		ldrb	r3, [r3, #2]
 1237 0024 1C1C     		mov	r4, r3
 1238 0026 FB68     		ldr	r3, [r7, #12]
 1239 0028 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 27


 1240 002a 181C     		mov	r0, r3
 1241 002c FB68     		ldr	r3, [r7, #12]
 1242 002e 1B78     		ldrb	r3, [r3]
 1243 0030 191C     		mov	r1, r3
 1244 0032 0C22     		mov	r2, #12
 1245 0034 0823     		mov	r3, #8
 1246 0036 9C46     		mov	ip, r3
 1247 0038 BC44     		add	ip, ip, r7
 1248 003a 6244     		add	r2, r2, ip
 1249 003c 0B4B     		ldr	r3, .L41
 1250 003e 0096     		str	r6, [sp]
 1251 0040 0195     		str	r5, [sp, #4]
 1252 0042 0294     		str	r4, [sp, #8]
 1253 0044 0390     		str	r0, [sp, #12]
 1254 0046 0491     		str	r1, [sp, #16]
 1255 0048 101C     		mov	r0, r2
 1256 004a 191C     		mov	r1, r3
 1257 004c BA68     		ldr	r2, [r7, #8]
 1258 004e 7B68     		ldr	r3, [r7, #4]
 1259 0050 FFF7FEFF 		bl	sprintf
 240:RTC.c         ****         UART_1_UartPutString(output);
 1260              		.loc 1 240 0
 1261 0054 0C23     		mov	r3, #12
 1262 0056 0822     		mov	r2, #8
 1263 0058 9446     		mov	ip, r2
 1264 005a BC44     		add	ip, ip, r7
 1265 005c 6344     		add	r3, r3, ip
 1266 005e 181C     		mov	r0, r3
 1267 0060 FFF7FEFF 		bl	UART_1_UartPutString
 241:RTC.c         **** }
 1268              		.loc 1 241 0
 1269 0064 BD46     		mov	sp, r7
 1270 0066 19B0     		add	sp, sp, #100
 1271              		@ sp needed
 1272 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 1273              	.L42:
 1274 006a C046     		.align	2
 1275              	.L41:
 1276 006c 00000000 		.word	.LC0
 1277              		.cfi_endproc
 1278              	.LFE56:
 1279              		.size	printTime, .-printTime
 1280              		.text
 1281              	.Letext0:
 1282              		.file 2 "./RTC.h"
 1283              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 1284              		.section	.debug_info,"",%progbits
 1285              	.Ldebug_info0:
 1286 0000 16050000 		.4byte	0x516
 1287 0004 0400     		.2byte	0x4
 1288 0006 00000000 		.4byte	.Ldebug_abbrev0
 1289 000a 04       		.byte	0x4
 1290 000b 01       		.uleb128 0x1
 1291 000c BC010000 		.4byte	.LASF63
 1292 0010 01       		.byte	0x1
 1293 0011 0B010000 		.4byte	.LASF64
 1294 0015 4A020000 		.4byte	.LASF65
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 28


 1295 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1296 001d 00000000 		.4byte	0
 1297 0021 00000000 		.4byte	.Ldebug_line0
 1298 0025 02       		.uleb128 0x2
 1299 0026 01       		.byte	0x1
 1300 0027 06       		.byte	0x6
 1301 0028 3C010000 		.4byte	.LASF0
 1302 002c 02       		.uleb128 0x2
 1303 002d 01       		.byte	0x1
 1304 002e 08       		.byte	0x8
 1305 002f FD000000 		.4byte	.LASF1
 1306 0033 02       		.uleb128 0x2
 1307 0034 02       		.byte	0x2
 1308 0035 05       		.byte	0x5
 1309 0036 20000000 		.4byte	.LASF2
 1310 003a 02       		.uleb128 0x2
 1311 003b 02       		.byte	0x2
 1312 003c 07       		.byte	0x7
 1313 003d 8F010000 		.4byte	.LASF3
 1314 0041 02       		.uleb128 0x2
 1315 0042 04       		.byte	0x4
 1316 0043 05       		.byte	0x5
 1317 0044 D1000000 		.4byte	.LASF4
 1318 0048 02       		.uleb128 0x2
 1319 0049 04       		.byte	0x4
 1320 004a 07       		.byte	0x7
 1321 004b C1020000 		.4byte	.LASF5
 1322 004f 02       		.uleb128 0x2
 1323 0050 08       		.byte	0x8
 1324 0051 05       		.byte	0x5
 1325 0052 A1000000 		.4byte	.LASF6
 1326 0056 02       		.uleb128 0x2
 1327 0057 08       		.byte	0x8
 1328 0058 07       		.byte	0x7
 1329 0059 4F010000 		.4byte	.LASF7
 1330 005d 03       		.uleb128 0x3
 1331 005e 04       		.byte	0x4
 1332 005f 05       		.byte	0x5
 1333 0060 696E7400 		.ascii	"int\000"
 1334 0064 02       		.uleb128 0x2
 1335 0065 04       		.byte	0x4
 1336 0066 07       		.byte	0x7
 1337 0067 66010000 		.4byte	.LASF8
 1338 006b 04       		.uleb128 0x4
 1339 006c 7D000000 		.4byte	.LASF66
 1340 0070 03       		.byte	0x3
 1341 0071 B901     		.2byte	0x1b9
 1342 0073 2C000000 		.4byte	0x2c
 1343 0077 02       		.uleb128 0x2
 1344 0078 04       		.byte	0x4
 1345 0079 04       		.byte	0x4
 1346 007a 9B000000 		.4byte	.LASF9
 1347 007e 02       		.uleb128 0x2
 1348 007f 08       		.byte	0x8
 1349 0080 04       		.byte	0x4
 1350 0081 DB020000 		.4byte	.LASF10
 1351 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 29


 1352 0086 01       		.byte	0x1
 1353 0087 08       		.byte	0x8
 1354 0088 B0010000 		.4byte	.LASF11
 1355 008c 02       		.uleb128 0x2
 1356 008d 04       		.byte	0x4
 1357 008e 07       		.byte	0x7
 1358 008f 32000000 		.4byte	.LASF12
 1359 0093 05       		.uleb128 0x5
 1360 0094 83010000 		.4byte	.LASF67
 1361 0098 07       		.byte	0x7
 1362 0099 02       		.byte	0x2
 1363 009a 40       		.byte	0x40
 1364 009b F4000000 		.4byte	0xf4
 1365 009f 06       		.uleb128 0x6
 1366 00a0 48010000 		.4byte	.LASF13
 1367 00a4 02       		.byte	0x2
 1368 00a5 42       		.byte	0x42
 1369 00a6 6B000000 		.4byte	0x6b
 1370 00aa 00       		.byte	0
 1371 00ab 06       		.uleb128 0x6
 1372 00ac B1020000 		.4byte	.LASF14
 1373 00b0 02       		.byte	0x2
 1374 00b1 43       		.byte	0x43
 1375 00b2 6B000000 		.4byte	0x6b
 1376 00b6 01       		.byte	0x1
 1377 00b7 06       		.uleb128 0x6
 1378 00b8 F8000000 		.4byte	.LASF15
 1379 00bc 02       		.byte	0x2
 1380 00bd 44       		.byte	0x44
 1381 00be 6B000000 		.4byte	0x6b
 1382 00c2 02       		.byte	0x2
 1383 00c3 07       		.uleb128 0x7
 1384 00c4 64617900 		.ascii	"day\000"
 1385 00c8 02       		.byte	0x2
 1386 00c9 45       		.byte	0x45
 1387 00ca 6B000000 		.4byte	0x6b
 1388 00ce 03       		.byte	0x3
 1389 00cf 06       		.uleb128 0x6
 1390 00d0 48000000 		.4byte	.LASF16
 1391 00d4 02       		.byte	0x2
 1392 00d5 46       		.byte	0x46
 1393 00d6 6B000000 		.4byte	0x6b
 1394 00da 04       		.byte	0x4
 1395 00db 06       		.uleb128 0x6
 1396 00dc A5020000 		.4byte	.LASF17
 1397 00e0 02       		.byte	0x2
 1398 00e1 47       		.byte	0x47
 1399 00e2 6B000000 		.4byte	0x6b
 1400 00e6 05       		.byte	0x5
 1401 00e7 06       		.uleb128 0x6
 1402 00e8 A2010000 		.4byte	.LASF18
 1403 00ec 02       		.byte	0x2
 1404 00ed 48       		.byte	0x48
 1405 00ee 6B000000 		.4byte	0x6b
 1406 00f2 06       		.byte	0x6
 1407 00f3 00       		.byte	0
 1408 00f4 08       		.uleb128 0x8
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 30


 1409 00f5 2A030000 		.4byte	.LASF21
 1410 00f9 01       		.byte	0x1
 1411 00fa 10       		.byte	0x10
 1412 00fb 00000000 		.4byte	.LFB34
 1413 00ff 60000000 		.4byte	.LFE34-.LFB34
 1414 0103 01       		.uleb128 0x1
 1415 0104 9C       		.byte	0x9c
 1416 0105 34010000 		.4byte	0x134
 1417 0109 09       		.uleb128 0x9
 1418 010a 43000000 		.4byte	.LASF23
 1419 010e 01       		.byte	0x1
 1420 010f 10       		.byte	0x10
 1421 0110 6B000000 		.4byte	0x6b
 1422 0114 02       		.uleb128 0x2
 1423 0115 91       		.byte	0x91
 1424 0116 67       		.sleb128 -25
 1425 0117 0A       		.uleb128 0xa
 1426 0118 72000000 		.4byte	.LASF19
 1427 011c 01       		.byte	0x1
 1428 011d 12       		.byte	0x12
 1429 011e 6B000000 		.4byte	0x6b
 1430 0122 02       		.uleb128 0x2
 1431 0123 91       		.byte	0x91
 1432 0124 6E       		.sleb128 -18
 1433 0125 0A       		.uleb128 0xa
 1434 0126 5C000000 		.4byte	.LASF20
 1435 012a 01       		.byte	0x1
 1436 012b 13       		.byte	0x13
 1437 012c 6B000000 		.4byte	0x6b
 1438 0130 02       		.uleb128 0x2
 1439 0131 91       		.byte	0x91
 1440 0132 6F       		.sleb128 -17
 1441 0133 00       		.byte	0
 1442 0134 08       		.uleb128 0x8
 1443 0135 62000000 		.4byte	.LASF22
 1444 0139 01       		.byte	0x1
 1445 013a 22       		.byte	0x22
 1446 013b 00000000 		.4byte	.LFB35
 1447 013f 1E000000 		.4byte	.LFE35-.LFB35
 1448 0143 01       		.uleb128 0x1
 1449 0144 9C       		.byte	0x9c
 1450 0145 58010000 		.4byte	0x158
 1451 0149 09       		.uleb128 0x9
 1452 014a 43000000 		.4byte	.LASF23
 1453 014e 01       		.byte	0x1
 1454 014f 22       		.byte	0x22
 1455 0150 6B000000 		.4byte	0x6b
 1456 0154 02       		.uleb128 0x2
 1457 0155 91       		.byte	0x91
 1458 0156 77       		.sleb128 -9
 1459 0157 00       		.byte	0
 1460 0158 08       		.uleb128 0x8
 1461 0159 83000000 		.4byte	.LASF24
 1462 015d 01       		.byte	0x1
 1463 015e 29       		.byte	0x29
 1464 015f 00000000 		.4byte	.LFB36
 1465 0163 32000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 31


 1466 0167 01       		.uleb128 0x1
 1467 0168 9C       		.byte	0x9c
 1468 0169 8A010000 		.4byte	0x18a
 1469 016d 0B       		.uleb128 0xb
 1470 016e 73656300 		.ascii	"sec\000"
 1471 0172 01       		.byte	0x1
 1472 0173 29       		.byte	0x29
 1473 0174 6B000000 		.4byte	0x6b
 1474 0178 02       		.uleb128 0x2
 1475 0179 91       		.byte	0x91
 1476 017a 67       		.sleb128 -25
 1477 017b 0A       		.uleb128 0xa
 1478 017c E4000000 		.4byte	.LASF25
 1479 0180 01       		.byte	0x1
 1480 0181 2B       		.byte	0x2b
 1481 0182 6B000000 		.4byte	0x6b
 1482 0186 02       		.uleb128 0x2
 1483 0187 91       		.byte	0x91
 1484 0188 6F       		.sleb128 -17
 1485 0189 00       		.byte	0
 1486 018a 0C       		.uleb128 0xc
 1487 018b 00030000 		.4byte	.LASF29
 1488 018f 01       		.byte	0x1
 1489 0190 2F       		.byte	0x2f
 1490 0191 6B000000 		.4byte	0x6b
 1491 0195 00000000 		.4byte	.LFB37
 1492 0199 1A000000 		.4byte	.LFE37-.LFB37
 1493 019d 01       		.uleb128 0x1
 1494 019e 9C       		.byte	0x9c
 1495 019f 08       		.uleb128 0x8
 1496 01a0 73010000 		.4byte	.LASF26
 1497 01a4 01       		.byte	0x1
 1498 01a5 34       		.byte	0x34
 1499 01a6 00000000 		.4byte	.LFB38
 1500 01aa 32000000 		.4byte	.LFE38-.LFB38
 1501 01ae 01       		.uleb128 0x1
 1502 01af 9C       		.byte	0x9c
 1503 01b0 D1010000 		.4byte	0x1d1
 1504 01b4 09       		.uleb128 0x9
 1505 01b5 EF020000 		.4byte	.LASF27
 1506 01b9 01       		.byte	0x1
 1507 01ba 34       		.byte	0x34
 1508 01bb 6B000000 		.4byte	0x6b
 1509 01bf 02       		.uleb128 0x2
 1510 01c0 91       		.byte	0x91
 1511 01c1 67       		.sleb128 -25
 1512 01c2 0A       		.uleb128 0xa
 1513 01c3 22010000 		.4byte	.LASF28
 1514 01c7 01       		.byte	0x1
 1515 01c8 36       		.byte	0x36
 1516 01c9 6B000000 		.4byte	0x6b
 1517 01cd 02       		.uleb128 0x2
 1518 01ce 91       		.byte	0x91
 1519 01cf 6F       		.sleb128 -17
 1520 01d0 00       		.byte	0
 1521 01d1 0C       		.uleb128 0xc
 1522 01d2 B5010000 		.4byte	.LASF30
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 32


 1523 01d6 01       		.byte	0x1
 1524 01d7 3A       		.byte	0x3a
 1525 01d8 6B000000 		.4byte	0x6b
 1526 01dc 00000000 		.4byte	.LFB39
 1527 01e0 1A000000 		.4byte	.LFE39-.LFB39
 1528 01e4 01       		.uleb128 0x1
 1529 01e5 9C       		.byte	0x9c
 1530 01e6 08       		.uleb128 0x8
 1531 01e7 7A010000 		.4byte	.LASF31
 1532 01eb 01       		.byte	0x1
 1533 01ec 40       		.byte	0x40
 1534 01ed 00000000 		.4byte	.LFB40
 1535 01f1 32000000 		.4byte	.LFE40-.LFB40
 1536 01f5 01       		.uleb128 0x1
 1537 01f6 9C       		.byte	0x9c
 1538 01f7 18020000 		.4byte	0x218
 1539 01fb 09       		.uleb128 0x9
 1540 01fc F8000000 		.4byte	.LASF15
 1541 0200 01       		.byte	0x1
 1542 0201 40       		.byte	0x40
 1543 0202 6B000000 		.4byte	0x6b
 1544 0206 02       		.uleb128 0x2
 1545 0207 91       		.byte	0x91
 1546 0208 67       		.sleb128 -25
 1547 0209 0A       		.uleb128 0xa
 1548 020a 18000000 		.4byte	.LASF32
 1549 020e 01       		.byte	0x1
 1550 020f 42       		.byte	0x42
 1551 0210 6B000000 		.4byte	0x6b
 1552 0214 02       		.uleb128 0x2
 1553 0215 91       		.byte	0x91
 1554 0216 6F       		.sleb128 -17
 1555 0217 00       		.byte	0
 1556 0218 0D       		.uleb128 0xd
 1557 0219 EF000000 		.4byte	.LASF33
 1558 021d 01       		.byte	0x1
 1559 021e 47       		.byte	0x47
 1560 021f 6B000000 		.4byte	0x6b
 1561 0223 00000000 		.4byte	.LFB41
 1562 0227 26000000 		.4byte	.LFE41-.LFB41
 1563 022b 01       		.uleb128 0x1
 1564 022c 9C       		.byte	0x9c
 1565 022d 40020000 		.4byte	0x240
 1566 0231 0A       		.uleb128 0xa
 1567 0232 D3020000 		.4byte	.LASF34
 1568 0236 01       		.byte	0x1
 1569 0237 49       		.byte	0x49
 1570 0238 6B000000 		.4byte	0x6b
 1571 023c 02       		.uleb128 0x2
 1572 023d 91       		.byte	0x91
 1573 023e 6F       		.sleb128 -17
 1574 023f 00       		.byte	0
 1575 0240 08       		.uleb128 0x8
 1576 0241 2D010000 		.4byte	.LASF35
 1577 0245 01       		.byte	0x1
 1578 0246 4F       		.byte	0x4f
 1579 0247 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 33


 1580 024b 32000000 		.4byte	.LFE42-.LFB42
 1581 024f 01       		.uleb128 0x1
 1582 0250 9C       		.byte	0x9c
 1583 0251 72020000 		.4byte	0x272
 1584 0255 0B       		.uleb128 0xb
 1585 0256 64617900 		.ascii	"day\000"
 1586 025a 01       		.byte	0x1
 1587 025b 4F       		.byte	0x4f
 1588 025c 6B000000 		.4byte	0x6b
 1589 0260 02       		.uleb128 0x2
 1590 0261 91       		.byte	0x91
 1591 0262 67       		.sleb128 -25
 1592 0263 0A       		.uleb128 0xa
 1593 0264 E2020000 		.4byte	.LASF36
 1594 0268 01       		.byte	0x1
 1595 0269 51       		.byte	0x51
 1596 026a 6B000000 		.4byte	0x6b
 1597 026e 02       		.uleb128 0x2
 1598 026f 91       		.byte	0x91
 1599 0270 6F       		.sleb128 -17
 1600 0271 00       		.byte	0
 1601 0272 0D       		.uleb128 0xd
 1602 0273 88010000 		.4byte	.LASF37
 1603 0277 01       		.byte	0x1
 1604 0278 56       		.byte	0x56
 1605 0279 6B000000 		.4byte	0x6b
 1606 027d 00000000 		.4byte	.LFB43
 1607 0281 26000000 		.4byte	.LFE43-.LFB43
 1608 0285 01       		.uleb128 0x1
 1609 0286 9C       		.byte	0x9c
 1610 0287 9A020000 		.4byte	0x29a
 1611 028b 0A       		.uleb128 0xa
 1612 028c CA000000 		.4byte	.LASF38
 1613 0290 01       		.byte	0x1
 1614 0291 58       		.byte	0x58
 1615 0292 6B000000 		.4byte	0x6b
 1616 0296 02       		.uleb128 0x2
 1617 0297 91       		.byte	0x91
 1618 0298 6F       		.sleb128 -17
 1619 0299 00       		.byte	0
 1620 029a 08       		.uleb128 0x8
 1621 029b 21030000 		.4byte	.LASF39
 1622 029f 01       		.byte	0x1
 1623 02a0 5E       		.byte	0x5e
 1624 02a1 00000000 		.4byte	.LFB44
 1625 02a5 32000000 		.4byte	.LFE44-.LFB44
 1626 02a9 01       		.uleb128 0x1
 1627 02aa 9C       		.byte	0x9c
 1628 02ab CC020000 		.4byte	0x2cc
 1629 02af 09       		.uleb128 0x9
 1630 02b0 E9020000 		.4byte	.LASF40
 1631 02b4 01       		.byte	0x1
 1632 02b5 5E       		.byte	0x5e
 1633 02b6 6B000000 		.4byte	0x6b
 1634 02ba 02       		.uleb128 0x2
 1635 02bb 91       		.byte	0x91
 1636 02bc 67       		.sleb128 -25
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 34


 1637 02bd 0A       		.uleb128 0xa
 1638 02be 18030000 		.4byte	.LASF41
 1639 02c2 01       		.byte	0x1
 1640 02c3 60       		.byte	0x60
 1641 02c4 6B000000 		.4byte	0x6b
 1642 02c8 02       		.uleb128 0x2
 1643 02c9 91       		.byte	0x91
 1644 02ca 6F       		.sleb128 -17
 1645 02cb 00       		.byte	0
 1646 02cc 0D       		.uleb128 0xd
 1647 02cd F7020000 		.4byte	.LASF42
 1648 02d1 01       		.byte	0x1
 1649 02d2 64       		.byte	0x64
 1650 02d3 6B000000 		.4byte	0x6b
 1651 02d7 00000000 		.4byte	.LFB45
 1652 02db 26000000 		.4byte	.LFE45-.LFB45
 1653 02df 01       		.uleb128 0x1
 1654 02e0 9C       		.byte	0x9c
 1655 02e1 F4020000 		.4byte	0x2f4
 1656 02e5 0A       		.uleb128 0xa
 1657 02e6 0F000000 		.4byte	.LASF43
 1658 02ea 01       		.byte	0x1
 1659 02eb 66       		.byte	0x66
 1660 02ec 6B000000 		.4byte	0x6b
 1661 02f0 02       		.uleb128 0x2
 1662 02f1 91       		.byte	0x91
 1663 02f2 6F       		.sleb128 -17
 1664 02f3 00       		.byte	0
 1665 02f4 08       		.uleb128 0x8
 1666 02f5 A7010000 		.4byte	.LASF44
 1667 02f9 01       		.byte	0x1
 1668 02fa 6C       		.byte	0x6c
 1669 02fb 00000000 		.4byte	.LFB46
 1670 02ff 32000000 		.4byte	.LFE46-.LFB46
 1671 0303 01       		.uleb128 0x1
 1672 0304 9C       		.byte	0x9c
 1673 0305 26030000 		.4byte	0x326
 1674 0309 09       		.uleb128 0x9
 1675 030a A5020000 		.4byte	.LASF17
 1676 030e 01       		.byte	0x1
 1677 030f 6C       		.byte	0x6c
 1678 0310 6B000000 		.4byte	0x6b
 1679 0314 02       		.uleb128 0x2
 1680 0315 91       		.byte	0x91
 1681 0316 67       		.sleb128 -25
 1682 0317 0A       		.uleb128 0xa
 1683 0318 92000000 		.4byte	.LASF45
 1684 031c 01       		.byte	0x1
 1685 031d 6E       		.byte	0x6e
 1686 031e 6B000000 		.4byte	0x6b
 1687 0322 02       		.uleb128 0x2
 1688 0323 91       		.byte	0x91
 1689 0324 6F       		.sleb128 -17
 1690 0325 00       		.byte	0
 1691 0326 0D       		.uleb128 0xd
 1692 0327 11010000 		.4byte	.LASF46
 1693 032b 01       		.byte	0x1
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 35


 1694 032c 72       		.byte	0x72
 1695 032d 6B000000 		.4byte	0x6b
 1696 0331 00000000 		.4byte	.LFB47
 1697 0335 26000000 		.4byte	.LFE47-.LFB47
 1698 0339 01       		.uleb128 0x1
 1699 033a 9C       		.byte	0x9c
 1700 033b 4E030000 		.4byte	0x34e
 1701 033f 0A       		.uleb128 0xa
 1702 0340 B8020000 		.4byte	.LASF47
 1703 0344 01       		.byte	0x1
 1704 0345 74       		.byte	0x74
 1705 0346 6B000000 		.4byte	0x6b
 1706 034a 02       		.uleb128 0x2
 1707 034b 91       		.byte	0x91
 1708 034c 6F       		.sleb128 -17
 1709 034d 00       		.byte	0
 1710 034e 08       		.uleb128 0x8
 1711 034f 3B000000 		.4byte	.LASF48
 1712 0353 01       		.byte	0x1
 1713 0354 7A       		.byte	0x7a
 1714 0355 00000000 		.4byte	.LFB48
 1715 0359 32000000 		.4byte	.LFE48-.LFB48
 1716 035d 01       		.uleb128 0x1
 1717 035e 9C       		.byte	0x9c
 1718 035f 80030000 		.4byte	0x380
 1719 0363 09       		.uleb128 0x9
 1720 0364 A2010000 		.4byte	.LASF18
 1721 0368 01       		.byte	0x1
 1722 0369 7A       		.byte	0x7a
 1723 036a 6B000000 		.4byte	0x6b
 1724 036e 02       		.uleb128 0x2
 1725 036f 91       		.byte	0x91
 1726 0370 67       		.sleb128 -25
 1727 0371 0A       		.uleb128 0xa
 1728 0372 8A000000 		.4byte	.LASF49
 1729 0376 01       		.byte	0x1
 1730 0377 7C       		.byte	0x7c
 1731 0378 6B000000 		.4byte	0x6b
 1732 037c 02       		.uleb128 0x2
 1733 037d 91       		.byte	0x91
 1734 037e 6F       		.sleb128 -17
 1735 037f 00       		.byte	0
 1736 0380 0D       		.uleb128 0xd
 1737 0381 2A000000 		.4byte	.LASF50
 1738 0385 01       		.byte	0x1
 1739 0386 81       		.byte	0x81
 1740 0387 6B000000 		.4byte	0x6b
 1741 038b 00000000 		.4byte	.LFB49
 1742 038f 26000000 		.4byte	.LFE49-.LFB49
 1743 0393 01       		.uleb128 0x1
 1744 0394 9C       		.byte	0x9c
 1745 0395 A8030000 		.4byte	0x3a8
 1746 0399 0A       		.uleb128 0xa
 1747 039a 07000000 		.4byte	.LASF51
 1748 039e 01       		.byte	0x1
 1749 039f 83       		.byte	0x83
 1750 03a0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 36


 1751 03a4 02       		.uleb128 0x2
 1752 03a5 91       		.byte	0x91
 1753 03a6 6F       		.sleb128 -17
 1754 03a7 00       		.byte	0
 1755 03a8 08       		.uleb128 0x8
 1756 03a9 1A010000 		.4byte	.LASF52
 1757 03ad 01       		.byte	0x1
 1758 03ae 89       		.byte	0x89
 1759 03af 00000000 		.4byte	.LFB50
 1760 03b3 62000000 		.4byte	.LFE50-.LFB50
 1761 03b7 01       		.uleb128 0x1
 1762 03b8 9C       		.byte	0x9c
 1763 03b9 CC030000 		.4byte	0x3cc
 1764 03bd 09       		.uleb128 0x9
 1765 03be 50000000 		.4byte	.LASF53
 1766 03c2 01       		.byte	0x1
 1767 03c3 89       		.byte	0x89
 1768 03c4 CC030000 		.4byte	0x3cc
 1769 03c8 02       		.uleb128 0x2
 1770 03c9 91       		.byte	0x91
 1771 03ca 74       		.sleb128 -12
 1772 03cb 00       		.byte	0
 1773 03cc 0E       		.uleb128 0xe
 1774 03cd 04       		.byte	0x4
 1775 03ce 93000000 		.4byte	0x93
 1776 03d2 08       		.uleb128 0x8
 1777 03d3 34010000 		.4byte	.LASF54
 1778 03d7 01       		.byte	0x1
 1779 03d8 97       		.byte	0x97
 1780 03d9 00000000 		.4byte	.LFB51
 1781 03dd 54000000 		.4byte	.LFE51-.LFB51
 1782 03e1 01       		.uleb128 0x1
 1783 03e2 9C       		.byte	0x9c
 1784 03e3 F6030000 		.4byte	0x3f6
 1785 03e7 09       		.uleb128 0x9
 1786 03e8 50000000 		.4byte	.LASF53
 1787 03ec 01       		.byte	0x1
 1788 03ed 97       		.byte	0x97
 1789 03ee CC030000 		.4byte	0x3cc
 1790 03f2 02       		.uleb128 0x2
 1791 03f3 91       		.byte	0x91
 1792 03f4 74       		.sleb128 -12
 1793 03f5 00       		.byte	0
 1794 03f6 0F       		.uleb128 0xf
 1795 03f7 4B030000 		.4byte	.LASF55
 1796 03fb 01       		.byte	0x1
 1797 03fc A4       		.byte	0xa4
 1798 03fd 00000000 		.4byte	.LFB52
 1799 0401 56000000 		.4byte	.LFE52-.LFB52
 1800 0405 01       		.uleb128 0x1
 1801 0406 9C       		.byte	0x9c
 1802 0407 44040000 		.4byte	0x444
 1803 040b 09       		.uleb128 0x9
 1804 040c AB020000 		.4byte	.LASF56
 1805 0410 01       		.byte	0x1
 1806 0411 A4       		.byte	0xa4
 1807 0412 CC030000 		.4byte	0x3cc
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 37


 1808 0416 02       		.uleb128 0x2
 1809 0417 91       		.byte	0x91
 1810 0418 6C       		.sleb128 -20
 1811 0419 09       		.uleb128 0x9
 1812 041a 39030000 		.4byte	.LASF57
 1813 041e 01       		.byte	0x1
 1814 041f A4       		.byte	0xa4
 1815 0420 6B000000 		.4byte	0x6b
 1816 0424 02       		.uleb128 0x2
 1817 0425 91       		.byte	0x91
 1818 0426 6B       		.sleb128 -21
 1819 0427 09       		.uleb128 0x9
 1820 0428 F8000000 		.4byte	.LASF15
 1821 042c 01       		.byte	0x1
 1822 042d A4       		.byte	0xa4
 1823 042e 6B000000 		.4byte	0x6b
 1824 0432 02       		.uleb128 0x2
 1825 0433 91       		.byte	0x91
 1826 0434 6A       		.sleb128 -22
 1827 0435 09       		.uleb128 0x9
 1828 0436 B1020000 		.4byte	.LASF14
 1829 043a 01       		.byte	0x1
 1830 043b A4       		.byte	0xa4
 1831 043c 6B000000 		.4byte	0x6b
 1832 0440 02       		.uleb128 0x2
 1833 0441 91       		.byte	0x91
 1834 0442 69       		.sleb128 -23
 1835 0443 00       		.byte	0
 1836 0444 0F       		.uleb128 0xf
 1837 0445 BA000000 		.4byte	.LASF58
 1838 0449 01       		.byte	0x1
 1839 044a B1       		.byte	0xb1
 1840 044b 00000000 		.4byte	.LFB53
 1841 044f 4C000000 		.4byte	.LFE53-.LFB53
 1842 0453 01       		.uleb128 0x1
 1843 0454 9C       		.byte	0x9c
 1844 0455 84040000 		.4byte	0x484
 1845 0459 09       		.uleb128 0x9
 1846 045a AB020000 		.4byte	.LASF56
 1847 045e 01       		.byte	0x1
 1848 045f B1       		.byte	0xb1
 1849 0460 CC030000 		.4byte	0x3cc
 1850 0464 02       		.uleb128 0x2
 1851 0465 91       		.byte	0x91
 1852 0466 74       		.sleb128 -12
 1853 0467 09       		.uleb128 0x9
 1854 0468 B1020000 		.4byte	.LASF14
 1855 046c 01       		.byte	0x1
 1856 046d B1       		.byte	0xb1
 1857 046e 6B000000 		.4byte	0x6b
 1858 0472 02       		.uleb128 0x2
 1859 0473 91       		.byte	0x91
 1860 0474 73       		.sleb128 -13
 1861 0475 09       		.uleb128 0x9
 1862 0476 48010000 		.4byte	.LASF13
 1863 047a 01       		.byte	0x1
 1864 047b B1       		.byte	0xb1
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 38


 1865 047c 6B000000 		.4byte	0x6b
 1866 0480 02       		.uleb128 0x2
 1867 0481 91       		.byte	0x91
 1868 0482 72       		.sleb128 -14
 1869 0483 00       		.byte	0
 1870 0484 10       		.uleb128 0x10
 1871 0485 AF000000 		.4byte	.LASF68
 1872 0489 01       		.byte	0x1
 1873 048a BC       		.byte	0xbc
 1874 048b 85000000 		.4byte	0x85
 1875 048f 00000000 		.4byte	.LFB54
 1876 0493 16010000 		.4byte	.LFE54-.LFB54
 1877 0497 01       		.uleb128 0x1
 1878 0498 9C       		.byte	0x9c
 1879 0499 C8040000 		.4byte	0x4c8
 1880 049d 09       		.uleb128 0x9
 1881 049e 50000000 		.4byte	.LASF53
 1882 04a2 01       		.byte	0x1
 1883 04a3 BC       		.byte	0xbc
 1884 04a4 CC030000 		.4byte	0x3cc
 1885 04a8 02       		.uleb128 0x2
 1886 04a9 91       		.byte	0x91
 1887 04aa 6C       		.sleb128 -20
 1888 04ab 09       		.uleb128 0x9
 1889 04ac DA000000 		.4byte	.LASF59
 1890 04b0 01       		.byte	0x1
 1891 04b1 BC       		.byte	0xbc
 1892 04b2 CC030000 		.4byte	0x3cc
 1893 04b6 02       		.uleb128 0x2
 1894 04b7 91       		.byte	0x91
 1895 04b8 68       		.sleb128 -24
 1896 04b9 0A       		.uleb128 0xa
 1897 04ba 00000000 		.4byte	.LASF60
 1898 04be 01       		.byte	0x1
 1899 04bf C2       		.byte	0xc2
 1900 04c0 85000000 		.4byte	0x85
 1901 04c4 02       		.uleb128 0x2
 1902 04c5 91       		.byte	0x91
 1903 04c6 77       		.sleb128 -9
 1904 04c7 00       		.byte	0
 1905 04c8 11       		.uleb128 0x11
 1906 04c9 41030000 		.4byte	.LASF69
 1907 04cd 01       		.byte	0x1
 1908 04ce E6       		.byte	0xe6
 1909 04cf 00000000 		.4byte	.LFB55
 1910 04d3 10000000 		.4byte	.LFE55-.LFB55
 1911 04d7 01       		.uleb128 0x1
 1912 04d8 9C       		.byte	0x9c
 1913 04d9 08       		.uleb128 0x8
 1914 04da 0E030000 		.4byte	.LASF61
 1915 04de 01       		.byte	0x1
 1916 04df EC       		.byte	0xec
 1917 04e0 00000000 		.4byte	.LFB56
 1918 04e4 70000000 		.4byte	.LFE56-.LFB56
 1919 04e8 01       		.uleb128 0x1
 1920 04e9 9C       		.byte	0x9c
 1921 04ea 0D050000 		.4byte	0x50d
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 39


 1922 04ee 09       		.uleb128 0x9
 1923 04ef 50000000 		.4byte	.LASF53
 1924 04f3 01       		.byte	0x1
 1925 04f4 EC       		.byte	0xec
 1926 04f5 CC030000 		.4byte	0x3cc
 1927 04f9 03       		.uleb128 0x3
 1928 04fa 91       		.byte	0x91
 1929 04fb 947F     		.sleb128 -108
 1930 04fd 0A       		.uleb128 0xa
 1931 04fe 07030000 		.4byte	.LASF62
 1932 0502 01       		.byte	0x1
 1933 0503 EE       		.byte	0xee
 1934 0504 0D050000 		.4byte	0x50d
 1935 0508 03       		.uleb128 0x3
 1936 0509 91       		.byte	0x91
 1937 050a 9C7F     		.sleb128 -100
 1938 050c 00       		.byte	0
 1939 050d 12       		.uleb128 0x12
 1940 050e 85000000 		.4byte	0x85
 1941 0512 13       		.uleb128 0x13
 1942 0513 8C000000 		.4byte	0x8c
 1943 0517 4A       		.byte	0x4a
 1944 0518 00       		.byte	0
 1945 0519 00       		.byte	0
 1946              		.section	.debug_abbrev,"",%progbits
 1947              	.Ldebug_abbrev0:
 1948 0000 01       		.uleb128 0x1
 1949 0001 11       		.uleb128 0x11
 1950 0002 01       		.byte	0x1
 1951 0003 25       		.uleb128 0x25
 1952 0004 0E       		.uleb128 0xe
 1953 0005 13       		.uleb128 0x13
 1954 0006 0B       		.uleb128 0xb
 1955 0007 03       		.uleb128 0x3
 1956 0008 0E       		.uleb128 0xe
 1957 0009 1B       		.uleb128 0x1b
 1958 000a 0E       		.uleb128 0xe
 1959 000b 55       		.uleb128 0x55
 1960 000c 17       		.uleb128 0x17
 1961 000d 11       		.uleb128 0x11
 1962 000e 01       		.uleb128 0x1
 1963 000f 10       		.uleb128 0x10
 1964 0010 17       		.uleb128 0x17
 1965 0011 00       		.byte	0
 1966 0012 00       		.byte	0
 1967 0013 02       		.uleb128 0x2
 1968 0014 24       		.uleb128 0x24
 1969 0015 00       		.byte	0
 1970 0016 0B       		.uleb128 0xb
 1971 0017 0B       		.uleb128 0xb
 1972 0018 3E       		.uleb128 0x3e
 1973 0019 0B       		.uleb128 0xb
 1974 001a 03       		.uleb128 0x3
 1975 001b 0E       		.uleb128 0xe
 1976 001c 00       		.byte	0
 1977 001d 00       		.byte	0
 1978 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 40


 1979 001f 24       		.uleb128 0x24
 1980 0020 00       		.byte	0
 1981 0021 0B       		.uleb128 0xb
 1982 0022 0B       		.uleb128 0xb
 1983 0023 3E       		.uleb128 0x3e
 1984 0024 0B       		.uleb128 0xb
 1985 0025 03       		.uleb128 0x3
 1986 0026 08       		.uleb128 0x8
 1987 0027 00       		.byte	0
 1988 0028 00       		.byte	0
 1989 0029 04       		.uleb128 0x4
 1990 002a 16       		.uleb128 0x16
 1991 002b 00       		.byte	0
 1992 002c 03       		.uleb128 0x3
 1993 002d 0E       		.uleb128 0xe
 1994 002e 3A       		.uleb128 0x3a
 1995 002f 0B       		.uleb128 0xb
 1996 0030 3B       		.uleb128 0x3b
 1997 0031 05       		.uleb128 0x5
 1998 0032 49       		.uleb128 0x49
 1999 0033 13       		.uleb128 0x13
 2000 0034 00       		.byte	0
 2001 0035 00       		.byte	0
 2002 0036 05       		.uleb128 0x5
 2003 0037 13       		.uleb128 0x13
 2004 0038 01       		.byte	0x1
 2005 0039 03       		.uleb128 0x3
 2006 003a 0E       		.uleb128 0xe
 2007 003b 0B       		.uleb128 0xb
 2008 003c 0B       		.uleb128 0xb
 2009 003d 3A       		.uleb128 0x3a
 2010 003e 0B       		.uleb128 0xb
 2011 003f 3B       		.uleb128 0x3b
 2012 0040 0B       		.uleb128 0xb
 2013 0041 01       		.uleb128 0x1
 2014 0042 13       		.uleb128 0x13
 2015 0043 00       		.byte	0
 2016 0044 00       		.byte	0
 2017 0045 06       		.uleb128 0x6
 2018 0046 0D       		.uleb128 0xd
 2019 0047 00       		.byte	0
 2020 0048 03       		.uleb128 0x3
 2021 0049 0E       		.uleb128 0xe
 2022 004a 3A       		.uleb128 0x3a
 2023 004b 0B       		.uleb128 0xb
 2024 004c 3B       		.uleb128 0x3b
 2025 004d 0B       		.uleb128 0xb
 2026 004e 49       		.uleb128 0x49
 2027 004f 13       		.uleb128 0x13
 2028 0050 38       		.uleb128 0x38
 2029 0051 0B       		.uleb128 0xb
 2030 0052 00       		.byte	0
 2031 0053 00       		.byte	0
 2032 0054 07       		.uleb128 0x7
 2033 0055 0D       		.uleb128 0xd
 2034 0056 00       		.byte	0
 2035 0057 03       		.uleb128 0x3
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 41


 2036 0058 08       		.uleb128 0x8
 2037 0059 3A       		.uleb128 0x3a
 2038 005a 0B       		.uleb128 0xb
 2039 005b 3B       		.uleb128 0x3b
 2040 005c 0B       		.uleb128 0xb
 2041 005d 49       		.uleb128 0x49
 2042 005e 13       		.uleb128 0x13
 2043 005f 38       		.uleb128 0x38
 2044 0060 0B       		.uleb128 0xb
 2045 0061 00       		.byte	0
 2046 0062 00       		.byte	0
 2047 0063 08       		.uleb128 0x8
 2048 0064 2E       		.uleb128 0x2e
 2049 0065 01       		.byte	0x1
 2050 0066 3F       		.uleb128 0x3f
 2051 0067 19       		.uleb128 0x19
 2052 0068 03       		.uleb128 0x3
 2053 0069 0E       		.uleb128 0xe
 2054 006a 3A       		.uleb128 0x3a
 2055 006b 0B       		.uleb128 0xb
 2056 006c 3B       		.uleb128 0x3b
 2057 006d 0B       		.uleb128 0xb
 2058 006e 27       		.uleb128 0x27
 2059 006f 19       		.uleb128 0x19
 2060 0070 11       		.uleb128 0x11
 2061 0071 01       		.uleb128 0x1
 2062 0072 12       		.uleb128 0x12
 2063 0073 06       		.uleb128 0x6
 2064 0074 40       		.uleb128 0x40
 2065 0075 18       		.uleb128 0x18
 2066 0076 9642     		.uleb128 0x2116
 2067 0078 19       		.uleb128 0x19
 2068 0079 01       		.uleb128 0x1
 2069 007a 13       		.uleb128 0x13
 2070 007b 00       		.byte	0
 2071 007c 00       		.byte	0
 2072 007d 09       		.uleb128 0x9
 2073 007e 05       		.uleb128 0x5
 2074 007f 00       		.byte	0
 2075 0080 03       		.uleb128 0x3
 2076 0081 0E       		.uleb128 0xe
 2077 0082 3A       		.uleb128 0x3a
 2078 0083 0B       		.uleb128 0xb
 2079 0084 3B       		.uleb128 0x3b
 2080 0085 0B       		.uleb128 0xb
 2081 0086 49       		.uleb128 0x49
 2082 0087 13       		.uleb128 0x13
 2083 0088 02       		.uleb128 0x2
 2084 0089 18       		.uleb128 0x18
 2085 008a 00       		.byte	0
 2086 008b 00       		.byte	0
 2087 008c 0A       		.uleb128 0xa
 2088 008d 34       		.uleb128 0x34
 2089 008e 00       		.byte	0
 2090 008f 03       		.uleb128 0x3
 2091 0090 0E       		.uleb128 0xe
 2092 0091 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 42


 2093 0092 0B       		.uleb128 0xb
 2094 0093 3B       		.uleb128 0x3b
 2095 0094 0B       		.uleb128 0xb
 2096 0095 49       		.uleb128 0x49
 2097 0096 13       		.uleb128 0x13
 2098 0097 02       		.uleb128 0x2
 2099 0098 18       		.uleb128 0x18
 2100 0099 00       		.byte	0
 2101 009a 00       		.byte	0
 2102 009b 0B       		.uleb128 0xb
 2103 009c 05       		.uleb128 0x5
 2104 009d 00       		.byte	0
 2105 009e 03       		.uleb128 0x3
 2106 009f 08       		.uleb128 0x8
 2107 00a0 3A       		.uleb128 0x3a
 2108 00a1 0B       		.uleb128 0xb
 2109 00a2 3B       		.uleb128 0x3b
 2110 00a3 0B       		.uleb128 0xb
 2111 00a4 49       		.uleb128 0x49
 2112 00a5 13       		.uleb128 0x13
 2113 00a6 02       		.uleb128 0x2
 2114 00a7 18       		.uleb128 0x18
 2115 00a8 00       		.byte	0
 2116 00a9 00       		.byte	0
 2117 00aa 0C       		.uleb128 0xc
 2118 00ab 2E       		.uleb128 0x2e
 2119 00ac 00       		.byte	0
 2120 00ad 3F       		.uleb128 0x3f
 2121 00ae 19       		.uleb128 0x19
 2122 00af 03       		.uleb128 0x3
 2123 00b0 0E       		.uleb128 0xe
 2124 00b1 3A       		.uleb128 0x3a
 2125 00b2 0B       		.uleb128 0xb
 2126 00b3 3B       		.uleb128 0x3b
 2127 00b4 0B       		.uleb128 0xb
 2128 00b5 49       		.uleb128 0x49
 2129 00b6 13       		.uleb128 0x13
 2130 00b7 11       		.uleb128 0x11
 2131 00b8 01       		.uleb128 0x1
 2132 00b9 12       		.uleb128 0x12
 2133 00ba 06       		.uleb128 0x6
 2134 00bb 40       		.uleb128 0x40
 2135 00bc 18       		.uleb128 0x18
 2136 00bd 9642     		.uleb128 0x2116
 2137 00bf 19       		.uleb128 0x19
 2138 00c0 00       		.byte	0
 2139 00c1 00       		.byte	0
 2140 00c2 0D       		.uleb128 0xd
 2141 00c3 2E       		.uleb128 0x2e
 2142 00c4 01       		.byte	0x1
 2143 00c5 3F       		.uleb128 0x3f
 2144 00c6 19       		.uleb128 0x19
 2145 00c7 03       		.uleb128 0x3
 2146 00c8 0E       		.uleb128 0xe
 2147 00c9 3A       		.uleb128 0x3a
 2148 00ca 0B       		.uleb128 0xb
 2149 00cb 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 43


 2150 00cc 0B       		.uleb128 0xb
 2151 00cd 49       		.uleb128 0x49
 2152 00ce 13       		.uleb128 0x13
 2153 00cf 11       		.uleb128 0x11
 2154 00d0 01       		.uleb128 0x1
 2155 00d1 12       		.uleb128 0x12
 2156 00d2 06       		.uleb128 0x6
 2157 00d3 40       		.uleb128 0x40
 2158 00d4 18       		.uleb128 0x18
 2159 00d5 9642     		.uleb128 0x2116
 2160 00d7 19       		.uleb128 0x19
 2161 00d8 01       		.uleb128 0x1
 2162 00d9 13       		.uleb128 0x13
 2163 00da 00       		.byte	0
 2164 00db 00       		.byte	0
 2165 00dc 0E       		.uleb128 0xe
 2166 00dd 0F       		.uleb128 0xf
 2167 00de 00       		.byte	0
 2168 00df 0B       		.uleb128 0xb
 2169 00e0 0B       		.uleb128 0xb
 2170 00e1 49       		.uleb128 0x49
 2171 00e2 13       		.uleb128 0x13
 2172 00e3 00       		.byte	0
 2173 00e4 00       		.byte	0
 2174 00e5 0F       		.uleb128 0xf
 2175 00e6 2E       		.uleb128 0x2e
 2176 00e7 01       		.byte	0x1
 2177 00e8 3F       		.uleb128 0x3f
 2178 00e9 19       		.uleb128 0x19
 2179 00ea 03       		.uleb128 0x3
 2180 00eb 0E       		.uleb128 0xe
 2181 00ec 3A       		.uleb128 0x3a
 2182 00ed 0B       		.uleb128 0xb
 2183 00ee 3B       		.uleb128 0x3b
 2184 00ef 0B       		.uleb128 0xb
 2185 00f0 27       		.uleb128 0x27
 2186 00f1 19       		.uleb128 0x19
 2187 00f2 11       		.uleb128 0x11
 2188 00f3 01       		.uleb128 0x1
 2189 00f4 12       		.uleb128 0x12
 2190 00f5 06       		.uleb128 0x6
 2191 00f6 40       		.uleb128 0x40
 2192 00f7 18       		.uleb128 0x18
 2193 00f8 9742     		.uleb128 0x2117
 2194 00fa 19       		.uleb128 0x19
 2195 00fb 01       		.uleb128 0x1
 2196 00fc 13       		.uleb128 0x13
 2197 00fd 00       		.byte	0
 2198 00fe 00       		.byte	0
 2199 00ff 10       		.uleb128 0x10
 2200 0100 2E       		.uleb128 0x2e
 2201 0101 01       		.byte	0x1
 2202 0102 3F       		.uleb128 0x3f
 2203 0103 19       		.uleb128 0x19
 2204 0104 03       		.uleb128 0x3
 2205 0105 0E       		.uleb128 0xe
 2206 0106 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 44


 2207 0107 0B       		.uleb128 0xb
 2208 0108 3B       		.uleb128 0x3b
 2209 0109 0B       		.uleb128 0xb
 2210 010a 27       		.uleb128 0x27
 2211 010b 19       		.uleb128 0x19
 2212 010c 49       		.uleb128 0x49
 2213 010d 13       		.uleb128 0x13
 2214 010e 11       		.uleb128 0x11
 2215 010f 01       		.uleb128 0x1
 2216 0110 12       		.uleb128 0x12
 2217 0111 06       		.uleb128 0x6
 2218 0112 40       		.uleb128 0x40
 2219 0113 18       		.uleb128 0x18
 2220 0114 9742     		.uleb128 0x2117
 2221 0116 19       		.uleb128 0x19
 2222 0117 01       		.uleb128 0x1
 2223 0118 13       		.uleb128 0x13
 2224 0119 00       		.byte	0
 2225 011a 00       		.byte	0
 2226 011b 11       		.uleb128 0x11
 2227 011c 2E       		.uleb128 0x2e
 2228 011d 00       		.byte	0
 2229 011e 3F       		.uleb128 0x3f
 2230 011f 19       		.uleb128 0x19
 2231 0120 03       		.uleb128 0x3
 2232 0121 0E       		.uleb128 0xe
 2233 0122 3A       		.uleb128 0x3a
 2234 0123 0B       		.uleb128 0xb
 2235 0124 3B       		.uleb128 0x3b
 2236 0125 0B       		.uleb128 0xb
 2237 0126 11       		.uleb128 0x11
 2238 0127 01       		.uleb128 0x1
 2239 0128 12       		.uleb128 0x12
 2240 0129 06       		.uleb128 0x6
 2241 012a 40       		.uleb128 0x40
 2242 012b 18       		.uleb128 0x18
 2243 012c 9642     		.uleb128 0x2116
 2244 012e 19       		.uleb128 0x19
 2245 012f 00       		.byte	0
 2246 0130 00       		.byte	0
 2247 0131 12       		.uleb128 0x12
 2248 0132 01       		.uleb128 0x1
 2249 0133 01       		.byte	0x1
 2250 0134 49       		.uleb128 0x49
 2251 0135 13       		.uleb128 0x13
 2252 0136 00       		.byte	0
 2253 0137 00       		.byte	0
 2254 0138 13       		.uleb128 0x13
 2255 0139 21       		.uleb128 0x21
 2256 013a 00       		.byte	0
 2257 013b 49       		.uleb128 0x49
 2258 013c 13       		.uleb128 0x13
 2259 013d 2F       		.uleb128 0x2f
 2260 013e 0B       		.uleb128 0xb
 2261 013f 00       		.byte	0
 2262 0140 00       		.byte	0
 2263 0141 00       		.byte	0
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 45


 2264              		.section	.debug_aranges,"",%progbits
 2265 0000 CC000000 		.4byte	0xcc
 2266 0004 0200     		.2byte	0x2
 2267 0006 00000000 		.4byte	.Ldebug_info0
 2268 000a 04       		.byte	0x4
 2269 000b 00       		.byte	0
 2270 000c 0000     		.2byte	0
 2271 000e 0000     		.2byte	0
 2272 0010 00000000 		.4byte	.LFB34
 2273 0014 60000000 		.4byte	.LFE34-.LFB34
 2274 0018 00000000 		.4byte	.LFB35
 2275 001c 1E000000 		.4byte	.LFE35-.LFB35
 2276 0020 00000000 		.4byte	.LFB36
 2277 0024 32000000 		.4byte	.LFE36-.LFB36
 2278 0028 00000000 		.4byte	.LFB37
 2279 002c 1A000000 		.4byte	.LFE37-.LFB37
 2280 0030 00000000 		.4byte	.LFB38
 2281 0034 32000000 		.4byte	.LFE38-.LFB38
 2282 0038 00000000 		.4byte	.LFB39
 2283 003c 1A000000 		.4byte	.LFE39-.LFB39
 2284 0040 00000000 		.4byte	.LFB40
 2285 0044 32000000 		.4byte	.LFE40-.LFB40
 2286 0048 00000000 		.4byte	.LFB41
 2287 004c 26000000 		.4byte	.LFE41-.LFB41
 2288 0050 00000000 		.4byte	.LFB42
 2289 0054 32000000 		.4byte	.LFE42-.LFB42
 2290 0058 00000000 		.4byte	.LFB43
 2291 005c 26000000 		.4byte	.LFE43-.LFB43
 2292 0060 00000000 		.4byte	.LFB44
 2293 0064 32000000 		.4byte	.LFE44-.LFB44
 2294 0068 00000000 		.4byte	.LFB45
 2295 006c 26000000 		.4byte	.LFE45-.LFB45
 2296 0070 00000000 		.4byte	.LFB46
 2297 0074 32000000 		.4byte	.LFE46-.LFB46
 2298 0078 00000000 		.4byte	.LFB47
 2299 007c 26000000 		.4byte	.LFE47-.LFB47
 2300 0080 00000000 		.4byte	.LFB48
 2301 0084 32000000 		.4byte	.LFE48-.LFB48
 2302 0088 00000000 		.4byte	.LFB49
 2303 008c 26000000 		.4byte	.LFE49-.LFB49
 2304 0090 00000000 		.4byte	.LFB50
 2305 0094 62000000 		.4byte	.LFE50-.LFB50
 2306 0098 00000000 		.4byte	.LFB51
 2307 009c 54000000 		.4byte	.LFE51-.LFB51
 2308 00a0 00000000 		.4byte	.LFB52
 2309 00a4 56000000 		.4byte	.LFE52-.LFB52
 2310 00a8 00000000 		.4byte	.LFB53
 2311 00ac 4C000000 		.4byte	.LFE53-.LFB53
 2312 00b0 00000000 		.4byte	.LFB54
 2313 00b4 16010000 		.4byte	.LFE54-.LFB54
 2314 00b8 00000000 		.4byte	.LFB55
 2315 00bc 10000000 		.4byte	.LFE55-.LFB55
 2316 00c0 00000000 		.4byte	.LFB56
 2317 00c4 70000000 		.4byte	.LFE56-.LFB56
 2318 00c8 00000000 		.4byte	0
 2319 00cc 00000000 		.4byte	0
 2320              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 46


 2321              	.Ldebug_ranges0:
 2322 0000 00000000 		.4byte	.LFB34
 2323 0004 60000000 		.4byte	.LFE34
 2324 0008 00000000 		.4byte	.LFB35
 2325 000c 1E000000 		.4byte	.LFE35
 2326 0010 00000000 		.4byte	.LFB36
 2327 0014 32000000 		.4byte	.LFE36
 2328 0018 00000000 		.4byte	.LFB37
 2329 001c 1A000000 		.4byte	.LFE37
 2330 0020 00000000 		.4byte	.LFB38
 2331 0024 32000000 		.4byte	.LFE38
 2332 0028 00000000 		.4byte	.LFB39
 2333 002c 1A000000 		.4byte	.LFE39
 2334 0030 00000000 		.4byte	.LFB40
 2335 0034 32000000 		.4byte	.LFE40
 2336 0038 00000000 		.4byte	.LFB41
 2337 003c 26000000 		.4byte	.LFE41
 2338 0040 00000000 		.4byte	.LFB42
 2339 0044 32000000 		.4byte	.LFE42
 2340 0048 00000000 		.4byte	.LFB43
 2341 004c 26000000 		.4byte	.LFE43
 2342 0050 00000000 		.4byte	.LFB44
 2343 0054 32000000 		.4byte	.LFE44
 2344 0058 00000000 		.4byte	.LFB45
 2345 005c 26000000 		.4byte	.LFE45
 2346 0060 00000000 		.4byte	.LFB46
 2347 0064 32000000 		.4byte	.LFE46
 2348 0068 00000000 		.4byte	.LFB47
 2349 006c 26000000 		.4byte	.LFE47
 2350 0070 00000000 		.4byte	.LFB48
 2351 0074 32000000 		.4byte	.LFE48
 2352 0078 00000000 		.4byte	.LFB49
 2353 007c 26000000 		.4byte	.LFE49
 2354 0080 00000000 		.4byte	.LFB50
 2355 0084 62000000 		.4byte	.LFE50
 2356 0088 00000000 		.4byte	.LFB51
 2357 008c 54000000 		.4byte	.LFE51
 2358 0090 00000000 		.4byte	.LFB52
 2359 0094 56000000 		.4byte	.LFE52
 2360 0098 00000000 		.4byte	.LFB53
 2361 009c 4C000000 		.4byte	.LFE53
 2362 00a0 00000000 		.4byte	.LFB54
 2363 00a4 16010000 		.4byte	.LFE54
 2364 00a8 00000000 		.4byte	.LFB55
 2365 00ac 10000000 		.4byte	.LFE55
 2366 00b0 00000000 		.4byte	.LFB56
 2367 00b4 70000000 		.4byte	.LFE56
 2368 00b8 00000000 		.4byte	0
 2369 00bc 00000000 		.4byte	0
 2370              		.section	.debug_line,"",%progbits
 2371              	.Ldebug_line0:
 2372 0000 54020000 		.section	.debug_str,"MS",%progbits,1
 2372      02004B00 
 2372      00000201 
 2372      FB0E0D00 
 2372      01010101 
 2373              	.LASF60:
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 47


 2374 0000 72657375 		.ascii	"result\000"
 2374      6C7400
 2375              	.LASF51:
 2376 0007 79656172 		.ascii	"yearBCD\000"
 2376      42434400 
 2377              	.LASF43:
 2378 000f 776B4461 		.ascii	"wkDayBCD\000"
 2378      79424344 
 2378      00
 2379              	.LASF32:
 2380 0018 62636448 		.ascii	"bcdHour\000"
 2380      6F757200 
 2381              	.LASF2:
 2382 0020 73686F72 		.ascii	"short int\000"
 2382      7420696E 
 2382      7400
 2383              	.LASF50:
 2384 002a 67657459 		.ascii	"getYear\000"
 2384      65617200 
 2385              	.LASF12:
 2386 0032 73697A65 		.ascii	"sizetype\000"
 2386      74797065 
 2386      00
 2387              	.LASF48:
 2388 003b 73657459 		.ascii	"setYear\000"
 2388      65617200 
 2389              	.LASF23:
 2390 0043 6D6F6465 		.ascii	"mode\000"
 2390      00
 2391              	.LASF16:
 2392 0048 7765656B 		.ascii	"weekday\000"
 2392      64617900 
 2393              	.LASF53:
 2394 0050 63757272 		.ascii	"currentTime\000"
 2394      656E7454 
 2394      696D6500 
 2395              	.LASF20:
 2396 005c 76616C75 		.ascii	"value\000"
 2396      6500
 2397              	.LASF22:
 2398 0062 6368616E 		.ascii	"changePowerMode\000"
 2398      6765506F 
 2398      7765724D 
 2398      6F646500 
 2399              	.LASF19:
 2400 0072 636F6E74 		.ascii	"controlReg\000"
 2400      726F6C52 
 2400      656700
 2401              	.LASF66:
 2402 007d 75696E74 		.ascii	"uint8\000"
 2402      3800
 2403              	.LASF24:
 2404 0083 73657453 		.ascii	"setSec\000"
 2404      656300
 2405              	.LASF49:
 2406 008a 62636459 		.ascii	"bcdYear\000"
 2406      65617200 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 48


 2407              	.LASF45:
 2408 0092 6263644D 		.ascii	"bcdMonth\000"
 2408      6F6E7468 
 2408      00
 2409              	.LASF9:
 2410 009b 666C6F61 		.ascii	"float\000"
 2410      7400
 2411              	.LASF6:
 2412 00a1 6C6F6E67 		.ascii	"long long int\000"
 2412      206C6F6E 
 2412      6720696E 
 2412      7400
 2413              	.LASF68:
 2414 00af 63686563 		.ascii	"checkAlarm\000"
 2414      6B416C61 
 2414      726D00
 2415              	.LASF58:
 2416 00ba 63726561 		.ascii	"createAlarmTEST\000"
 2416      7465416C 
 2416      61726D54 
 2416      45535400 
 2417              	.LASF38:
 2418 00ca 64617942 		.ascii	"dayBCD\000"
 2418      434400
 2419              	.LASF4:
 2420 00d1 6C6F6E67 		.ascii	"long int\000"
 2420      20696E74 
 2420      00
 2421              	.LASF59:
 2422 00da 616C6172 		.ascii	"alarmTime\000"
 2422      6D54696D 
 2422      6500
 2423              	.LASF25:
 2424 00e4 7365636F 		.ascii	"secondsBCD\000"
 2424      6E647342 
 2424      434400
 2425              	.LASF33:
 2426 00ef 67657448 		.ascii	"getHours\000"
 2426      6F757273 
 2426      00
 2427              	.LASF15:
 2428 00f8 686F7572 		.ascii	"hour\000"
 2428      00
 2429              	.LASF1:
 2430 00fd 756E7369 		.ascii	"unsigned char\000"
 2430      676E6564 
 2430      20636861 
 2430      7200
 2431              	.LASF64:
 2432 010b 5254432E 		.ascii	"RTC.c\000"
 2432      6300
 2433              	.LASF46:
 2434 0111 6765744D 		.ascii	"getMonth\000"
 2434      6F6E7468 
 2434      00
 2435              	.LASF52:
 2436 011a 67657454 		.ascii	"getTime\000"
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 49


 2436      696D6500 
 2437              	.LASF28:
 2438 0122 6D696E75 		.ascii	"minutesBCD\000"
 2438      74657342 
 2438      434400
 2439              	.LASF35:
 2440 012d 73657444 		.ascii	"setDay\000"
 2440      617900
 2441              	.LASF54:
 2442 0134 73657454 		.ascii	"setTime\000"
 2442      696D6500 
 2443              	.LASF0:
 2444 013c 7369676E 		.ascii	"signed char\000"
 2444      65642063 
 2444      68617200 
 2445              	.LASF13:
 2446 0148 7365636F 		.ascii	"second\000"
 2446      6E6400
 2447              	.LASF7:
 2448 014f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2448      206C6F6E 
 2448      6720756E 
 2448      7369676E 
 2448      65642069 
 2449              	.LASF8:
 2450 0166 756E7369 		.ascii	"unsigned int\000"
 2450      676E6564 
 2450      20696E74 
 2450      00
 2451              	.LASF26:
 2452 0173 7365744D 		.ascii	"setMin\000"
 2452      696E00
 2453              	.LASF31:
 2454 017a 73657448 		.ascii	"setHours\000"
 2454      6F757273 
 2454      00
 2455              	.LASF67:
 2456 0183 74696D65 		.ascii	"time\000"
 2456      00
 2457              	.LASF37:
 2458 0188 67657444 		.ascii	"getDay\000"
 2458      617900
 2459              	.LASF3:
 2460 018f 73686F72 		.ascii	"short unsigned int\000"
 2460      7420756E 
 2460      7369676E 
 2460      65642069 
 2460      6E7400
 2461              	.LASF18:
 2462 01a2 79656172 		.ascii	"year\000"
 2462      00
 2463              	.LASF44:
 2464 01a7 7365744D 		.ascii	"setMonth\000"
 2464      6F6E7468 
 2464      00
 2465              	.LASF11:
 2466 01b0 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 50


 2466      00
 2467              	.LASF30:
 2468 01b5 6765744D 		.ascii	"getMin\000"
 2468      696E00
 2469              	.LASF63:
 2470 01bc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2470      4320342E 
 2470      392E3320 
 2470      32303135 
 2470      30333033 
 2471 01ef 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2471      20726576 
 2471      6973696F 
 2471      6E203232 
 2471      31323230 
 2472 0222 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2472      66756E63 
 2472      74696F6E 
 2472      2D736563 
 2472      74696F6E 
 2473              	.LASF65:
 2474 024a 433A5C55 		.ascii	"C:\\Users\\Joseph\\Documents\\CY8CKIT-049-42xx\\1.0"
 2474      73657273 
 2474      5C4A6F73 
 2474      6570685C 
 2474      446F6375 
 2475 0278 5C466972 		.ascii	"\\Firmware\\SCB_Bootloader\\Sunrise Clock.cydsn\000"
 2475      6D776172 
 2475      655C5343 
 2475      425F426F 
 2475      6F746C6F 
 2476              	.LASF17:
 2477 02a5 6D6F6E74 		.ascii	"month\000"
 2477      6800
 2478              	.LASF56:
 2479 02ab 616C6172 		.ascii	"alarm\000"
 2479      6D00
 2480              	.LASF14:
 2481 02b1 6D696E75 		.ascii	"minute\000"
 2481      746500
 2482              	.LASF47:
 2483 02b8 6D6F6E74 		.ascii	"monthBCD\000"
 2483      68424344 
 2483      00
 2484              	.LASF5:
 2485 02c1 6C6F6E67 		.ascii	"long unsigned int\000"
 2485      20756E73 
 2485      69676E65 
 2485      6420696E 
 2485      7400
 2486              	.LASF34:
 2487 02d3 686F7572 		.ascii	"hourBCD\000"
 2487      42434400 
 2488              	.LASF10:
 2489 02db 646F7562 		.ascii	"double\000"
 2489      6C6500
 2490              	.LASF36:
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\cct6wbd7.s 			page 51


 2491 02e2 62636444 		.ascii	"bcdDay\000"
 2491      617900
 2492              	.LASF40:
 2493 02e9 776B6461 		.ascii	"wkday\000"
 2493      7900
 2494              	.LASF27:
 2495 02ef 6D696E75 		.ascii	"minutes\000"
 2495      74657300 
 2496              	.LASF42:
 2497 02f7 67657457 		.ascii	"getWkDay\000"
 2497      6B446179 
 2497      00
 2498              	.LASF29:
 2499 0300 67657453 		.ascii	"getSec\000"
 2499      656300
 2500              	.LASF62:
 2501 0307 6F757470 		.ascii	"output\000"
 2501      757400
 2502              	.LASF61:
 2503 030e 7072696E 		.ascii	"printTime\000"
 2503      7454696D 
 2503      6500
 2504              	.LASF41:
 2505 0318 62636457 		.ascii	"bcdWkday\000"
 2505      6B646179 
 2505      00
 2506              	.LASF39:
 2507 0321 73657457 		.ascii	"setWkDay\000"
 2507      6B446179 
 2507      00
 2508              	.LASF21:
 2509 032a 6368616E 		.ascii	"changeHourMode\000"
 2509      6765486F 
 2509      75724D6F 
 2509      646500
 2510              	.LASF57:
 2511 0339 7765656B 		.ascii	"weekDay\000"
 2511      44617900 
 2512              	.LASF69:
 2513 0341 736F6674 		.ascii	"softReset\000"
 2513      52657365 
 2513      7400
 2514              	.LASF55:
 2515 034b 63726561 		.ascii	"createAlarm\000"
 2515      7465416C 
 2515      61726D00 
 2516              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
