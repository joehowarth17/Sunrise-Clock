ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	UART_1_initVar
  18              		.bss
  19              		.type	UART_1_initVar, %object
  20              		.size	UART_1_initVar, 1
  21              	UART_1_initVar:
  22 0000 00       		.space	1
  23              		.global	UART_1_IntrTxMask
  24 0001 00       		.align	1
  25              		.type	UART_1_IntrTxMask, %object
  26              		.size	UART_1_IntrTxMask, 2
  27              	UART_1_IntrTxMask:
  28 0002 0000     		.space	2
  29              		.section	.text.UART_1_Init,"ax",%progbits
  30              		.align	2
  31              		.global	UART_1_Init
  32              		.code	16
  33              		.thumb_func
  34              		.type	UART_1_Init, %function
  35              	UART_1_Init:
  36              	.LFB0:
  37              		.file 1 "Generated_Source\\PSoC4\\UART_1.c"
   1:Generated_Source\PSoC4/UART_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_1.c **** * \file UART_1.c
   3:Generated_Source\PSoC4/UART_1.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_1.c **** *
   5:Generated_Source\PSoC4/UART_1.c **** * \brief
   6:Generated_Source\PSoC4/UART_1.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/UART_1.c **** *
   8:Generated_Source\PSoC4/UART_1.c **** * Note:
   9:Generated_Source\PSoC4/UART_1.c **** *
  10:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************
  11:Generated_Source\PSoC4/UART_1.c **** * \copyright
  12:Generated_Source\PSoC4/UART_1.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/UART_1.c **** 
  18:Generated_Source\PSoC4/UART_1.c **** #include "UART_1_PVT.h"
  19:Generated_Source\PSoC4/UART_1.c **** 
  20:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_I2C_INC)
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 2


  21:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_I2C_PVT.h"
  22:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/UART_1.c **** 
  24:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/UART_1.c **** 
  28:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_SPI_INC || UART_1_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_SPI_INC || UART_1_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/UART_1.c **** 
  32:Generated_Source\PSoC4/UART_1.c **** 
  33:Generated_Source\PSoC4/UART_1.c **** /***************************************
  34:Generated_Source\PSoC4/UART_1.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/UART_1.c **** ***************************************/
  36:Generated_Source\PSoC4/UART_1.c **** 
  37:Generated_Source\PSoC4/UART_1.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/UART_1.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbMode = UART_1_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbEnableWake;
  42:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbEnableIntr;
  43:Generated_Source\PSoC4/UART_1.c **** 
  44:Generated_Source\PSoC4/UART_1.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_mode;
  46:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_acceptAddr;
  47:Generated_Source\PSoC4/UART_1.c **** 
  48:Generated_Source\PSoC4/UART_1.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 * UART_1_rxBuffer;
  50:Generated_Source\PSoC4/UART_1.c ****     uint8  UART_1_rxDataBits;
  51:Generated_Source\PSoC4/UART_1.c ****     uint32 UART_1_rxBufferSize;
  52:Generated_Source\PSoC4/UART_1.c **** 
  53:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 * UART_1_txBuffer;
  54:Generated_Source\PSoC4/UART_1.c ****     uint8  UART_1_txDataBits;
  55:Generated_Source\PSoC4/UART_1.c ****     uint32 UART_1_txBufferSize;
  56:Generated_Source\PSoC4/UART_1.c **** 
  57:Generated_Source\PSoC4/UART_1.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_numberOfAddr;
  59:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_subAddrSize;
  60:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/UART_1.c **** 
  62:Generated_Source\PSoC4/UART_1.c **** 
  63:Generated_Source\PSoC4/UART_1.c **** /***************************************
  64:Generated_Source\PSoC4/UART_1.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/UART_1.c **** ***************************************/
  66:Generated_Source\PSoC4/UART_1.c **** /**
  67:Generated_Source\PSoC4/UART_1.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/UART_1.c **** * \{
  69:Generated_Source\PSoC4/UART_1.c **** */
  70:Generated_Source\PSoC4/UART_1.c **** 
  71:Generated_Source\PSoC4/UART_1.c **** /** UART_1_initVar indicates whether the UART_1 
  72:Generated_Source\PSoC4/UART_1.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/UART_1.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/UART_1.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/UART_1.c **** *  call to the UART_1_Start() routine.
  76:Generated_Source\PSoC4/UART_1.c **** *
  77:Generated_Source\PSoC4/UART_1.c **** *  If re-initialization of the component is required, then the 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 3


  78:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function can be called before the 
  79:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() or UART_1_Enable() function.
  80:Generated_Source\PSoC4/UART_1.c **** */
  81:Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  82:Generated_Source\PSoC4/UART_1.c **** 
  83:Generated_Source\PSoC4/UART_1.c **** 
  84:Generated_Source\PSoC4/UART_1.c **** #if (! (UART_1_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/UART_1.c ****         UART_1_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/UART_1.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/UART_1.c ****     * UART_1_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/UART_1.c ****     * will be restored on a subsequent UART_1_Enable() call.
  89:Generated_Source\PSoC4/UART_1.c ****     */
  90:Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/UART_1.c **** #endif /* (! (UART_1_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/UART_1.c ****               UART_1_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/UART_1.c **** /** \} globals */
  94:Generated_Source\PSoC4/UART_1.c **** 
  95:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/UART_1.c **** #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/UART_1.c ****     void (*UART_1_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/UART_1.c **** #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/UART_1.c **** 
 101:Generated_Source\PSoC4/UART_1.c **** 
 102:Generated_Source\PSoC4/UART_1.c **** /***************************************
 103:Generated_Source\PSoC4/UART_1.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/UART_1.c **** ***************************************/
 105:Generated_Source\PSoC4/UART_1.c **** 
 106:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModeStop(void);
 108:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/UART_1.c **** 
 110:Generated_Source\PSoC4/UART_1.c **** 
 111:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
 113:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/UART_1.c **** *
 115:Generated_Source\PSoC4/UART_1.c **** *  Initializes the UART_1 component to operate in one of the selected
 116:Generated_Source\PSoC4/UART_1.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/UART_1.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/UART_1.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/UART_1.c **** *  UART_1_I2CInit, UART_1_SpiInit, 
 120:Generated_Source\PSoC4/UART_1.c **** *  UART_1_UartInit or UART_1_EzI2CInit.
 121:Generated_Source\PSoC4/UART_1.c **** *
 122:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void)
 124:Generated_Source\PSoC4/UART_1.c **** {
  38              		.loc 1 124 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
 125:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 4


 127:Generated_Source\PSoC4/UART_1.c ****     {
 128:Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 0u;
 129:Generated_Source\PSoC4/UART_1.c ****     }
 130:Generated_Source\PSoC4/UART_1.c ****     else
 131:Generated_Source\PSoC4/UART_1.c ****     {
 132:Generated_Source\PSoC4/UART_1.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/UART_1.c ****     }
 134:Generated_Source\PSoC4/UART_1.c **** 
 135:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/UART_1.c ****     UART_1_I2CInit();
 137:Generated_Source\PSoC4/UART_1.c **** 
 138:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiInit();
 140:Generated_Source\PSoC4/UART_1.c **** 
 141:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/UART_1.c ****     UART_1_UartInit();
  46              		.loc 1 142 0
  47 0004 FFF7FEFF 		bl	UART_1_UartInit
 143:Generated_Source\PSoC4/UART_1.c **** 
 144:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/UART_1.c ****     UART_1_EzI2CInit();
 146:Generated_Source\PSoC4/UART_1.c **** 
 147:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/UART_1.c **** }
  48              		.loc 1 148 0
  49 0008 BD46     		mov	sp, r7
  50              		@ sp needed
  51 000a 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	UART_1_Init, .-UART_1_Init
  55              		.section	.text.UART_1_Enable,"ax",%progbits
  56              		.align	2
  57              		.global	UART_1_Enable
  58              		.code	16
  59              		.thumb_func
  60              		.type	UART_1_Enable, %function
  61              	UART_1_Enable:
  62              	.LFB1:
 149:Generated_Source\PSoC4/UART_1.c **** 
 150:Generated_Source\PSoC4/UART_1.c **** 
 151:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 153:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/UART_1.c **** *
 155:Generated_Source\PSoC4/UART_1.c **** *  Enables UART_1 component operation: activates the hardware and 
 156:Generated_Source\PSoC4/UART_1.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/UART_1.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/UART_1.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/UART_1.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/UART_1.c **** *  internal or external.
 162:Generated_Source\PSoC4/UART_1.c **** *  The UART_1 configuration should be not changed when the component
 163:Generated_Source\PSoC4/UART_1.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/UART_1.c **** *  component.
 165:Generated_Source\PSoC4/UART_1.c **** *  When configuration is set to “Unconfigured UART_1”, the component 
 166:Generated_Source\PSoC4/UART_1.c **** *  must first be initialized to operate in one of the following configurations: 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 5


 167:Generated_Source\PSoC4/UART_1.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/UART_1.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/UART_1.c **** *
 170:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void)
 172:Generated_Source\PSoC4/UART_1.c **** {
  63              		.loc 1 172 0
  64              		.cfi_startproc
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
 173:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/UART_1.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/UART_1.c ****     if (!UART_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/UART_1.c ****     {
 177:Generated_Source\PSoC4/UART_1.c ****         UART_1_CTRL_REG |= UART_1_CTRL_ENABLED;
 178:Generated_Source\PSoC4/UART_1.c **** 
 179:Generated_Source\PSoC4/UART_1.c ****         UART_1_ScbEnableIntr();
 180:Generated_Source\PSoC4/UART_1.c **** 
 181:Generated_Source\PSoC4/UART_1.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/UART_1.c ****         UART_1_ScbModePostEnable();
 183:Generated_Source\PSoC4/UART_1.c ****     }
 184:Generated_Source\PSoC4/UART_1.c **** #else
 185:Generated_Source\PSoC4/UART_1.c ****     UART_1_CTRL_REG |= UART_1_CTRL_ENABLED;
  71              		.loc 1 185 0
  72 0004 064B     		ldr	r3, .L3
  73 0006 064A     		ldr	r2, .L3
  74 0008 1268     		ldr	r2, [r2]
  75 000a 8021     		mov	r1, #128
  76 000c 0906     		lsl	r1, r1, #24
  77 000e 0A43     		orr	r2, r1
  78 0010 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/UART_1.c **** 
 187:Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbEnableIntr();
  79              		.loc 1 187 0
  80 0012 FFF7FEFF 		bl	UART_1_ScbEnableIntr
 188:Generated_Source\PSoC4/UART_1.c **** 
 189:Generated_Source\PSoC4/UART_1.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbModePostEnable();
  81              		.loc 1 190 0
  82 0016 FFF7FEFF 		bl	UART_1_ScbModePostEnable
 191:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/UART_1.c **** }
  83              		.loc 1 192 0
  84 001a BD46     		mov	sp, r7
  85              		@ sp needed
  86 001c 80BD     		pop	{r7, pc}
  87              	.L4:
  88 001e C046     		.align	2
  89              	.L3:
  90 0020 00000640 		.word	1074135040
  91              		.cfi_endproc
  92              	.LFE1:
  93              		.size	UART_1_Enable, .-UART_1_Enable
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 6


  94              		.section	.text.UART_1_Start,"ax",%progbits
  95              		.align	2
  96              		.global	UART_1_Start
  97              		.code	16
  98              		.thumb_func
  99              		.type	UART_1_Start, %function
 100              	UART_1_Start:
 101              	.LFB2:
 193:Generated_Source\PSoC4/UART_1.c **** 
 194:Generated_Source\PSoC4/UART_1.c **** 
 195:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
 197:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/UART_1.c **** *
 199:Generated_Source\PSoC4/UART_1.c **** *  Invokes UART_1_Init() and UART_1_Enable().
 200:Generated_Source\PSoC4/UART_1.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/UART_1.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/UART_1.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/UART_1.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/UART_1.c **** *
 205:Generated_Source\PSoC4/UART_1.c **** * \globalvars
 206:Generated_Source\PSoC4/UART_1.c **** *  UART_1_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/UART_1.c **** *  on first function call.
 208:Generated_Source\PSoC4/UART_1.c **** *
 209:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void)
 211:Generated_Source\PSoC4/UART_1.c **** {
 102              		.loc 1 211 0
 103              		.cfi_startproc
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/UART_1.c ****     if (0u == UART_1_initVar)
 110              		.loc 1 212 0
 111 0004 064B     		ldr	r3, .L7
 112 0006 1B78     		ldrb	r3, [r3]
 113 0008 002B     		cmp	r3, #0
 114 000a 04D1     		bne	.L6
 213:Generated_Source\PSoC4/UART_1.c ****     {
 214:Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
 115              		.loc 1 214 0
 116 000c FFF7FEFF 		bl	UART_1_Init
 215:Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u; /* Component was initialized */
 117              		.loc 1 215 0
 118 0010 034B     		ldr	r3, .L7
 119 0012 0122     		mov	r2, #1
 120 0014 1A70     		strb	r2, [r3]
 121              	.L6:
 216:Generated_Source\PSoC4/UART_1.c ****     }
 217:Generated_Source\PSoC4/UART_1.c **** 
 218:Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
 122              		.loc 1 218 0
 123 0016 FFF7FEFF 		bl	UART_1_Enable
 219:Generated_Source\PSoC4/UART_1.c **** }
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 7


 124              		.loc 1 219 0
 125 001a BD46     		mov	sp, r7
 126              		@ sp needed
 127 001c 80BD     		pop	{r7, pc}
 128              	.L8:
 129 001e C046     		.align	2
 130              	.L7:
 131 0020 00000000 		.word	UART_1_initVar
 132              		.cfi_endproc
 133              	.LFE2:
 134              		.size	UART_1_Start, .-UART_1_Start
 135              		.section	.text.UART_1_Stop,"ax",%progbits
 136              		.align	2
 137              		.global	UART_1_Stop
 138              		.code	16
 139              		.thumb_func
 140              		.type	UART_1_Stop, %function
 141              	UART_1_Stop:
 142              	.LFB3:
 220:Generated_Source\PSoC4/UART_1.c **** 
 221:Generated_Source\PSoC4/UART_1.c **** 
 222:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 224:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/UART_1.c **** *
 226:Generated_Source\PSoC4/UART_1.c **** *  Disables the UART_1 component: disable the hardware and internal 
 227:Generated_Source\PSoC4/UART_1.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/UART_1.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/UART_1.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/UART_1.c **** *  Refer to the function UART_1_Enable() for the interrupt 
 231:Generated_Source\PSoC4/UART_1.c **** *  configuration details.
 232:Generated_Source\PSoC4/UART_1.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/UART_1.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/UART_1.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/UART_1.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/UART_1.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/UART_1.c **** *
 238:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void)
 240:Generated_Source\PSoC4/UART_1.c **** {
 143              		.loc 1 240 0
 144              		.cfi_startproc
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/UART_1.c ****     UART_1_DisableInt();
 243:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/UART_1.c **** 
 245:Generated_Source\PSoC4/UART_1.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbModeStop();
 151              		.loc 1 246 0
 152 0004 FFF7FEFF 		bl	UART_1_ScbModeStop
 247:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 8


 248:Generated_Source\PSoC4/UART_1.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/UART_1.c ****     UART_1_CTRL_REG &= (uint32) ~UART_1_CTRL_ENABLED;
 153              		.loc 1 249 0
 154 0008 054B     		ldr	r3, .L10
 155 000a 054A     		ldr	r2, .L10
 156 000c 1268     		ldr	r2, [r2]
 157 000e 5200     		lsl	r2, r2, #1
 158 0010 5208     		lsr	r2, r2, #1
 159 0012 1A60     		str	r2, [r3]
 250:Generated_Source\PSoC4/UART_1.c **** 
 251:Generated_Source\PSoC4/UART_1.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/UART_1.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/UART_1.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/UART_1.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/UART_1.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/UART_1.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/UART_1.c ****     * is disabled.
 258:Generated_Source\PSoC4/UART_1.c ****     */
 259:Generated_Source\PSoC4/UART_1.c ****     UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 160              		.loc 1 259 0
 161 0014 034B     		ldr	r3, .L10+4
 162 0016 0022     		mov	r2, #0
 163 0018 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART_1.c **** 
 261:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/UART_1.c ****     UART_1_ClearPendingInt();
 263:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/UART_1.c **** }
 164              		.loc 1 264 0
 165 001a BD46     		mov	sp, r7
 166              		@ sp needed
 167 001c 80BD     		pop	{r7, pc}
 168              	.L11:
 169 001e C046     		.align	2
 170              	.L10:
 171 0020 00000640 		.word	1074135040
 172 0024 880F0640 		.word	1074139016
 173              		.cfi_endproc
 174              	.LFE3:
 175              		.size	UART_1_Stop, .-UART_1_Stop
 176              		.section	.text.UART_1_SetRxFifoLevel,"ax",%progbits
 177              		.align	2
 178              		.global	UART_1_SetRxFifoLevel
 179              		.code	16
 180              		.thumb_func
 181              		.type	UART_1_SetRxFifoLevel, %function
 182              	UART_1_SetRxFifoLevel:
 183              	.LFB4:
 265:Generated_Source\PSoC4/UART_1.c **** 
 266:Generated_Source\PSoC4/UART_1.c **** 
 267:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_SetRxFifoLevel
 269:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/UART_1.c **** *
 271:Generated_Source\PSoC4/UART_1.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/UART_1.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/UART_1.c **** *  interrupt request is generated.
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 9


 274:Generated_Source\PSoC4/UART_1.c **** *
 275:Generated_Source\PSoC4/UART_1.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/UART_1.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/UART_1.c **** *
 278:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/UART_1.c **** void UART_1_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/UART_1.c **** {
 184              		.loc 1 280 0
 185              		.cfi_startproc
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 84B0     		sub	sp, sp, #16
 191              		.cfi_def_cfa_offset 24
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/UART_1.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/UART_1.c **** 
 283:Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl = UART_1_RX_FIFO_CTRL_REG;
 195              		.loc 1 283 0
 196 0008 094B     		ldr	r3, .L13
 197 000a 1B68     		ldr	r3, [r3]
 198 000c FB60     		str	r3, [r7, #12]
 284:Generated_Source\PSoC4/UART_1.c **** 
 285:Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl &= ((uint32) ~UART_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 199              		.loc 1 285 0
 200 000e FB68     		ldr	r3, [r7, #12]
 201 0010 0722     		mov	r2, #7
 202 0012 9343     		bic	r3, r2
 203 0014 FB60     		str	r3, [r7, #12]
 286:Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl |= ((uint32) (UART_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 204              		.loc 1 286 0
 205 0016 7B68     		ldr	r3, [r7, #4]
 206 0018 0722     		mov	r2, #7
 207 001a 1340     		and	r3, r2
 208 001c FA68     		ldr	r2, [r7, #12]
 209 001e 1343     		orr	r3, r2
 210 0020 FB60     		str	r3, [r7, #12]
 287:Generated_Source\PSoC4/UART_1.c **** 
 288:Generated_Source\PSoC4/UART_1.c ****     UART_1_RX_FIFO_CTRL_REG = rxFifoCtrl;
 211              		.loc 1 288 0
 212 0022 034B     		ldr	r3, .L13
 213 0024 FA68     		ldr	r2, [r7, #12]
 214 0026 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/UART_1.c **** }
 215              		.loc 1 289 0
 216 0028 BD46     		mov	sp, r7
 217 002a 04B0     		add	sp, sp, #16
 218              		@ sp needed
 219 002c 80BD     		pop	{r7, pc}
 220              	.L14:
 221 002e C046     		.align	2
 222              	.L13:
 223 0030 04030640 		.word	1074135812
 224              		.cfi_endproc
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 10


 225              	.LFE4:
 226              		.size	UART_1_SetRxFifoLevel, .-UART_1_SetRxFifoLevel
 227              		.section	.text.UART_1_SetTxFifoLevel,"ax",%progbits
 228              		.align	2
 229              		.global	UART_1_SetTxFifoLevel
 230              		.code	16
 231              		.thumb_func
 232              		.type	UART_1_SetTxFifoLevel, %function
 233              	UART_1_SetTxFifoLevel:
 234              	.LFB5:
 290:Generated_Source\PSoC4/UART_1.c **** 
 291:Generated_Source\PSoC4/UART_1.c **** 
 292:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_SetTxFifoLevel
 294:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/UART_1.c **** *
 296:Generated_Source\PSoC4/UART_1.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/UART_1.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/UART_1.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/UART_1.c **** *
 300:Generated_Source\PSoC4/UART_1.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/UART_1.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/UART_1.c **** *
 303:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/UART_1.c **** void UART_1_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/UART_1.c **** {
 235              		.loc 1 305 0
 236              		.cfi_startproc
 237 0000 80B5     		push	{r7, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241 0002 84B0     		sub	sp, sp, #16
 242              		.cfi_def_cfa_offset 24
 243 0004 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
 245 0006 7860     		str	r0, [r7, #4]
 306:Generated_Source\PSoC4/UART_1.c ****     uint32 txFifoCtrl;
 307:Generated_Source\PSoC4/UART_1.c **** 
 308:Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl = UART_1_TX_FIFO_CTRL_REG;
 246              		.loc 1 308 0
 247 0008 094B     		ldr	r3, .L16
 248 000a 1B68     		ldr	r3, [r3]
 249 000c FB60     		str	r3, [r7, #12]
 309:Generated_Source\PSoC4/UART_1.c **** 
 310:Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl &= ((uint32) ~UART_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 250              		.loc 1 310 0
 251 000e FB68     		ldr	r3, [r7, #12]
 252 0010 0722     		mov	r2, #7
 253 0012 9343     		bic	r3, r2
 254 0014 FB60     		str	r3, [r7, #12]
 311:Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl |= ((uint32) (UART_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 255              		.loc 1 311 0
 256 0016 7B68     		ldr	r3, [r7, #4]
 257 0018 0722     		mov	r2, #7
 258 001a 1340     		and	r3, r2
 259 001c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 11


 260 001e 1343     		orr	r3, r2
 261 0020 FB60     		str	r3, [r7, #12]
 312:Generated_Source\PSoC4/UART_1.c **** 
 313:Generated_Source\PSoC4/UART_1.c ****     UART_1_TX_FIFO_CTRL_REG = txFifoCtrl;
 262              		.loc 1 313 0
 263 0022 034B     		ldr	r3, .L16
 264 0024 FA68     		ldr	r2, [r7, #12]
 265 0026 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/UART_1.c **** }
 266              		.loc 1 314 0
 267 0028 BD46     		mov	sp, r7
 268 002a 04B0     		add	sp, sp, #16
 269              		@ sp needed
 270 002c 80BD     		pop	{r7, pc}
 271              	.L17:
 272 002e C046     		.align	2
 273              	.L16:
 274 0030 04020640 		.word	1074135556
 275              		.cfi_endproc
 276              	.LFE5:
 277              		.size	UART_1_SetTxFifoLevel, .-UART_1_SetTxFifoLevel
 278              		.section	.text.UART_1_ScbEnableIntr,"ax",%progbits
 279              		.align	2
 280              		.code	16
 281              		.thumb_func
 282              		.type	UART_1_ScbEnableIntr, %function
 283              	UART_1_ScbEnableIntr:
 284              	.LFB6:
 315:Generated_Source\PSoC4/UART_1.c **** 
 316:Generated_Source\PSoC4/UART_1.c **** 
 317:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/UART_1.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/UART_1.c ****     *
 322:Generated_Source\PSoC4/UART_1.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/UART_1.c ****     *  First the function that is registered is called, then the internal interrupt
 324:Generated_Source\PSoC4/UART_1.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/UART_1.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/UART_1.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/UART_1.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/UART_1.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/UART_1.c ****     *
 330:Generated_Source\PSoC4/UART_1.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/UART_1.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/UART_1.c ****     *        handler.
 333:Generated_Source\PSoC4/UART_1.c ****     *
 334:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/UART_1.c ****     {
 337:Generated_Source\PSoC4/UART_1.c ****     #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/UART_1.c ****         UART_1_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/UART_1.c ****     #else
 340:Generated_Source\PSoC4/UART_1.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/UART_1.c ****         {
 342:Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/UART_1.c ****         }
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 12


 344:Generated_Source\PSoC4/UART_1.c ****     #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/UART_1.c ****     }
 346:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/UART_1.c **** 
 348:Generated_Source\PSoC4/UART_1.c **** 
 349:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModeEnableIntr
 351:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/UART_1.c **** *
 353:Generated_Source\PSoC4/UART_1.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/UART_1.c **** *
 355:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/UART_1.c **** {
 285              		.loc 1 357 0
 286              		.cfi_startproc
 287 0000 80B5     		push	{r7, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/UART_1.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/UART_1.c ****         if (0u != UART_1_scbEnableIntr)
 362:Generated_Source\PSoC4/UART_1.c ****         {
 363:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableInt();
 364:Generated_Source\PSoC4/UART_1.c ****         }
 365:Generated_Source\PSoC4/UART_1.c **** 
 366:Generated_Source\PSoC4/UART_1.c ****     #else
 367:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableInt();
 368:Generated_Source\PSoC4/UART_1.c **** 
 369:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 371:Generated_Source\PSoC4/UART_1.c **** }
 293              		.loc 1 371 0
 294 0004 BD46     		mov	sp, r7
 295              		@ sp needed
 296 0006 80BD     		pop	{r7, pc}
 297              		.cfi_endproc
 298              	.LFE6:
 299              		.size	UART_1_ScbEnableIntr, .-UART_1_ScbEnableIntr
 300              		.section	.text.UART_1_ScbModePostEnable,"ax",%progbits
 301              		.align	2
 302              		.code	16
 303              		.thumb_func
 304              		.type	UART_1_ScbModePostEnable, %function
 305              	UART_1_ScbModePostEnable:
 306              	.LFB7:
 372:Generated_Source\PSoC4/UART_1.c **** 
 373:Generated_Source\PSoC4/UART_1.c **** 
 374:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModePostEnable
 376:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/UART_1.c **** *
 378:Generated_Source\PSoC4/UART_1.c **** *  Calls the PostEnable function for a specific operation mode.
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 13


 379:Generated_Source\PSoC4/UART_1.c **** *
 380:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/UART_1.c **** {
 307              		.loc 1 382 0
 308              		.cfi_startproc
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 383:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/UART_1.c **** #if (!UART_1_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/UART_1.c ****     {
 387:Generated_Source\PSoC4/UART_1.c ****         UART_1_SpiPostEnable();
 388:Generated_Source\PSoC4/UART_1.c ****     }
 389:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/UART_1.c ****     {
 391:Generated_Source\PSoC4/UART_1.c ****         UART_1_UartPostEnable();
 392:Generated_Source\PSoC4/UART_1.c ****     }
 393:Generated_Source\PSoC4/UART_1.c ****     else
 394:Generated_Source\PSoC4/UART_1.c ****     {
 395:Generated_Source\PSoC4/UART_1.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/UART_1.c ****     }
 397:Generated_Source\PSoC4/UART_1.c **** #endif /* (!UART_1_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/UART_1.c **** 
 399:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiPostEnable();
 401:Generated_Source\PSoC4/UART_1.c **** 
 402:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 403:Generated_Source\PSoC4/UART_1.c ****     UART_1_UartPostEnable();
 315              		.loc 1 403 0
 316 0004 FFF7FEFF 		bl	UART_1_UartPostEnable
 404:Generated_Source\PSoC4/UART_1.c **** 
 405:Generated_Source\PSoC4/UART_1.c **** #else
 406:Generated_Source\PSoC4/UART_1.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/UART_1.c **** }
 317              		.loc 1 408 0
 318 0008 BD46     		mov	sp, r7
 319              		@ sp needed
 320 000a 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE7:
 323              		.size	UART_1_ScbModePostEnable, .-UART_1_ScbModePostEnable
 324              		.section	.text.UART_1_ScbModeStop,"ax",%progbits
 325              		.align	2
 326              		.code	16
 327              		.thumb_func
 328              		.type	UART_1_ScbModeStop, %function
 329              	UART_1_ScbModeStop:
 330              	.LFB8:
 409:Generated_Source\PSoC4/UART_1.c **** 
 410:Generated_Source\PSoC4/UART_1.c **** 
 411:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 14


 412:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModeStop
 413:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/UART_1.c **** *
 415:Generated_Source\PSoC4/UART_1.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/UART_1.c **** *
 417:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModeStop(void)
 419:Generated_Source\PSoC4/UART_1.c **** {
 331              		.loc 1 419 0
 332              		.cfi_startproc
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 420:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/UART_1.c ****     {
 423:Generated_Source\PSoC4/UART_1.c ****         UART_1_I2CStop();
 424:Generated_Source\PSoC4/UART_1.c ****     }
 425:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/UART_1.c ****     {
 427:Generated_Source\PSoC4/UART_1.c ****         UART_1_EzI2CStop();
 428:Generated_Source\PSoC4/UART_1.c ****     }
 429:Generated_Source\PSoC4/UART_1.c **** #if (!UART_1_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/UART_1.c ****     {
 432:Generated_Source\PSoC4/UART_1.c ****         UART_1_SpiStop();
 433:Generated_Source\PSoC4/UART_1.c ****     }
 434:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/UART_1.c ****     {
 436:Generated_Source\PSoC4/UART_1.c ****         UART_1_UartStop();
 437:Generated_Source\PSoC4/UART_1.c ****     }
 438:Generated_Source\PSoC4/UART_1.c **** #endif /* (!UART_1_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/UART_1.c ****     else
 440:Generated_Source\PSoC4/UART_1.c ****     {
 441:Generated_Source\PSoC4/UART_1.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/UART_1.c ****     }
 443:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/UART_1.c ****     UART_1_I2CStop();
 445:Generated_Source\PSoC4/UART_1.c **** 
 446:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/UART_1.c ****     UART_1_EzI2CStop();
 448:Generated_Source\PSoC4/UART_1.c **** 
 449:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiStop();
 451:Generated_Source\PSoC4/UART_1.c **** 
 452:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/UART_1.c ****     UART_1_UartStop();
 339              		.loc 1 453 0
 340 0004 FFF7FEFF 		bl	UART_1_UartStop
 454:Generated_Source\PSoC4/UART_1.c **** 
 455:Generated_Source\PSoC4/UART_1.c **** #else
 456:Generated_Source\PSoC4/UART_1.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/UART_1.c **** }
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 15


 341              		.loc 1 458 0
 342 0008 BD46     		mov	sp, r7
 343              		@ sp needed
 344 000a 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE8:
 347              		.size	UART_1_ScbModeStop, .-UART_1_ScbModeStop
 348              		.section	.text.UART_1_I2CSlaveNackGeneration,"ax",%progbits
 349              		.align	2
 350              		.global	UART_1_I2CSlaveNackGeneration
 351              		.code	16
 352              		.thumb_func
 353              		.type	UART_1_I2CSlaveNackGeneration, %function
 354              	UART_1_I2CSlaveNackGeneration:
 355              	.LFB9:
 459:Generated_Source\PSoC4/UART_1.c **** 
 460:Generated_Source\PSoC4/UART_1.c **** 
 461:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetPins
 464:Generated_Source\PSoC4/UART_1.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/UART_1.c ****     *
 466:Generated_Source\PSoC4/UART_1.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/UART_1.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/UART_1.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/UART_1.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/UART_1.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/UART_1.c ****     *
 472:Generated_Source\PSoC4/UART_1.c ****     *  \param mode:      Mode of SCB operation.
 473:Generated_Source\PSoC4/UART_1.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/UART_1.c ****     *             modes.
 475:Generated_Source\PSoC4/UART_1.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/UART_1.c ****     *
 477:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/UART_1.c ****     {
 480:Generated_Source\PSoC4/UART_1.c ****         uint32 pinsDm[UART_1_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/UART_1.c ****         uint32 i;
 482:Generated_Source\PSoC4/UART_1.c ****         
 483:Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 484:Generated_Source\PSoC4/UART_1.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/UART_1.c ****         
 487:Generated_Source\PSoC4/UART_1.c ****         uint32 hsiomSel[UART_1_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/UART_1.c ****         {
 489:Generated_Source\PSoC4/UART_1.c ****             UART_1_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/UART_1.c ****             UART_1_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/UART_1.c ****             0u,
 492:Generated_Source\PSoC4/UART_1.c ****             0u,
 493:Generated_Source\PSoC4/UART_1.c ****             0u,
 494:Generated_Source\PSoC4/UART_1.c ****             0u,
 495:Generated_Source\PSoC4/UART_1.c ****             0u,
 496:Generated_Source\PSoC4/UART_1.c ****         };
 497:Generated_Source\PSoC4/UART_1.c **** 
 498:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/UART_1.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/UART_1.c ****         if ((0u == subMode) || (0u == uartEnableMask))
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 16


 501:Generated_Source\PSoC4/UART_1.c ****         {
 502:Generated_Source\PSoC4/UART_1.c ****         }
 503:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/UART_1.c **** 
 505:Generated_Source\PSoC4/UART_1.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/UART_1.c ****         for (i = 0u; i < UART_1_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/UART_1.c ****         {
 508:Generated_Source\PSoC4/UART_1.c ****             pinsDm[i] = UART_1_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/UART_1.c ****         }
 510:Generated_Source\PSoC4/UART_1.c **** 
 511:Generated_Source\PSoC4/UART_1.c ****         if ((UART_1_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/UART_1.c ****             (UART_1_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/UART_1.c ****         {
 514:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_RX_SCL_MOSI_HSIOM_SEL_I2C;
 516:Generated_Source\PSoC4/UART_1.c ****             pinsDm  [UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/UART_1.c ****         #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_RX_WAKE_SCL_MOSI_HSIOM_SEL_I2C;
 519:Generated_Source\PSoC4/UART_1.c ****             pinsDm  [UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/UART_1.c ****         #else
 521:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/UART_1.c ****         
 523:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/UART_1.c ****             pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/UART_1.c ****         }
 528:Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 529:Generated_Source\PSoC4/UART_1.c ****         else if (UART_1_SCB_MODE_SPI == mode)
 530:Generated_Source\PSoC4/UART_1.c ****         {
 531:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/UART_1.c ****         #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_RX_WAKE_SCL_MOSI_HSIOM_SEL_SPI;
 535:Generated_Source\PSoC4/UART_1.c ****         #else
 536:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/UART_1.c ****         
 538:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_SDA_MISO_PIN) */
 541:Generated_Source\PSoC4/UART_1.c ****         
 542:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_SCLK_PIN)
 543:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_SCLK_PIN_INDEX] = UART_1_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_SCLK_PIN) */
 545:Generated_Source\PSoC4/UART_1.c **** 
 546:Generated_Source\PSoC4/UART_1.c ****             if (UART_1_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/UART_1.c ****             {
 548:Generated_Source\PSoC4/UART_1.c ****                 /* Slave */
 549:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 550:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/UART_1.c **** 
 553:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS0_PIN)
 554:Generated_Source\PSoC4/UART_1.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel[UART_1_SS0_PIN_INDEX] = UART_1_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/UART_1.c ****                 pinsDm  [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS0_PIN) */
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 17


 558:Generated_Source\PSoC4/UART_1.c **** 
 559:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/UART_1.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/UART_1.c ****                  pinsInBuf |= UART_1_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/UART_1.c ****             }
 564:Generated_Source\PSoC4/UART_1.c ****             else 
 565:Generated_Source\PSoC4/UART_1.c ****             {
 566:Generated_Source\PSoC4/UART_1.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/UART_1.c **** 
 571:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS0_PIN)
 572:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS0_PIN_INDEX] = UART_1_SS0_HSIOM_SEL_SPI;
 573:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS0_PIN) */
 576:Generated_Source\PSoC4/UART_1.c **** 
 577:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS1_PIN)
 578:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS1_PIN_INDEX] = UART_1_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS1_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS1_PIN) */
 582:Generated_Source\PSoC4/UART_1.c **** 
 583:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS2_PIN)
 584:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS2_PIN_INDEX] = UART_1_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS2_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 586:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS2_PIN_MASK;
 587:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS2_PIN) */
 588:Generated_Source\PSoC4/UART_1.c **** 
 589:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS3_PIN)
 590:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS3_PIN_INDEX] = UART_1_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS3_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS3_PIN) */
 594:Generated_Source\PSoC4/UART_1.c **** 
 595:Generated_Source\PSoC4/UART_1.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_RX_SCL_MOSI_PIN_MASK;
 598:Generated_Source\PSoC4/UART_1.c ****             #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/UART_1.c ****             #else
 601:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/UART_1.c **** 
 603:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SCLK_PIN)
 604:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SCLK_PIN) */
 606:Generated_Source\PSoC4/UART_1.c ****             }
 607:Generated_Source\PSoC4/UART_1.c ****         }
 608:Generated_Source\PSoC4/UART_1.c ****         else /* UART */
 609:Generated_Source\PSoC4/UART_1.c ****         {
 610:Generated_Source\PSoC4/UART_1.c ****             if (UART_1_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/UART_1.c ****             {
 612:Generated_Source\PSoC4/UART_1.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_UART;
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 18


 615:Generated_Source\PSoC4/UART_1.c ****                 pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/UART_1.c ****             }
 618:Generated_Source\PSoC4/UART_1.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/UART_1.c ****             {
 620:Generated_Source\PSoC4/UART_1.c ****                 if (0u != (UART_1_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/UART_1.c ****                 {
 622:Generated_Source\PSoC4/UART_1.c ****                 #if (UART_1_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_RX_SCL_MOSI_HSIOM_SEL_UART;
 624:Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/UART_1.c ****                 #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_RX_WAKE_SCL_MOSI_HSIOM_SEL
 627:Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/UART_1.c ****                 #else
 629:Generated_Source\PSoC4/UART_1.c ****                 #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 630:Generated_Source\PSoC4/UART_1.c ****                 }
 631:Generated_Source\PSoC4/UART_1.c **** 
 632:Generated_Source\PSoC4/UART_1.c ****                 if (0u != (UART_1_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/UART_1.c ****                 {
 634:Generated_Source\PSoC4/UART_1.c ****                 #if (UART_1_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_UART;
 636:Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/UART_1.c ****                     
 638:Generated_Source\PSoC4/UART_1.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/UART_1.c ****                     pinsInBuf |= UART_1_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/UART_1.c ****                 #endif /* (UART_1_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/UART_1.c ****                 }
 642:Generated_Source\PSoC4/UART_1.c **** 
 643:Generated_Source\PSoC4/UART_1.c ****             #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 644:Generated_Source\PSoC4/UART_1.c ****                 if (UART_1_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/UART_1.c ****                 {
 646:Generated_Source\PSoC4/UART_1.c ****                     if (0u != (UART_1_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/UART_1.c ****                     {
 648:Generated_Source\PSoC4/UART_1.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/UART_1.c ****                     #if (UART_1_SCLK_PIN)
 650:Generated_Source\PSoC4/UART_1.c ****                         hsiomSel[UART_1_SCLK_PIN_INDEX] = UART_1_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/UART_1.c ****                         pinsDm  [UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/UART_1.c ****                     #endif /* (UART_1_SCLK_PIN) */
 653:Generated_Source\PSoC4/UART_1.c ****                     }
 654:Generated_Source\PSoC4/UART_1.c **** 
 655:Generated_Source\PSoC4/UART_1.c ****                     if (0u != (UART_1_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/UART_1.c ****                     {
 657:Generated_Source\PSoC4/UART_1.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/UART_1.c ****                     #if (UART_1_SS0_PIN)
 659:Generated_Source\PSoC4/UART_1.c ****                         hsiomSel[UART_1_SS0_PIN_INDEX] = UART_1_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/UART_1.c ****                         pinsDm  [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/UART_1.c ****                         
 662:Generated_Source\PSoC4/UART_1.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/UART_1.c ****                         pinsInBuf |= UART_1_SS0_PIN_MASK;
 664:Generated_Source\PSoC4/UART_1.c ****                     #endif /* (UART_1_SS0_PIN) */
 665:Generated_Source\PSoC4/UART_1.c ****                     }
 666:Generated_Source\PSoC4/UART_1.c ****                 }
 667:Generated_Source\PSoC4/UART_1.c ****             #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/UART_1.c ****             }
 669:Generated_Source\PSoC4/UART_1.c ****         }
 670:Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 19


 672:Generated_Source\PSoC4/UART_1.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/UART_1.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/UART_1.c **** 
 675:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/UART_1.c ****                                         hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/UART_1.c **** 
 681:Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX]);
 682:Generated_Source\PSoC4/UART_1.c **** 
 683:Generated_Source\PSoC4/UART_1.c ****         #if (!UART_1_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/UART_1.c ****             UART_1_SET_INP_DIS(UART_1_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/UART_1.c ****                                          UART_1_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/UART_1.c ****                                          (0u != (pinsInBuf & UART_1_RX_SCL_MOSI_PIN_MASK)));
 687:Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/UART_1.c ****     
 689:Generated_Source\PSoC4/UART_1.c ****     #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/UART_1.c **** 
 695:Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/UART_1.c ****                                                                pinsDm[UART_1_RX_WAKE_SCL_MOSI_PIN_I
 697:Generated_Source\PSoC4/UART_1.c **** 
 698:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 700:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_RX_WAKE_SCL_MOSI_PIN_MASK)));
 701:Generated_Source\PSoC4/UART_1.c **** 
 702:Generated_Source\PSoC4/UART_1.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INCFG_TYPE(UART_1_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/UART_1.c ****                                         UART_1_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/UART_1.c ****                                         UART_1_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/UART_1.c ****                                         UART_1_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/UART_1.c ****     #else
 708:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/UART_1.c **** 
 710:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG,
 712:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/UART_1.c ****                                         hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/UART_1.c **** 
 716:Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX]);
 717:Generated_Source\PSoC4/UART_1.c **** 
 718:Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_tx_i2c_sda_spi_miso_MASK,
 721:Generated_Source\PSoC4/UART_1.c ****                                     (0u != (pinsInBuf & UART_1_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/UART_1.c **** 
 725:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SCLK_PIN)
 726:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SCLK_HSIOM_POS,
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 20


 729:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/UART_1.c **** 
 731:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_sclk_SetDriveMode((uint8) pinsDm[UART_1_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/UART_1.c **** 
 733:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_sclk_MASK,
 735:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SCLK_PIN) */
 737:Generated_Source\PSoC4/UART_1.c **** 
 738:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS0_PIN)
 739:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/UART_1.c **** 
 744:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss0_SetDriveMode((uint8) pinsDm[UART_1_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/UART_1.c **** 
 746:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss0_MASK,
 748:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS0_PIN) */
 750:Generated_Source\PSoC4/UART_1.c **** 
 751:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS1_PIN)
 752:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/UART_1.c **** 
 757:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss1_SetDriveMode((uint8) pinsDm[UART_1_SS1_PIN_INDEX]);
 758:Generated_Source\PSoC4/UART_1.c **** 
 759:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss1_MASK,
 761:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS1_PIN) */
 763:Generated_Source\PSoC4/UART_1.c **** 
 764:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS2_PIN)
 765:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS2_PIN_INDEX]);
 769:Generated_Source\PSoC4/UART_1.c **** 
 770:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss2_SetDriveMode((uint8) pinsDm[UART_1_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/UART_1.c **** 
 772:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss2_MASK,
 774:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS2_PIN) */
 776:Generated_Source\PSoC4/UART_1.c **** 
 777:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS3_PIN)
 778:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/UART_1.c **** 
 783:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss3_SetDriveMode((uint8) pinsDm[UART_1_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/UART_1.c **** 
 785:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss3_INP_DIS,
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 21


 786:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss3_MASK,
 787:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS3_PIN) */
 789:Generated_Source\PSoC4/UART_1.c ****     }
 790:Generated_Source\PSoC4/UART_1.c **** 
 791:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/UART_1.c **** 
 793:Generated_Source\PSoC4/UART_1.c **** 
 794:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/UART_1.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/UART_1.c ****     *
 799:Generated_Source\PSoC4/UART_1.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/UART_1.c ****     *
 801:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/UART_1.c ****     void UART_1_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/UART_1.c ****     {
 356              		.loc 1 803 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 804:Generated_Source\PSoC4/UART_1.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/UART_1.c ****         if ((0u != (UART_1_CTRL_REG & UART_1_CTRL_EC_AM_MODE)) &&
 364              		.loc 1 805 0
 365 0004 0E4B     		ldr	r3, .L23
 366 0006 1A68     		ldr	r2, [r3]
 367 0008 8023     		mov	r3, #128
 368 000a 5B00     		lsl	r3, r3, #1
 369 000c 1340     		and	r3, r2
 370 000e 12D0     		beq	.L22
 806:Generated_Source\PSoC4/UART_1.c ****             (0u == (UART_1_I2C_CTRL_REG & UART_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 371              		.loc 1 806 0 discriminator 1
 372 0010 0C4B     		ldr	r3, .L23+4
 373 0012 1A68     		ldr	r2, [r3]
 374 0014 8023     		mov	r3, #128
 375 0016 DB01     		lsl	r3, r3, #7
 376 0018 1340     		and	r3, r2
 805:Generated_Source\PSoC4/UART_1.c ****             (0u == (UART_1_I2C_CTRL_REG & UART_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 377              		.loc 1 805 0 discriminator 1
 378 001a 0CD1     		bne	.L22
 807:Generated_Source\PSoC4/UART_1.c ****         {
 808:Generated_Source\PSoC4/UART_1.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/UART_1.c ****             UART_1_CTRL_REG &= ~UART_1_CTRL_EC_AM_MODE;
 379              		.loc 1 809 0
 380 001c 084B     		ldr	r3, .L23
 381 001e 084A     		ldr	r2, .L23
 382 0020 1268     		ldr	r2, [r2]
 383 0022 0949     		ldr	r1, .L23+8
 384 0024 0A40     		and	r2, r1
 385 0026 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART_1.c ****             UART_1_CTRL_REG |=  UART_1_CTRL_EC_AM_MODE;
 386              		.loc 1 810 0
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 22


 387 0028 054B     		ldr	r3, .L23
 388 002a 054A     		ldr	r2, .L23
 389 002c 1268     		ldr	r2, [r2]
 390 002e 8021     		mov	r1, #128
 391 0030 4900     		lsl	r1, r1, #1
 392 0032 0A43     		orr	r2, r1
 393 0034 1A60     		str	r2, [r3]
 394              	.L22:
 811:Generated_Source\PSoC4/UART_1.c ****         }
 812:Generated_Source\PSoC4/UART_1.c **** 
 813:Generated_Source\PSoC4/UART_1.c ****         UART_1_I2C_SLAVE_CMD_REG = UART_1_I2C_SLAVE_CMD_S_NACK;
 395              		.loc 1 813 0
 396 0036 054B     		ldr	r3, .L23+12
 397 0038 0222     		mov	r2, #2
 398 003a 1A60     		str	r2, [r3]
 814:Generated_Source\PSoC4/UART_1.c ****     }
 399              		.loc 1 814 0
 400 003c BD46     		mov	sp, r7
 401              		@ sp needed
 402 003e 80BD     		pop	{r7, pc}
 403              	.L24:
 404              		.align	2
 405              	.L23:
 406 0040 00000640 		.word	1074135040
 407 0044 60000640 		.word	1074135136
 408 0048 FFFEFFFF 		.word	-257
 409 004c 6C000640 		.word	1074135148
 410              		.cfi_endproc
 411              	.LFE9:
 412              		.size	UART_1_I2CSlaveNackGeneration, .-UART_1_I2CSlaveNackGeneration
 413              		.text
 414              	.Letext0:
 415              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 416              		.section	.debug_info,"",%progbits
 417              	.Ldebug_info0:
 418 0000 D1010000 		.4byte	0x1d1
 419 0004 0400     		.2byte	0x4
 420 0006 00000000 		.4byte	.Ldebug_abbrev0
 421 000a 04       		.byte	0x4
 422 000b 01       		.uleb128 0x1
 423 000c EF000000 		.4byte	.LASF32
 424 0010 01       		.byte	0x1
 425 0011 F3010000 		.4byte	.LASF33
 426 0015 84010000 		.4byte	.LASF34
 427 0019 00000000 		.4byte	.Ldebug_ranges0+0
 428 001d 00000000 		.4byte	0
 429 0021 00000000 		.4byte	.Ldebug_line0
 430 0025 02       		.uleb128 0x2
 431 0026 01       		.byte	0x1
 432 0027 06       		.byte	0x6
 433 0028 9B020000 		.4byte	.LASF0
 434 002c 02       		.uleb128 0x2
 435 002d 01       		.byte	0x1
 436 002e 08       		.byte	0x8
 437 002f A1000000 		.4byte	.LASF1
 438 0033 02       		.uleb128 0x2
 439 0034 02       		.byte	0x2
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 23


 440 0035 05       		.byte	0x5
 441 0036 47020000 		.4byte	.LASF2
 442 003a 02       		.uleb128 0x2
 443 003b 02       		.byte	0x2
 444 003c 07       		.byte	0x7
 445 003d 52000000 		.4byte	.LASF3
 446 0041 02       		.uleb128 0x2
 447 0042 04       		.byte	0x4
 448 0043 05       		.byte	0x5
 449 0044 72020000 		.4byte	.LASF4
 450 0048 02       		.uleb128 0x2
 451 0049 04       		.byte	0x4
 452 004a 07       		.byte	0x7
 453 004b BB000000 		.4byte	.LASF5
 454 004f 02       		.uleb128 0x2
 455 0050 08       		.byte	0x8
 456 0051 05       		.byte	0x5
 457 0052 33020000 		.4byte	.LASF6
 458 0056 02       		.uleb128 0x2
 459 0057 08       		.byte	0x8
 460 0058 07       		.byte	0x7
 461 0059 13020000 		.4byte	.LASF7
 462 005d 03       		.uleb128 0x3
 463 005e 04       		.byte	0x4
 464 005f 05       		.byte	0x5
 465 0060 696E7400 		.ascii	"int\000"
 466 0064 02       		.uleb128 0x2
 467 0065 04       		.byte	0x4
 468 0066 07       		.byte	0x7
 469 0067 E6010000 		.4byte	.LASF8
 470 006b 04       		.uleb128 0x4
 471 006c CD000000 		.4byte	.LASF9
 472 0070 02       		.byte	0x2
 473 0071 B901     		.2byte	0x1b9
 474 0073 2C000000 		.4byte	0x2c
 475 0077 04       		.uleb128 0x4
 476 0078 7D010000 		.4byte	.LASF10
 477 007c 02       		.byte	0x2
 478 007d BA01     		.2byte	0x1ba
 479 007f 3A000000 		.4byte	0x3a
 480 0083 04       		.uleb128 0x4
 481 0084 DF010000 		.4byte	.LASF11
 482 0088 02       		.byte	0x2
 483 0089 BB01     		.2byte	0x1bb
 484 008b 48000000 		.4byte	0x48
 485 008f 02       		.uleb128 0x2
 486 0090 04       		.byte	0x4
 487 0091 04       		.byte	0x4
 488 0092 88000000 		.4byte	.LASF12
 489 0096 02       		.uleb128 0x2
 490 0097 08       		.byte	0x8
 491 0098 04       		.byte	0x4
 492 0099 E8000000 		.4byte	.LASF13
 493 009d 02       		.uleb128 0x2
 494 009e 01       		.byte	0x1
 495 009f 08       		.byte	0x8
 496 00a0 65000000 		.4byte	.LASF14
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 24


 497 00a4 04       		.uleb128 0x4
 498 00a5 41020000 		.4byte	.LASF15
 499 00a9 02       		.byte	0x2
 500 00aa 6502     		.2byte	0x265
 501 00ac B0000000 		.4byte	0xb0
 502 00b0 05       		.uleb128 0x5
 503 00b1 83000000 		.4byte	0x83
 504 00b5 02       		.uleb128 0x2
 505 00b6 04       		.byte	0x4
 506 00b7 07       		.byte	0x7
 507 00b8 2A020000 		.4byte	.LASF16
 508 00bc 06       		.uleb128 0x6
 509 00bd 00000000 		.4byte	.LASF17
 510 00c1 01       		.byte	0x1
 511 00c2 7B       		.byte	0x7b
 512 00c3 00000000 		.4byte	.LFB0
 513 00c7 0C000000 		.4byte	.LFE0-.LFB0
 514 00cb 01       		.uleb128 0x1
 515 00cc 9C       		.byte	0x9c
 516 00cd 06       		.uleb128 0x6
 517 00ce 8D020000 		.4byte	.LASF18
 518 00d2 01       		.byte	0x1
 519 00d3 AB       		.byte	0xab
 520 00d4 00000000 		.4byte	.LFB1
 521 00d8 24000000 		.4byte	.LFE1-.LFB1
 522 00dc 01       		.uleb128 0x1
 523 00dd 9C       		.byte	0x9c
 524 00de 06       		.uleb128 0x6
 525 00df 0C000000 		.4byte	.LASF19
 526 00e3 01       		.byte	0x1
 527 00e4 D2       		.byte	0xd2
 528 00e5 00000000 		.4byte	.LFB2
 529 00e9 24000000 		.4byte	.LFE2-.LFB2
 530 00ed 01       		.uleb128 0x1
 531 00ee 9C       		.byte	0x9c
 532 00ef 06       		.uleb128 0x6
 533 00f0 AF000000 		.4byte	.LASF20
 534 00f4 01       		.byte	0x1
 535 00f5 EF       		.byte	0xef
 536 00f6 00000000 		.4byte	.LFB3
 537 00fa 28000000 		.4byte	.LFE3-.LFB3
 538 00fe 01       		.uleb128 0x1
 539 00ff 9C       		.byte	0x9c
 540 0100 07       		.uleb128 0x7
 541 0101 A7020000 		.4byte	.LASF21
 542 0105 01       		.byte	0x1
 543 0106 1701     		.2byte	0x117
 544 0108 00000000 		.4byte	.LFB4
 545 010c 34000000 		.4byte	.LFE4-.LFB4
 546 0110 01       		.uleb128 0x1
 547 0111 9C       		.byte	0x9c
 548 0112 35010000 		.4byte	0x135
 549 0116 08       		.uleb128 0x8
 550 0117 33000000 		.4byte	.LASF23
 551 011b 01       		.byte	0x1
 552 011c 1701     		.2byte	0x117
 553 011e 83000000 		.4byte	0x83
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 25


 554 0122 02       		.uleb128 0x2
 555 0123 91       		.byte	0x91
 556 0124 6C       		.sleb128 -20
 557 0125 09       		.uleb128 0x9
 558 0126 67020000 		.4byte	.LASF24
 559 012a 01       		.byte	0x1
 560 012b 1901     		.2byte	0x119
 561 012d 83000000 		.4byte	0x83
 562 0131 02       		.uleb128 0x2
 563 0132 91       		.byte	0x91
 564 0133 74       		.sleb128 -12
 565 0134 00       		.byte	0
 566 0135 07       		.uleb128 0x7
 567 0136 51020000 		.4byte	.LASF22
 568 013a 01       		.byte	0x1
 569 013b 3001     		.2byte	0x130
 570 013d 00000000 		.4byte	.LFB5
 571 0141 34000000 		.4byte	.LFE5-.LFB5
 572 0145 01       		.uleb128 0x1
 573 0146 9C       		.byte	0x9c
 574 0147 6A010000 		.4byte	0x16a
 575 014b 08       		.uleb128 0x8
 576 014c 33000000 		.4byte	.LASF23
 577 0150 01       		.byte	0x1
 578 0151 3001     		.2byte	0x130
 579 0153 83000000 		.4byte	0x83
 580 0157 02       		.uleb128 0x2
 581 0158 91       		.byte	0x91
 582 0159 6C       		.sleb128 -20
 583 015a 09       		.uleb128 0x9
 584 015b 19000000 		.4byte	.LASF25
 585 015f 01       		.byte	0x1
 586 0160 3201     		.2byte	0x132
 587 0162 83000000 		.4byte	0x83
 588 0166 02       		.uleb128 0x2
 589 0167 91       		.byte	0x91
 590 0168 74       		.sleb128 -12
 591 0169 00       		.byte	0
 592 016a 0A       		.uleb128 0xa
 593 016b D3000000 		.4byte	.LASF26
 594 016f 01       		.byte	0x1
 595 0170 6401     		.2byte	0x164
 596 0172 00000000 		.4byte	.LFB6
 597 0176 08000000 		.4byte	.LFE6-.LFB6
 598 017a 01       		.uleb128 0x1
 599 017b 9C       		.byte	0x9c
 600 017c 0B       		.uleb128 0xb
 601 017d 39000000 		.4byte	.LASF27
 602 0181 01       		.byte	0x1
 603 0182 7D01     		.2byte	0x17d
 604 0184 00000000 		.4byte	.LFB7
 605 0188 0C000000 		.4byte	.LFE7-.LFB7
 606 018c 01       		.uleb128 0x1
 607 018d 9C       		.byte	0x9c
 608 018e 0B       		.uleb128 0xb
 609 018f 8E000000 		.4byte	.LASF28
 610 0193 01       		.byte	0x1
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 26


 611 0194 A201     		.2byte	0x1a2
 612 0196 00000000 		.4byte	.LFB8
 613 019a 0C000000 		.4byte	.LFE8-.LFB8
 614 019e 01       		.uleb128 0x1
 615 019f 9C       		.byte	0x9c
 616 01a0 0C       		.uleb128 0xc
 617 01a1 6A000000 		.4byte	.LASF29
 618 01a5 01       		.byte	0x1
 619 01a6 2203     		.2byte	0x322
 620 01a8 00000000 		.4byte	.LFB9
 621 01ac 50000000 		.4byte	.LFE9-.LFB9
 622 01b0 01       		.uleb128 0x1
 623 01b1 9C       		.byte	0x9c
 624 01b2 0D       		.uleb128 0xd
 625 01b3 24000000 		.4byte	.LASF30
 626 01b7 01       		.byte	0x1
 627 01b8 51       		.byte	0x51
 628 01b9 6B000000 		.4byte	0x6b
 629 01bd 05       		.uleb128 0x5
 630 01be 03       		.byte	0x3
 631 01bf 00000000 		.4byte	UART_1_initVar
 632 01c3 0D       		.uleb128 0xd
 633 01c4 7B020000 		.4byte	.LASF31
 634 01c8 01       		.byte	0x1
 635 01c9 5A       		.byte	0x5a
 636 01ca 77000000 		.4byte	0x77
 637 01ce 05       		.uleb128 0x5
 638 01cf 03       		.byte	0x3
 639 01d0 00000000 		.4byte	UART_1_IntrTxMask
 640 01d4 00       		.byte	0
 641              		.section	.debug_abbrev,"",%progbits
 642              	.Ldebug_abbrev0:
 643 0000 01       		.uleb128 0x1
 644 0001 11       		.uleb128 0x11
 645 0002 01       		.byte	0x1
 646 0003 25       		.uleb128 0x25
 647 0004 0E       		.uleb128 0xe
 648 0005 13       		.uleb128 0x13
 649 0006 0B       		.uleb128 0xb
 650 0007 03       		.uleb128 0x3
 651 0008 0E       		.uleb128 0xe
 652 0009 1B       		.uleb128 0x1b
 653 000a 0E       		.uleb128 0xe
 654 000b 55       		.uleb128 0x55
 655 000c 17       		.uleb128 0x17
 656 000d 11       		.uleb128 0x11
 657 000e 01       		.uleb128 0x1
 658 000f 10       		.uleb128 0x10
 659 0010 17       		.uleb128 0x17
 660 0011 00       		.byte	0
 661 0012 00       		.byte	0
 662 0013 02       		.uleb128 0x2
 663 0014 24       		.uleb128 0x24
 664 0015 00       		.byte	0
 665 0016 0B       		.uleb128 0xb
 666 0017 0B       		.uleb128 0xb
 667 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 27


 668 0019 0B       		.uleb128 0xb
 669 001a 03       		.uleb128 0x3
 670 001b 0E       		.uleb128 0xe
 671 001c 00       		.byte	0
 672 001d 00       		.byte	0
 673 001e 03       		.uleb128 0x3
 674 001f 24       		.uleb128 0x24
 675 0020 00       		.byte	0
 676 0021 0B       		.uleb128 0xb
 677 0022 0B       		.uleb128 0xb
 678 0023 3E       		.uleb128 0x3e
 679 0024 0B       		.uleb128 0xb
 680 0025 03       		.uleb128 0x3
 681 0026 08       		.uleb128 0x8
 682 0027 00       		.byte	0
 683 0028 00       		.byte	0
 684 0029 04       		.uleb128 0x4
 685 002a 16       		.uleb128 0x16
 686 002b 00       		.byte	0
 687 002c 03       		.uleb128 0x3
 688 002d 0E       		.uleb128 0xe
 689 002e 3A       		.uleb128 0x3a
 690 002f 0B       		.uleb128 0xb
 691 0030 3B       		.uleb128 0x3b
 692 0031 05       		.uleb128 0x5
 693 0032 49       		.uleb128 0x49
 694 0033 13       		.uleb128 0x13
 695 0034 00       		.byte	0
 696 0035 00       		.byte	0
 697 0036 05       		.uleb128 0x5
 698 0037 35       		.uleb128 0x35
 699 0038 00       		.byte	0
 700 0039 49       		.uleb128 0x49
 701 003a 13       		.uleb128 0x13
 702 003b 00       		.byte	0
 703 003c 00       		.byte	0
 704 003d 06       		.uleb128 0x6
 705 003e 2E       		.uleb128 0x2e
 706 003f 00       		.byte	0
 707 0040 3F       		.uleb128 0x3f
 708 0041 19       		.uleb128 0x19
 709 0042 03       		.uleb128 0x3
 710 0043 0E       		.uleb128 0xe
 711 0044 3A       		.uleb128 0x3a
 712 0045 0B       		.uleb128 0xb
 713 0046 3B       		.uleb128 0x3b
 714 0047 0B       		.uleb128 0xb
 715 0048 27       		.uleb128 0x27
 716 0049 19       		.uleb128 0x19
 717 004a 11       		.uleb128 0x11
 718 004b 01       		.uleb128 0x1
 719 004c 12       		.uleb128 0x12
 720 004d 06       		.uleb128 0x6
 721 004e 40       		.uleb128 0x40
 722 004f 18       		.uleb128 0x18
 723 0050 9642     		.uleb128 0x2116
 724 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 28


 725 0053 00       		.byte	0
 726 0054 00       		.byte	0
 727 0055 07       		.uleb128 0x7
 728 0056 2E       		.uleb128 0x2e
 729 0057 01       		.byte	0x1
 730 0058 3F       		.uleb128 0x3f
 731 0059 19       		.uleb128 0x19
 732 005a 03       		.uleb128 0x3
 733 005b 0E       		.uleb128 0xe
 734 005c 3A       		.uleb128 0x3a
 735 005d 0B       		.uleb128 0xb
 736 005e 3B       		.uleb128 0x3b
 737 005f 05       		.uleb128 0x5
 738 0060 27       		.uleb128 0x27
 739 0061 19       		.uleb128 0x19
 740 0062 11       		.uleb128 0x11
 741 0063 01       		.uleb128 0x1
 742 0064 12       		.uleb128 0x12
 743 0065 06       		.uleb128 0x6
 744 0066 40       		.uleb128 0x40
 745 0067 18       		.uleb128 0x18
 746 0068 9742     		.uleb128 0x2117
 747 006a 19       		.uleb128 0x19
 748 006b 01       		.uleb128 0x1
 749 006c 13       		.uleb128 0x13
 750 006d 00       		.byte	0
 751 006e 00       		.byte	0
 752 006f 08       		.uleb128 0x8
 753 0070 05       		.uleb128 0x5
 754 0071 00       		.byte	0
 755 0072 03       		.uleb128 0x3
 756 0073 0E       		.uleb128 0xe
 757 0074 3A       		.uleb128 0x3a
 758 0075 0B       		.uleb128 0xb
 759 0076 3B       		.uleb128 0x3b
 760 0077 05       		.uleb128 0x5
 761 0078 49       		.uleb128 0x49
 762 0079 13       		.uleb128 0x13
 763 007a 02       		.uleb128 0x2
 764 007b 18       		.uleb128 0x18
 765 007c 00       		.byte	0
 766 007d 00       		.byte	0
 767 007e 09       		.uleb128 0x9
 768 007f 34       		.uleb128 0x34
 769 0080 00       		.byte	0
 770 0081 03       		.uleb128 0x3
 771 0082 0E       		.uleb128 0xe
 772 0083 3A       		.uleb128 0x3a
 773 0084 0B       		.uleb128 0xb
 774 0085 3B       		.uleb128 0x3b
 775 0086 05       		.uleb128 0x5
 776 0087 49       		.uleb128 0x49
 777 0088 13       		.uleb128 0x13
 778 0089 02       		.uleb128 0x2
 779 008a 18       		.uleb128 0x18
 780 008b 00       		.byte	0
 781 008c 00       		.byte	0
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 29


 782 008d 0A       		.uleb128 0xa
 783 008e 2E       		.uleb128 0x2e
 784 008f 00       		.byte	0
 785 0090 03       		.uleb128 0x3
 786 0091 0E       		.uleb128 0xe
 787 0092 3A       		.uleb128 0x3a
 788 0093 0B       		.uleb128 0xb
 789 0094 3B       		.uleb128 0x3b
 790 0095 05       		.uleb128 0x5
 791 0096 27       		.uleb128 0x27
 792 0097 19       		.uleb128 0x19
 793 0098 11       		.uleb128 0x11
 794 0099 01       		.uleb128 0x1
 795 009a 12       		.uleb128 0x12
 796 009b 06       		.uleb128 0x6
 797 009c 40       		.uleb128 0x40
 798 009d 18       		.uleb128 0x18
 799 009e 9742     		.uleb128 0x2117
 800 00a0 19       		.uleb128 0x19
 801 00a1 00       		.byte	0
 802 00a2 00       		.byte	0
 803 00a3 0B       		.uleb128 0xb
 804 00a4 2E       		.uleb128 0x2e
 805 00a5 00       		.byte	0
 806 00a6 03       		.uleb128 0x3
 807 00a7 0E       		.uleb128 0xe
 808 00a8 3A       		.uleb128 0x3a
 809 00a9 0B       		.uleb128 0xb
 810 00aa 3B       		.uleb128 0x3b
 811 00ab 05       		.uleb128 0x5
 812 00ac 27       		.uleb128 0x27
 813 00ad 19       		.uleb128 0x19
 814 00ae 11       		.uleb128 0x11
 815 00af 01       		.uleb128 0x1
 816 00b0 12       		.uleb128 0x12
 817 00b1 06       		.uleb128 0x6
 818 00b2 40       		.uleb128 0x40
 819 00b3 18       		.uleb128 0x18
 820 00b4 9642     		.uleb128 0x2116
 821 00b6 19       		.uleb128 0x19
 822 00b7 00       		.byte	0
 823 00b8 00       		.byte	0
 824 00b9 0C       		.uleb128 0xc
 825 00ba 2E       		.uleb128 0x2e
 826 00bb 00       		.byte	0
 827 00bc 3F       		.uleb128 0x3f
 828 00bd 19       		.uleb128 0x19
 829 00be 03       		.uleb128 0x3
 830 00bf 0E       		.uleb128 0xe
 831 00c0 3A       		.uleb128 0x3a
 832 00c1 0B       		.uleb128 0xb
 833 00c2 3B       		.uleb128 0x3b
 834 00c3 05       		.uleb128 0x5
 835 00c4 27       		.uleb128 0x27
 836 00c5 19       		.uleb128 0x19
 837 00c6 11       		.uleb128 0x11
 838 00c7 01       		.uleb128 0x1
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 30


 839 00c8 12       		.uleb128 0x12
 840 00c9 06       		.uleb128 0x6
 841 00ca 40       		.uleb128 0x40
 842 00cb 18       		.uleb128 0x18
 843 00cc 9742     		.uleb128 0x2117
 844 00ce 19       		.uleb128 0x19
 845 00cf 00       		.byte	0
 846 00d0 00       		.byte	0
 847 00d1 0D       		.uleb128 0xd
 848 00d2 34       		.uleb128 0x34
 849 00d3 00       		.byte	0
 850 00d4 03       		.uleb128 0x3
 851 00d5 0E       		.uleb128 0xe
 852 00d6 3A       		.uleb128 0x3a
 853 00d7 0B       		.uleb128 0xb
 854 00d8 3B       		.uleb128 0x3b
 855 00d9 0B       		.uleb128 0xb
 856 00da 49       		.uleb128 0x49
 857 00db 13       		.uleb128 0x13
 858 00dc 3F       		.uleb128 0x3f
 859 00dd 19       		.uleb128 0x19
 860 00de 02       		.uleb128 0x2
 861 00df 18       		.uleb128 0x18
 862 00e0 00       		.byte	0
 863 00e1 00       		.byte	0
 864 00e2 00       		.byte	0
 865              		.section	.debug_aranges,"",%progbits
 866 0000 64000000 		.4byte	0x64
 867 0004 0200     		.2byte	0x2
 868 0006 00000000 		.4byte	.Ldebug_info0
 869 000a 04       		.byte	0x4
 870 000b 00       		.byte	0
 871 000c 0000     		.2byte	0
 872 000e 0000     		.2byte	0
 873 0010 00000000 		.4byte	.LFB0
 874 0014 0C000000 		.4byte	.LFE0-.LFB0
 875 0018 00000000 		.4byte	.LFB1
 876 001c 24000000 		.4byte	.LFE1-.LFB1
 877 0020 00000000 		.4byte	.LFB2
 878 0024 24000000 		.4byte	.LFE2-.LFB2
 879 0028 00000000 		.4byte	.LFB3
 880 002c 28000000 		.4byte	.LFE3-.LFB3
 881 0030 00000000 		.4byte	.LFB4
 882 0034 34000000 		.4byte	.LFE4-.LFB4
 883 0038 00000000 		.4byte	.LFB5
 884 003c 34000000 		.4byte	.LFE5-.LFB5
 885 0040 00000000 		.4byte	.LFB6
 886 0044 08000000 		.4byte	.LFE6-.LFB6
 887 0048 00000000 		.4byte	.LFB7
 888 004c 0C000000 		.4byte	.LFE7-.LFB7
 889 0050 00000000 		.4byte	.LFB8
 890 0054 0C000000 		.4byte	.LFE8-.LFB8
 891 0058 00000000 		.4byte	.LFB9
 892 005c 50000000 		.4byte	.LFE9-.LFB9
 893 0060 00000000 		.4byte	0
 894 0064 00000000 		.4byte	0
 895              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 31


 896              	.Ldebug_ranges0:
 897 0000 00000000 		.4byte	.LFB0
 898 0004 0C000000 		.4byte	.LFE0
 899 0008 00000000 		.4byte	.LFB1
 900 000c 24000000 		.4byte	.LFE1
 901 0010 00000000 		.4byte	.LFB2
 902 0014 24000000 		.4byte	.LFE2
 903 0018 00000000 		.4byte	.LFB3
 904 001c 28000000 		.4byte	.LFE3
 905 0020 00000000 		.4byte	.LFB4
 906 0024 34000000 		.4byte	.LFE4
 907 0028 00000000 		.4byte	.LFB5
 908 002c 34000000 		.4byte	.LFE5
 909 0030 00000000 		.4byte	.LFB6
 910 0034 08000000 		.4byte	.LFE6
 911 0038 00000000 		.4byte	.LFB7
 912 003c 0C000000 		.4byte	.LFE7
 913 0040 00000000 		.4byte	.LFB8
 914 0044 0C000000 		.4byte	.LFE8
 915 0048 00000000 		.4byte	.LFB9
 916 004c 50000000 		.4byte	.LFE9
 917 0050 00000000 		.4byte	0
 918 0054 00000000 		.4byte	0
 919              		.section	.debug_line,"",%progbits
 920              	.Ldebug_line0:
 921 0000 22010000 		.section	.debug_str,"MS",%progbits,1
 921      02004300 
 921      00000201 
 921      FB0E0D00 
 921      01010101 
 922              	.LASF17:
 923 0000 55415254 		.ascii	"UART_1_Init\000"
 923      5F315F49 
 923      6E697400 
 924              	.LASF19:
 925 000c 55415254 		.ascii	"UART_1_Start\000"
 925      5F315F53 
 925      74617274 
 925      00
 926              	.LASF25:
 927 0019 74784669 		.ascii	"txFifoCtrl\000"
 927      666F4374 
 927      726C00
 928              	.LASF30:
 929 0024 55415254 		.ascii	"UART_1_initVar\000"
 929      5F315F69 
 929      6E697456 
 929      617200
 930              	.LASF23:
 931 0033 6C657665 		.ascii	"level\000"
 931      6C00
 932              	.LASF27:
 933 0039 55415254 		.ascii	"UART_1_ScbModePostEnable\000"
 933      5F315F53 
 933      63624D6F 
 933      6465506F 
 933      7374456E 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 32


 934              	.LASF3:
 935 0052 73686F72 		.ascii	"short unsigned int\000"
 935      7420756E 
 935      7369676E 
 935      65642069 
 935      6E7400
 936              	.LASF14:
 937 0065 63686172 		.ascii	"char\000"
 937      00
 938              	.LASF29:
 939 006a 55415254 		.ascii	"UART_1_I2CSlaveNackGeneration\000"
 939      5F315F49 
 939      3243536C 
 939      6176654E 
 939      61636B47 
 940              	.LASF12:
 941 0088 666C6F61 		.ascii	"float\000"
 941      7400
 942              	.LASF28:
 943 008e 55415254 		.ascii	"UART_1_ScbModeStop\000"
 943      5F315F53 
 943      63624D6F 
 943      64655374 
 943      6F7000
 944              	.LASF1:
 945 00a1 756E7369 		.ascii	"unsigned char\000"
 945      676E6564 
 945      20636861 
 945      7200
 946              	.LASF20:
 947 00af 55415254 		.ascii	"UART_1_Stop\000"
 947      5F315F53 
 947      746F7000 
 948              	.LASF5:
 949 00bb 6C6F6E67 		.ascii	"long unsigned int\000"
 949      20756E73 
 949      69676E65 
 949      6420696E 
 949      7400
 950              	.LASF9:
 951 00cd 75696E74 		.ascii	"uint8\000"
 951      3800
 952              	.LASF26:
 953 00d3 55415254 		.ascii	"UART_1_ScbEnableIntr\000"
 953      5F315F53 
 953      6362456E 
 953      61626C65 
 953      496E7472 
 954              	.LASF13:
 955 00e8 646F7562 		.ascii	"double\000"
 955      6C6500
 956              	.LASF32:
 957 00ef 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 957      4320342E 
 957      392E3320 
 957      32303135 
 957      30333033 
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 33


 958 0122 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 958      20726576 
 958      6973696F 
 958      6E203232 
 958      31323230 
 959 0155 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 959      66756E63 
 959      74696F6E 
 959      2D736563 
 959      74696F6E 
 960              	.LASF10:
 961 017d 75696E74 		.ascii	"uint16\000"
 961      313600
 962              	.LASF34:
 963 0184 433A5C55 		.ascii	"C:\\Users\\Joseph\\Documents\\CY8CKIT-049-42xx\\1.0"
 963      73657273 
 963      5C4A6F73 
 963      6570685C 
 963      446F6375 
 964 01b2 5C466972 		.ascii	"\\Firmware\\SCB_Bootloader\\Sunrise Clock.cydsn\000"
 964      6D776172 
 964      655C5343 
 964      425F426F 
 964      6F746C6F 
 965              	.LASF11:
 966 01df 75696E74 		.ascii	"uint32\000"
 966      333200
 967              	.LASF8:
 968 01e6 756E7369 		.ascii	"unsigned int\000"
 968      676E6564 
 968      20696E74 
 968      00
 969              	.LASF33:
 970 01f3 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1.c\000"
 970      72617465 
 970      645F536F 
 970      75726365 
 970      5C50536F 
 971              	.LASF7:
 972 0213 6C6F6E67 		.ascii	"long long unsigned int\000"
 972      206C6F6E 
 972      6720756E 
 972      7369676E 
 972      65642069 
 973              	.LASF16:
 974 022a 73697A65 		.ascii	"sizetype\000"
 974      74797065 
 974      00
 975              	.LASF6:
 976 0233 6C6F6E67 		.ascii	"long long int\000"
 976      206C6F6E 
 976      6720696E 
 976      7400
 977              	.LASF15:
 978 0241 72656733 		.ascii	"reg32\000"
 978      3200
 979              	.LASF2:
ARM GAS  C:\Users\Joseph\AppData\Local\Temp\ccBcbUQH.s 			page 34


 980 0247 73686F72 		.ascii	"short int\000"
 980      7420696E 
 980      7400
 981              	.LASF22:
 982 0251 55415254 		.ascii	"UART_1_SetTxFifoLevel\000"
 982      5F315F53 
 982      65745478 
 982      4669666F 
 982      4C657665 
 983              	.LASF24:
 984 0267 72784669 		.ascii	"rxFifoCtrl\000"
 984      666F4374 
 984      726C00
 985              	.LASF4:
 986 0272 6C6F6E67 		.ascii	"long int\000"
 986      20696E74 
 986      00
 987              	.LASF31:
 988 027b 55415254 		.ascii	"UART_1_IntrTxMask\000"
 988      5F315F49 
 988      6E747254 
 988      784D6173 
 988      6B00
 989              	.LASF18:
 990 028d 55415254 		.ascii	"UART_1_Enable\000"
 990      5F315F45 
 990      6E61626C 
 990      6500
 991              	.LASF0:
 992 029b 7369676E 		.ascii	"signed char\000"
 992      65642063 
 992      68617200 
 993              	.LASF21:
 994 02a7 55415254 		.ascii	"UART_1_SetRxFifoLevel\000"
 994      5F315F53 
 994      65745278 
 994      4669666F 
 994      4C657665 
 995              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
